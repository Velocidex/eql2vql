name: Windows.Sysmon.EventDetection
type: CLIENT_EVENT
description: |
  Automated artifact for detection based on EQL.

  ### Exporting Exchange Mailbox via PowerShell
  ```
  process where event.type in ("start", "process_started") and
    process.name: ("powershell.exe", "pwsh.exe") and process.args : "New-MailboxExportRequest*"
  ```

  ### New ActiveSyncAllowedDeviceID Added via PowerShell
  ```
  process where event.type in ("start", "process_started") and
    process.name: ("powershell.exe", "pwsh.exe") and process.args : "Set-CASMailbox*ActiveSyncAllowedDeviceIDs*"
  ```

  ### Encrypting Files with WinRar or 7z
  ```
  process where event.type in ("start", "process_started") and
    ((process.name:"rar.exe" or process.code_signature.subject_name == "win.rar GmbH" or
        process.pe.original_file_name == "Command line RAR") and
      process.args == "a" and process.args : ("-hp*", "-p*", "-dw", "-tb", "-ta", "/hp*", "/p*", "/dw", "/tb", "/ta"))

    or
    (process.pe.original_file_name in ("7z.exe", "7za.exe") and
       process.args == "a" and process.args : ("-p*", "-sdel"))

    /* uncomment if noisy for backup software related FPs */
    /* not process.parent.executable : ("C:\\Program Files\\*.exe", "C:\\Program Files (x86)\\*.exe") */
  ```

  ### Connection to Commonly Abused Web Services
  ```
  network where network.protocol == "dns" and
      process.name != null and user.id not in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and
      /* Add new WebSvc domains here */
      dns.question.name :
      (
          "raw.githubusercontent.*",
          "*.pastebin.*",
          "*drive.google.*",
          "*docs.live.*",
          "*api.dropboxapi.*",
          "*dropboxusercontent.*",
          "*onedrive.*",
          "*4shared.*",
          "*.file.io",
          "*filebin.net",
          "*slack-files.com",
          "*ghostbin.*",
          "*ngrok.*",
          "*portmap.*",
          "*serveo.net",
          "*localtunnel.me",
          "*pagekite.me",
          "*localxpose.io",
          "*notabug.org",
          "rawcdn.githack.*",
          "paste.nrecom.net",
          "zerobin.net",
          "controlc.com",
          "requestbin.net"
      ) and
      /* Insert noisy false positives here */
      not process.executable :
      (
        "?:\\Program Files\\*.exe",
        "?:\\Program Files (x86)\\*.exe",
        "?:\\Windows\\System32\\WWAHost.exe",
        "?:\\Windows\\System32\\smartscreen.exe",
        "?:\\Windows\\System32\\MicrosoftEdgeCP.exe",
        "?:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe",
        "?:\\Users\\*\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe",
        "?:\\Users\\*\\AppData\\Local\\Programs\\Fiddler\\Fiddler.exe",
        "?:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",
        "?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe",
        "?:\\Windows\\system32\\mobsync.exe",
        "?:\\Windows\\SysWOW64\\mobsync.exe"
      )
  ```

  ### Connection to Commonly Abused Free SSL Certificate Providers
  ```
  network where network.protocol == "dns" and
    /* Add new free SSL certificate provider domains here */
    dns.question.name : ("*letsencrypt.org", "*.sslforfree.com", "*.zerossl.com", "*.freessl.org") and
    
    /* Native Windows process paths that are unlikely to have network connections to domains secured using free SSL certificates */
    process.executable : ("C:\\Windows\\System32\\*.exe",
                          "C:\\Windows\\System\\*.exe",
  	                  "C:\\Windows\\SysWOW64\\*.exe",
  		          "C:\\Windows\\Microsoft.NET\\Framework*\\*.exe",
  		          "C:\\Windows\\explorer.exe",
  		          "C:\\Windows\\notepad.exe") and
    
    /* Insert noisy false positives here */
    not process.name : ("svchost.exe", "MicrosoftEdge*.exe", "msedge.exe")
  ```

  ### Remote File Download via Desktopimgdownldr Utility
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "desktopimgdownldr.exe" or process.pe.original_file_name == "desktopimgdownldr.exe") and
    process.args : "/lockscreenurl:http*"
  ```

  ### Remote File Download via MpCmdRun
  ```
  process where event.type == "start" and
    (process.name : "MpCmdRun.exe" or process.pe.original_file_name == "MpCmdRun.exe") and
     process.args : "-DownloadFile" and process.args : "-url" and process.args : "-path"
  ```

  ### Remote File Copy via TeamViewer
  ```
  file where event.type == "creation" and process.name : "TeamViewer.exe" and
    file.extension : ("exe", "dll", "scr", "com", "bat", "ps1", "vbs", "vbe", "js", "wsh", "hta")
  ```

  ### Potential Credential Access via Windows Utilities
  ```
  process where event.type in ("start", "process_started") and
  /* update here with any new lolbas with dump capability */
  (process.pe.original_file_name == "procdump" and process.args : "-ma") or
  (process.name : "ProcessDump.exe" and not process.parent.executable regex~ """C:\\Program Files( \(x86\))?\\Cisco Systems\\.*""") or
  (process.pe.original_file_name == "WriteMiniDump.exe" and not process.parent.executable regex~ """C:\\Program Files( \(x86\))?\\Steam\\.*""") or
  (process.pe.original_file_name == "RUNDLL32.EXE" and (process.args : "MiniDump*" or process.command_line : "*comsvcs.dll*#24*")) or
  (process.pe.original_file_name == "RdrLeakDiag.exe" and process.args : "/fullmemdmp") or
  (process.pe.original_file_name == "SqlDumper.exe" and process.args : "0x01100*") or
  (process.pe.original_file_name == "TTTracer.exe" and process.args : "-dumpFull" and process.args : "-attach") or
  (process.pe.original_file_name == "ntdsutil.exe" and process.args : "create*full*") or
  (process.pe.original_file_name == "diskshadow.exe" and process.args : "/s")
  ```

  ### NTDS or SAM Database File Copied
  ```
  process where event.type in ("start", "process_started") and
    (
      (process.pe.original_file_name in ("Cmd.Exe", "PowerShell.EXE", "XCOPY.EXE") and
         process.args : ("copy", "xcopy", "Copy-Item", "move", "cp", "mv")
      ) or
      (process.pe.original_file_name : "esentutl.exe" and process.args : ("*/y*", "*/vss*", "*/d*"))
    ) and
    process.args : ("*\\ntds.dit", "*\\config\\SAM", "\\*\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*\\*", "*/system32/config/SAM*")
  ```

  ### Creation or Modification of Domain Backup DPAPI private key
  ```
  file where event.type != "deletion" and file.name : ("ntds_capi_*.pfx", "ntds_capi_*.pvk")
  ```

  ### Credential Acquisition via Registry Hive Dumping
  ```
  process where event.type in ("start", "process_started") and
   process.pe.original_file_name == "reg.exe" and
   process.args : ("save", "export") and
   process.args : ("hklm\\sam", "hklm\\security")
  ```

  ### Microsoft IIS Service Account Password Dumped
  ```
  process where event.type in ("start", "process_started") and
     (process.name : "appcmd.exe" or process.pe.original_file_name == "appcmd.exe") and 
     process.args : "/list" and process.args : "/text*password"
  ```

  ### Microsoft IIS Connection Strings Decryption
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "aspnet_regiis.exe" or process.pe.original_file_name == "aspnet_regiis.exe") and
    process.args : "connectionStrings" and process.args : "-pdf"
  ```

  ### Kerberos Traffic from Unusual Process
  ```
  network where event.type == "start" and network.direction == "outgoing" and
   destination.port == 88 and source.port >= 49152 and
   process.executable != "C:\\Windows\\System32\\lsass.exe" and destination.address !="127.0.0.1" and destination.address !="::1" and
   /* insert False Positives here */
   not process.name in ("swi_fc.exe", "fsIPcam.exe", "IPCamera.exe", "MicrosoftEdgeCP.exe", "MicrosoftEdge.exe", "iexplore.exe", "chrome.exe", "msedge.exe", "opera.exe", "firefox.exe")
  ```

  ### LSASS Memory Dump Creation
  ```
  file where file.name : ("lsass*.dmp", "dumpert.dmp", "Andrew.dmp", "SQLDmpr*.mdmp", "Coredump.dmp")
  ```

  ### Mimikatz Memssp Log File Detected
  ```
  file where file.name : "mimilsa.log" and process.name : "lsass.exe"
  ```

  ### Mimikatz Powershell Module Activity
  ```
  process where event.type in ("start", "process_started") and process.name : ("cmd.exe", "powershell.exe", "pwsh.exe")
  and process.args : ("*DumpCreds", "*Mimikatz*")
  ```

  ### Modification of WDigest Security Provider
  ```
  registry where event.type in ("creation", "change") and
    registry.path:"HKLM\\SYSTEM\\*ControlSet*\\Control\\SecurityProviders\\WDigest\\UseLogonCredential" and
    registry.data.strings:"1"
  ```

  ### Network Logon Provider Registry Modification
  ```
  registry where registry.data.strings != null and
   registry.path : "HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\NetworkProvider\\ProviderPath" and
   /* Excluding default NetworkProviders RDPNP, LanmanWorkstation and webclient. */
   not ( user.id : "S-1-5-18" and
         registry.data.strings in
                  ("%SystemRoot%\\System32\\ntlanman.dll",
                   "%SystemRoot%\\System32\\drprov.dll",
                   "%SystemRoot%\\System32\\davclnt.dll")
        )
  ```

  ### Searching for Saved Credentials via VaultCmd
  ```
  process where event.type in ("start", "process_started") and
    (process.pe.original_file_name:"vaultcmd.exe" or process.name:"vaultcmd.exe") and
    process.args:"/list*"
  ```

  ### Adding Hidden File Attribute via Attrib
  ```
  process where event.type in ("start", "process_started") and
    process.name : "attrib.exe" and process.args : "+h"
  ```

  ### Modification of AmsiEnable Registry Key
  ```
  registry where event.type in ("creation", "change") and
    registry.path: "HKEY_USERS\\*\\Software\\Microsoft\\Windows Script\\Settings\\AmsiEnable" and
    registry.data.strings: "0"
  ```

  ### Clearing Windows Event Logs
  ```
  process where event.type in ("process_started", "start") and
    (process.name : "wevtutil.exe" or process.pe.original_file_name == "wevtutil.exe") and
      process.args : ("/e:false", "cl", "clear-log") or
    process.name : "powershell.exe" and process.args : "Clear-EventLog"
  ```

  ### Suspicious Process from Conhost
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "conhost.exe" and
    not process.executable : ("?:\\Windows\\splwow64.exe", "?:\\Windows\\System32\\WerFault.exe", "?:\\Windows\\System32\\conhost.exe")
  ```

  ### Creation or Modification of Root Certificate
  ```
  registry where event.type in ("creation", "change") and
    registry.path :
      (
        "HKLM\\Software\\Microsoft\\SystemCertificates\\Root\\Certificates\\*\\Blob",
        "HKLM\\Software\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\*\\Blob",
        "HKLM\\Software\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\*\\Blob",
        "HKLM\\Software\\Policies\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\*\\Blob"
      )
  ```

  ### Windows Defender Disabled via Registry Modification
  ```
  registry where event.type in ("creation", "change") and
    ((registry.path:"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware" and
       registry.data.strings:"1") or
    (registry.path:"HKLM\\System\\ControlSet*\\Services\\WinDefend\\Start" and
       registry.data.strings in ("3", "4")))
  ```

  ### Windows Defender Exclusions Added via PowerShell
  ```
  process where event.type == "start" and
   (process.name : ("powershell.exe", "pwsh.exe") or process.pe.original_file_name : ("powershell.exe", "pwsh.exe")) and
    process.args : ("*Add-MpPreference*-Exclusion*", "*Set-MpPreference*-Exclusion*")
  ```

  ### Delete Volume USN Journal with Fsutil
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "fsutil.exe" or process.pe.original_file_name == "fsutil.exe") and 
    process.args : "deletejournal" and process.args : "usn"
  ```

  ### Deleting Backup Catalogs with Wbadmin
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "wbadmin.exe" or process.pe.original_file_name == "WBADMIN.EXE") and
    process.args : "catalog" and process.args : "delete"
  ```

  ### Disable Windows Firewall Rules via Netsh
  ```
  process where event.type in ("start", "process_started") and
    process.name : "netsh.exe" and
    (process.args : "disable" and process.args : "firewall" and process.args : "set") or
    (process.args : "advfirewall" and process.args : "off" and process.args : "state")
  ```

  ### Disabling Windows Defender Security Settings via PowerShell
  ```
  process where event.type == "start" and
   (process.name : ("powershell.exe", "pwsh.exe") or process.pe.original_file_name == "PowerShell.EXE") and
   process.args : "Set-MpPreference" and process.args : ("-Disable*", "Disabled", "NeverSend", "-Exclusion*")
  ```

  ### Disable Windows Event and Security Logs Using Built-in Tools
  ```
  process where event.type in ("start", "process_started") and

    ((process.name:"logman.exe" or process.pe.original_file_name == "Logman.exe") and
        process.args : "EventLog-*" and process.args : ("stop", "delete")) or

    ((process.name : ("pwsh.exe", "powershell.exe", "powershell_ise.exe") or process.pe.original_file_name in
        ("pwsh.exe", "powershell.exe", "powershell_ise.exe")) and
  	process.args : "Set-Service" and process.args: "EventLog" and process.args : "Disabled")  or
  	
    ((process.name:"auditpol.exe" or process.pe.original_file_name == "AUDITPOL.EXE") and process.args : "/success:disable")
  ```

  ### Suspicious .NET Code Compilation
  ```
  process where event.type in ("start", "process_started") and
    process.name : ("csc.exe", "vbc.exe") and
    process.parent.name : ("wscript.exe", "mshta.exe", "cscript.exe", "wmic.exe", "svchost.exe", "rundll32.exe", "cmstp.exe", "regsvr32.exe")
  ```

  ### Remote Desktop Enabled in Windows Firewall
  ```
  process where event.type in ("start", "process_started") and
   (process.name : "netsh.exe" or process.pe.original_file_name == "netsh.exe") and
   process.args : ("localport=3389", "RemoteDesktop", "group=\"remote desktop\"") and
   process.args : ("action=allow", "enable=Yes", "enable")
  ```

  ### Enable Host Network Discovery via Netsh
  ```
  process where event.type == "start" and
  process.name : "netsh.exe" and
  process.args : ("firewall", "advfirewall") and process.args : "group=Network Discovery" and process.args : "enable=Yes"
  ```

  ### Control Panel Process with Unusual Arguments
  ```
  process where event.type in ("start", "process_started") and
   process.executable : ("?:\\Windows\\SysWOW64\\control.exe", "?:\\Windows\\System32\\control.exe") and
   process.command_line :
            ("*.jpg*",
             "*.png*",
             "*.gif*",
             "*.bmp*",
             "*.jpeg*",
             "*.TIFF*",
             "*.inf*",
             "*.dat*",
             "*.cpl:*/*",
             "*../../..*",
             "*/AppData/Local/*",
             "*:\\Users\\Public\\*",
             "*\\AppData\\Local\\*")
  ```

  ### ImageLoad via Windows Update Auto Update Client
  ```
  process where event.type in ("start", "process_started") and
    (process.pe.original_file_name == "wuauclt.exe" or process.name : "wuauclt.exe") and
     /* necessary windows update client args to load a dll */
     process.args : "/RunHandlerComServer" and process.args : "/UpdateDeploymentProvider" and
     /* common paths writeable by a standard user where the target DLL can be placed */
     process.args : ("C:\\Users\\*.dll", "C:\\ProgramData\\*.dll", "C:\\Windows\\Temp\\*.dll", "C:\\Windows\\Tasks\\*.dll")
  ```

  ### Microsoft Build Engine Started by an Office Application
  ```
  process where event.type in ("start", "process_started") and
    process.name : "MSBuild.exe" and
    process.parent.name : ("eqnedt32.exe",
                           "excel.exe",
                           "fltldr.exe",
                           "msaccess.exe",
                           "mspub.exe",
                           "outlook.exe",
                           "powerpnt.exe",
                           "winword.exe" )
  ```

  ### Microsoft Build Engine Started by a Script Process
  ```
  process where event.type == "start" and
    (process.name : "MSBuild.exe" or process.pe.original_file_name == "MSBuild.exe") and
    process.parent.name : ("cmd.exe", "powershell.exe", "cscript.exe", "wscript.exe", "mshta.exe")
  ```

  ### Microsoft Build Engine Started by a System Process
  ```
  process where event.type in ("start", "process_started") and
    process.name : "MSBuild.exe" and
    process.parent.name : ("explorer.exe", "wmiprvse.exe")
  ```

  ### Microsoft Build Engine Using an Alternate Name
  ```
  process where event.type in ("start", "process_started") and
    process.pe.original_file_name == "MSBuild.exe" and
    not process.name : "MSBuild.exe"
  ```

  ### Microsoft Build Engine Started an Unusual Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "MSBuild.exe" and
    process.name : ("csc.exe", "iexplore.exe", "powershell.exe")
  ```

  ### Potential DLL SideLoading via Trusted Microsoft Programs
  ```
  process where event.type == "start" and
    process.pe.original_file_name in ("WinWord.exe", "EXPLORER.EXE", "w3wp.exe", "DISM.EXE") and
    not (process.name : ("winword.exe", "explorer.exe", "w3wp.exe", "Dism.exe") or
           process.executable : ("?:\\Windows\\explorer.exe",
                                 "?:\\Program Files\\Microsoft Office\\root\\Office*\\WINWORD.EXE",
                                 "?:\\Program Files?(x86)\\Microsoft Office\\root\\Office*\\WINWORD.EXE",
                                 "?:\\Windows\\System32\\Dism.exe",
                                 "?:\\Windows\\SysWOW64\\Dism.exe",
                                 "?:\\Windows\\System32\\inetsrv\\w3wp.exe")
           )
  ```

  ### Potential DLL Side-Loading via Microsoft Antimalware Service Executable
  ```
  process where event.type == "start" and
    (process.pe.original_file_name == "MsMpEng.exe" and not process.name : "MsMpEng.exe") or
    (process.name : "MsMpEng.exe" and not
          process.executable : ("?:\\ProgramData\\Microsoft\\Windows Defender\\*.exe",
                                "?:\\Program Files\\Windows Defender\\*.exe",
                                "?:\\Program Files (x86)\\Windows Defender\\*.exe"))
  ```

  ### Executable File Creation with Multiple Extensions
  ```
  file where event.type == "creation" and file.extension : "exe" and
    file.name regex~ """.*\.(vbs|vbe|bat|js|cmd|wsh|ps1|pdf|docx?|xlsx?|pptx?|txt|rtf|gif|jpg|png|bmp|hta|txt|img|iso)\.exe """
  ```

  ### Encoded Executable Stored in the Registry
  ```
  registry where
  /* update here with encoding combinations */
   registry.data.strings : "TVqQAAMAAAAEAAAA*"
  ```

  ### IIS HTTP Logging Disabled
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "appcmd.exe" or process.pe.original_file_name == "appcmd.exe") and
    process.args : "/dontLog*:*True" and
    not process.parent.name : "iissetup.exe"
  ```

  ### Suspicious Endpoint Security Parent Process
  ```
  process where event.type in ("start", "process_started", "info") and
   process.name : ("esensor.exe", "elastic-endpoint.exe") and
   process.parent.executable != null and
    /* add FPs here */
   not process.parent.executable : ("C:\\Program Files\\Elastic\\*", 
                                    "C:\\Windows\\System32\\services.exe", 
                                    "C:\\Windows\\System32\\WerFault*.exe", 
                                    "C:\\Windows\\System32\\wermgr.exe")
  ```

  ### Renamed AutoIt Scripts Interpreter
  ```
  process where event.type in ("start", "process_started", "info") and
    process.pe.original_file_name : "AutoIt*.exe" and not process.name : "AutoIt*.exe"
  ```

  ### Suspicious WerFault Child Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "WerFault.exe" and
    not process.name : ("cofire.exe",
                        "psr.exe",
                        "VsJITDebugger.exe",
                        "TTTracer.exe",
                        "rundll32.exe",
                        "LogiOptionsMgr.exe") and
    not process.args : ("/LOADSAVEDWINDOWS",
                        "/restore",
                        "RestartByRestartManager*",
                        "--restarted",
                        "createdump",
                        "dontsend",
                        "/watson")
  ```

  ### Program Files Directory Masquerading
  ```
  process where event.type == "start" and
   process.executable : "C:\\*Program*Files*\\*.exe" and
   not process.executable : ("C:\\Program Files\\*.exe", "C:\\Program Files (x86)\\*.exe", "C:\\Users\\*.exe", "C:\\ProgramData\\*.exe")
  ```

  ### Modification of Boot Configuration
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "bcdedit.exe" or process.pe.original_file_name == "bcdedit.exe") and
    (process.args : "/set" and process.args : "bootstatuspolicy" and process.args : "ignoreallfailures") or
    (process.args : "no" and process.args : "recoveryenabled")
  ```

  ### Port Forwarding Rule Addition
  ```
  registry where registry.path : "HKLM\\SYSTEM\\ControlSet*\\Services\\PortProxy\\v4tov4\\*"
  ```

  ### Scheduled Tasks AT Command Enabled
  ```
  registry where
   registry.path : "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\Configuration\\EnableAt" and registry.data.strings == "1"
  ```

  ### Potential Secure File Deletion via SDelete Utility
  ```
  file where event.type == "change" and file.name : "*AAA.AAA"
  ```

  ### SIP Provider Modification
  ```
  registry where event.type:"change" and
    registry.path: (
      "HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllPutSignedDataMsg\\{*}\\Dll",
      "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllPutSignedDataMsg\\{*}\\Dll",
      "HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{*}\\$Dll",
      "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{*}\\$Dll"
      ) and
    registry.data.strings:"*.dll"
  ```

  ### SolarWinds Process Disabling Services via Registry
  ```
  registry where registry.path : "HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\Start" and registry.data.strings == "4" and
   process.name : (
       "SolarWinds.BusinessLayerHost*.exe", 
       "ConfigurationWizard*.exe", 
       "NetflowDatabaseMaintenance*.exe", 
       "NetFlowService*.exe", 
       "SolarWinds.Administration*.exe", 
       "SolarWinds.Collector.Service*.exe" , 
       "SolarwindsDiagnostics*.exe")
  ```

  ### Suspicious CertUtil Commands
  ```
  process where event.type == "start" and
    (process.name : "certutil.exe" or process.pe.original_file_name == "CertUtil.exe") and 
    process.args : ("?decode", "?encode", "?urlcache", "?verifyctl", "?encodehex", "?decodehex")
  ```

  ### Suspicious Execution from a Mounted Device
  ```
  process where event.type == "start" and process.executable : "C:\\*" and
    (process.working_directory : "?:\\" and not process.working_directory: "C:\\") and
    process.parent.name : "explorer.exe" and
    process.name : ("rundll32.exe", "mshta.exe", "powershell.exe", "pwsh.exe", "cmd.exe", "regsvr32.exe",
                    "cscript.exe", "wscript.exe")
  ```

  ### Suspicious Zoom Child Process
  ```
  process where event.type in ("start", "process_started", "info") and
   process.parent.name : "Zoom.exe" and process.name : ("cmd.exe", "powershell.exe", "pwsh.exe")
  ```

  ### Unusual Executable File Creation by a System Critical Process
  ```
  file where event.type != "deletion" and
    file.extension : ("exe", "dll") and
    process.name : ("smss.exe",
                    "autochk.exe",
                    "csrss.exe",
                    "wininit.exe",
                    "services.exe",
                    "lsass.exe",
                    "winlogon.exe",
                    "userinit.exe",
                    "LogonUI.exe")
  ```

  ### Unusual File Creation - Alternate Data Stream
  ```
  file where event.type == "creation" and
    file.path : "C:\\*:*" and
    not file.path : "C:\\*:zone.identifier*" and
    file.extension :
      (
        "pdf",
        "dll",
        "png",
        "exe",
        "dat",
        "com",
        "bat",
        "cmd",
        "sys",
        "vbs",
        "ps1",
        "hta",
        "txt",
        "vbe",
        "js",
        "wsh",
        "docx",
        "doc",
        "xlsx",
        "xls",
        "pptx",
        "ppt",
        "rtf",
        "gif",
        "jpg",
        "png",
        "bmp",
        "img",
        "iso"
      )
  ```

  ### Unusual Process Execution Path - Alternate Data Stream
  ```
  process where event.type == "start" and
    process.args : "?:\\*:*" and process.args_count == 1
  ```

  ### Unusual Child Process from a System Virtual Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.pid == 4 and
    not process.executable : ("Registry", "MemCompression", "?:\\Windows\\System32\\smss.exe")
  ```

  ### Potential Evasion via Filter Manager
  ```
  process where event.type in ("start", "process_started") and
   process.name : "fltMC.exe" and process.args : "unload"
  ```

  ### Volume Shadow Copy Deletion via WMIC
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "WMIC.exe" or process.pe.original_file_name == "wmic.exe") and
    process.args : "delete" and process.args : "shadowcopy"
  ```

  ### Whitespace Padding in Process Command Line
  ```
  process where event.type in ("start", "process_started") and
    process.command_line regex ".*[ ]{20,}.*" or 
    
    /* this will match on 3 or more separate occurrences of 5+ contiguous whitespace characters */
    process.command_line regex ".*(.*[ ]{5,}[^ ]*){3,}.*"
  ```

  ### AdFind Command Activity
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "AdFind.exe" or process.pe.original_file_name == "AdFind.exe") and 
    process.args : ("objectcategory=computer", "(objectcategory=computer)", 
                    "objectcategory=person", "(objectcategory=person)",
                    "objectcategory=subnet", "(objectcategory=subnet)",
                    "objectcategory=group", "(objectcategory=group)", 
                    "objectcategory=organizationalunit", "(objectcategory=organizationalunit)",
                    "objectcategory=attributeschema", "(objectcategory=attributeschema)",
                    "domainlist", "dcmodes", "adinfo", "dclist", "computers_pwnotreqd", "trustdmp")
  ```

  ### Enumeration of Administrator Accounts
  ```
  process where event.type in ("start", "process_started") and
    (((process.name : "net.exe" or process.pe.original_file_name == "net.exe") or
      ((process.name : "net1.exe" or process.pe.original_file_name == "net1.exe") and
          not process.parent.name : "net.exe")) and
     process.args : ("group", "user", "localgroup") and
     process.args : ("admin", "Domain Admins", "Remote Desktop Users", "Enterprise Admins", "Organization Management") and
     not process.args : "/add")

     or

    ((process.name : "wmic.exe" or process.pe.original_file_name == "wmic.exe") and
       process.args : ("group", "useraccount"))
  ```

  ### Net command via SYSTEM account
  ```
  process where event.type in ("start", "process_started") and
    user.id in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and
    process.name : "whoami.exe" or
    (process.name : "net1.exe" and not process.parent.name : "net.exe")
  ```

  ### Windows Network Enumeration
  ```
  process where event.type in ("start", "process_started") and
    ((process.name : "net.exe" or process.pe.original_file_name == "net.exe") or
     ((process.name : "net1.exe" or process.pe.original_file_name == "net1.exe") and
         not process.parent.name : "net.exe")) and
    (process.args : "view" or (process.args : "time" and process.args : "\\\\*"))


    /* expand when ancestry is available
    and not descendant of [process where event.type == ("start", "process_started") and process.name : "cmd.exe" and
                             ((process.parent.name : "userinit.exe") or
                              (process.parent.name : "gpscript.exe") or
                              (process.parent.name : "explorer.exe" and
                                 process.args : "C:\\*\\Start Menu\\Programs\\Startup\\*.bat*"))]
    */
  ```

  ### Peripheral Device Discovery
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "fsutil.exe" or process.pe.original_file_name == "fsutil.exe") and 
    process.args : "fsinfo" and process.args : "drives"
  ```

  ### Remote System Discovery Commands
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "nbtstat.exe" and process.args : ("-n", "-s")) or
    (process.name : "arp.exe" and process.args : "-a")
  ```

  ### Security Software Discovery using WMIC
  ```
  process where event.type in ("start", "process_started") and
     (process.name:"wmic.exe" or process.pe.original_file_name:"wmic.exe") and
      process.args:"/namespace:\\\\root\\SecurityCenter2" and process.args:"Get"
  ```

  ### Command Execution via SolarWinds Process
  ```
  process where event.type in ("start", "process_started") and process.name: ("cmd.exe", "powershell.exe") and
  process.parent.name: (
       "ConfigurationWizard*.exe",
       "NetflowDatabaseMaintenance*.exe",
       "NetFlowService*.exe",
       "SolarWinds.Administration*.exe",
       "SolarWinds.Collector.Service*.exe",
       "SolarwindsDiagnostics*.exe"
       )
  ```

  ### Suspicious SolarWinds Child Process
  ```
  process where event.type in ("start", "process_started") and
   process.parent.name: ("SolarWinds.BusinessLayerHost.exe", "SolarWinds.BusinessLayerHostx64.exe") and
   not process.name : (
          "APMServiceControl*.exe",
          "ExportToPDFCmd*.Exe",
          "SolarWinds.Credentials.Orion.WebApi*.exe",
          "SolarWinds.Orion.Topology.Calculator*.exe",
          "Database-Maint.exe",
          "SolarWinds.Orion.ApiPoller.Service.exe",
          "WerFault.exe",
          "WerMgr.exe")
  ```

  ### Execution of COM object via Xwizard
  ```
  process where event.type in ("start", "process_started") and
   process.pe.original_file_name : "xwizard.exe" and
   (
     (process.args : "RunWizard" and process.args : "{*}") or
     (process.executable != null and
       not process.executable : ("C:\\Windows\\SysWOW64\\xwizard.exe", "C:\\Windows\\System32\\xwizard.exe")
     )
   )
  ```

  ### Svchost spawning Cmd
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "svchost.exe" and process.name : "cmd.exe" and 
    not (process.pe.original_file_name == "Cmd.Exe" and process.args : "?:\\Program Files\\Npcap\\CheckStatus.bat??")
  ```

  ### Unusual Parent Process for cmd.exe
  ```
  process where event.type in ("start", "process_started") and
    process.name : "cmd.exe" and
    process.parent.name : ("lsass.exe",
                           "csrss.exe",
                           "epad.exe",
                           "regsvr32.exe",
                           "dllhost.exe",
                           "LogonUI.exe",
                           "wermgr.exe",
                           "spoolsv.exe",
                           "jucheck.exe",
                           "jusched.exe",
                           "ctfmon.exe",
                           "taskhostw.exe",
                           "GoogleUpdate.exe",
                           "sppsvc.exe",
                           "sihost.exe",
                           "slui.exe",
                           "SIHClient.exe",
                           "SearchIndexer.exe",
                           "SearchProtocolHost.exe",
                           "FlashPlayerUpdateService.exe",
                           "WerFault.exe",
                           "WUDFHost.exe",
                           "unsecapp.exe",
                           "wlanext.exe" )
  ```

  ### Command Shell Activity Started via RunDLL32
  ```
  process where event.type == "start" and
   process.name : ("cmd.exe", "powershell.exe") and
    process.parent.name : "rundll32.exe" and process.parent.command_line != null and
    /* common FPs can be added here */
    not process.parent.args : ("C:\\Windows\\System32\\SHELL32.dll,RunAsNewUser_RunDLL",
                               "C:\\WINDOWS\\*.tmp,zzzzInvokeManagedCustomActionOutOfProc")
  ```

  ### Enumeration Command Spawned via WMIPrvSE
  ```
  process where event.type in ("start", "process_started") and
    process.name:
    (
      "arp.exe",
      "dsquery.exe",
      "dsget.exe",
      "gpresult.exe",
      "hostname.exe",
      "ipconfig.exe",
      "nbtstat.exe",
      "net.exe",
      "net1.exe",
      "netsh.exe",
      "netstat.exe",
      "nltest.exe",
      "ping.exe",
      "qprocess.exe",
      "quser.exe",
      "qwinsta.exe",
      "reg.exe",
      "sc.exe",
      "systeminfo.exe",
      "tasklist.exe",
      "tracert.exe",
      "whoami.exe"
    ) and
    process.parent.name:"wmiprvse.exe"
  ```

  ### Process Execution from an Unusual Directory
  ```
  process where event.type in ("start", "process_started", "info") and
   /* add suspicious execution paths here */
  process.executable : ("C:\\PerfLogs\\*.exe","C:\\Users\\Public\\*.exe","C:\\Users\\Default\\*.exe","C:\\Windows\\Tasks\\*.exe","C:\\Intel\\*.exe","C:\\AMD\\Temp\\*.exe","C:\\Windows\\AppReadiness\\*.exe",
  "C:\\Windows\\ServiceState\\*.exe","C:\\Windows\\security\\*.exe","C:\\Windows\\IdentityCRL\\*.exe","C:\\Windows\\Branding\\*.exe","C:\\Windows\\csc\\*.exe",
   "C:\\Windows\\DigitalLocker\\*.exe","C:\\Windows\\en-US\\*.exe","C:\\Windows\\wlansvc\\*.exe","C:\\Windows\\Prefetch\\*.exe","C:\\Windows\\Fonts\\*.exe",
   "C:\\Windows\\diagnostics\\*.exe","C:\\Windows\\TAPI\\*.exe","C:\\Windows\\INF\\*.exe","C:\\Windows\\System32\\Speech\\*.exe","C:\\windows\\tracing\\*.exe",
   "c:\\windows\\IME\\*.exe","c:\\Windows\\Performance\\*.exe","c:\\windows\\intel\\*.exe","c:\\windows\\ms\\*.exe","C:\\Windows\\dot3svc\\*.exe","C:\\Windows\\ServiceProfiles\\*.exe",
   "C:\\Windows\\panther\\*.exe","C:\\Windows\\RemotePackages\\*.exe","C:\\Windows\\OCR\\*.exe","C:\\Windows\\appcompat\\*.exe","C:\\Windows\\apppatch\\*.exe","C:\\Windows\\addins\\*.exe",
   "C:\\Windows\\Setup\\*.exe","C:\\Windows\\Help\\*.exe","C:\\Windows\\SKB\\*.exe","C:\\Windows\\Vss\\*.exe","C:\\Windows\\Web\\*.exe","C:\\Windows\\servicing\\*.exe","C:\\Windows\\CbsTemp\\*.exe",
   "C:\\Windows\\Logs\\*.exe","C:\\Windows\\WaaS\\*.exe","C:\\Windows\\twain_32\\*.exe","C:\\Windows\\ShellExperiences\\*.exe","C:\\Windows\\ShellComponents\\*.exe","C:\\Windows\\PLA\\*.exe",
   "C:\\Windows\\Migration\\*.exe","C:\\Windows\\debug\\*.exe","C:\\Windows\\Cursors\\*.exe","C:\\Windows\\Containers\\*.exe","C:\\Windows\\Boot\\*.exe","C:\\Windows\\bcastdvr\\*.exe",
   "C:\\Windows\\assembly\\*.exe","C:\\Windows\\TextInput\\*.exe","C:\\Windows\\security\\*.exe","C:\\Windows\\schemas\\*.exe","C:\\Windows\\SchCache\\*.exe","C:\\Windows\\Resources\\*.exe",
   "C:\\Windows\\rescache\\*.exe","C:\\Windows\\Provisioning\\*.exe","C:\\Windows\\PrintDialog\\*.exe","C:\\Windows\\PolicyDefinitions\\*.exe","C:\\Windows\\media\\*.exe",
   "C:\\Windows\\Globalization\\*.exe","C:\\Windows\\L2Schemas\\*.exe","C:\\Windows\\LiveKernelReports\\*.exe","C:\\Windows\\ModemLogs\\*.exe","C:\\Windows\\ImmersiveControlPanel\\*.exe") and
   not process.name : ("SpeechUXWiz.exe","SystemSettings.exe","TrustedInstaller.exe","PrintDialog.exe","MpSigStub.exe","LMS.exe","mpam-*.exe")
   /* uncomment once in winlogbeat */
   /* and not (process.code_signature.subject_name == "Microsoft Corporation" and process.code_signature.trusted == true) */
  ```

  ### Execution from Unusual Directory - Command Line
  ```
  process where event.type in ("start", "process_started", "info") and
    process.name : ("wscript.exe", 
                    "cscript.exe", 
                    "rundll32.exe", 
                    "regsvr32.exe", 
                    "cmstp.exe",
                    "RegAsm.exe",
                    "installutil.exe",
                    "mshta.exe",
                    "RegSvcs.exe", 
                    "powershell.exe", 
                    "pwsh.exe", 
                    "cmd.exe") and
                    
    /* add suspicious execution paths here */
    process.args : ("C:\\PerfLogs\\*",
                    "C:\\Users\\Public\\*",
                    "C:\\Users\\Default\\*",
                    "C:\\Windows\\Tasks\\*",
                    "C:\\Intel\\*", 
                    "C:\\AMD\\Temp\\*", 
                    "C:\\Windows\\AppReadiness\\*", 
                    "C:\\Windows\\ServiceState\\*",
                    "C:\\Windows\\security\\*",
                    "C:\\Windows\\IdentityCRL\\*",
                    "C:\\Windows\\Branding\\*",
                    "C:\\Windows\\csc\\*",
                    "C:\\Windows\\DigitalLocker\\*",
                    "C:\\Windows\\en-US\\*",
                    "C:\\Windows\\wlansvc\\*",
                    "C:\\Windows\\Prefetch\\*",
                    "C:\\Windows\\Fonts\\*",
                    "C:\\Windows\\diagnostics\\*",
                    "C:\\Windows\\TAPI\\*",
                    "C:\\Windows\\INF\\*",
                    "C:\\Windows\\System32\\Speech\\*",
                    "C:\\windows\\tracing\\*",
                    "c:\\windows\\IME\\*",
                    "c:\\Windows\\Performance\\*",
                    "c:\\windows\\intel\\*",
                    "c:\\windows\\ms\\*",
                    "C:\\Windows\\dot3svc\\*",
                    "C:\\Windows\\ServiceProfiles\\*",
                    "C:\\Windows\\panther\\*",
                    "C:\\Windows\\RemotePackages\\*",
                    "C:\\Windows\\OCR\\*",
                    "C:\\Windows\\appcompat\\*",
                    "C:\\Windows\\apppatch\\*",
                    "C:\\Windows\\addins\\*",
                    "C:\\Windows\\Setup\\*",
                    "C:\\Windows\\Help\\*",
                    "C:\\Windows\\SKB\\*",
                    "C:\\Windows\\Vss\\*",
                    "C:\\Windows\\Web\\*",
                    "C:\\Windows\\servicing\\*",
                    "C:\\Windows\\CbsTemp\\*",
                    "C:\\Windows\\Logs\\*",
                    "C:\\Windows\\WaaS\\*",
                    "C:\\Windows\\twain_32\\*",
                    "C:\\Windows\\ShellExperiences\\*",
                    "C:\\Windows\\ShellComponents\\*",
                    "C:\\Windows\\PLA\\*",
                    "C:\\Windows\\Migration\\*",
                    "C:\\Windows\\debug\\*",
                    "C:\\Windows\\Cursors\\*",
                    "C:\\Windows\\Containers\\*",
                    "C:\\Windows\\Boot\\*",
                    "C:\\Windows\\bcastdvr\\*",
                    "C:\\Windows\\assembly\\*",
                    "C:\\Windows\\TextInput\\*",
                    "C:\\Windows\\security\\*",
                    "C:\\Windows\\schemas\\*",
                    "C:\\Windows\\SchCache\\*",
                    "C:\\Windows\\Resources\\*",
                    "C:\\Windows\\rescache\\*",
                    "C:\\Windows\\Provisioning\\*",
                    "C:\\Windows\\PrintDialog\\*",
                    "C:\\Windows\\PolicyDefinitions\\*",
                    "C:\\Windows\\media\\*",
                    "C:\\Windows\\Globalization\\*",
                    "C:\\Windows\\L2Schemas\\*",
                    "C:\\Windows\\LiveKernelReports\\*",
                    "C:\\Windows\\ModemLogs\\*",
                    "C:\\Windows\\ImmersiveControlPanel\\*",
                    "C:\\$Recycle.Bin\\*") and
    not process.parent.executable : ("C:\\WINDOWS\\System32\\DriverStore\\FileRepository\\*\\igfxCUIService*.exe",
                                     "C:\\Windows\\System32\\spacedeskService.exe",
                                     "C:\\Program Files\\Dell\\SupportAssistAgent\\SRE\\SRE.exe") and
    not (process.name : "rundll32.exe" and process.args : ("uxtheme.dll,#64", "PRINTUI.DLL,PrintUIEntry"))
  ```

  ### Execution via local SxS Shared Module
  ```
  file where file.extension : "dll" and file.path : "C:\\*\\*.exe.local\\*.dll"
  ```

  ### Suspicious Cmd Execution via WMI
  ```
  process where event.type in ("start", "process_started") and
   process.parent.name : "WmiPrvSE.exe" and process.name : "cmd.exe" and
   process.args : "\\\\127.0.0.1\\*" and process.args : ("2>&1", "1>")
  ```

  ### Suspicious WMI Image Load from MS Office
  ```
  library where process.name : ("WINWORD.EXE", "EXCEL.EXE", "POWERPNT.EXE", "MSPUB.EXE", "MSACCESS.EXE") and
    event.action : "load" and
    event.category : "library" and
    dll.name : "wmiutils.dll"
  ```

  ### Suspicious PDF Reader Child Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : ("AcroRd32.exe",
                           "Acrobat.exe",
                           "FoxitPhantomPDF.exe",
                           "FoxitReader.exe") and
    process.name : ("arp.exe", "dsquery.exe", "dsget.exe", "gpresult.exe", "hostname.exe", "ipconfig.exe", "nbtstat.exe",
                    "net.exe", "net1.exe", "netsh.exe", "netstat.exe", "nltest.exe", "ping.exe", "qprocess.exe",
                    "quser.exe", "qwinsta.exe", "reg.exe", "sc.exe", "systeminfo.exe", "tasklist.exe", "tracert.exe",
                    "whoami.exe", "bginfo.exe", "cdb.exe", "cmstp.exe", "csi.exe", "dnx.exe", "fsi.exe", "ieexec.exe",
                    "iexpress.exe", "installutil.exe", "Microsoft.Workflow.Compiler.exe", "msbuild.exe", "mshta.exe",
                    "msxsl.exe", "odbcconf.exe", "rcsi.exe", "regsvr32.exe", "xwizard.exe", "atbroker.exe",
                    "forfiles.exe", "schtasks.exe", "regasm.exe", "regsvcs.exe", "cmd.exe", "cscript.exe",
                    "powershell.exe", "pwsh.exe", "wmic.exe", "wscript.exe", "bitsadmin.exe", "certutil.exe", "ftp.exe")
  ```

  ### Suspicious PowerShell Engine ImageLoad
  ```
  library where dll.name : ("System.Management.Automation.ni.dll", "System.Management.Automation.dll") and
  /* add false positives relevant to your environment here */
  not process.executable : ("C:\\Windows\\System32\\RemoteFXvGPUDisablement.exe", "C:\\Windows\\System32\\sdiagnhost.exe") and
  not process.executable regex~ """C:\\Program Files( \(x86\))?\\*\.exe""" and
    not process.name :
    (
      "Altaro.SubAgent.exe",
      "AppV_Manage.exe",
      "azureadconnect.exe",
      "CcmExec.exe",
      "configsyncrun.exe",
      "choco.exe",
      "ctxappvservice.exe",
      "DVLS.Console.exe",
      "edgetransport.exe",
      "exsetup.exe",
      "forefrontactivedirectoryconnector.exe",
      "InstallUtil.exe",
      "JenkinsOnDesktop.exe",
      "Microsoft.EnterpriseManagement.ServiceManager.UI.Console.exe",
      "mmc.exe",
      "mscorsvw.exe",
      "msexchangedelivery.exe",
      "msexchangefrontendtransport.exe",
      "msexchangehmworker.exe",
      "msexchangesubmission.exe",
      "msiexec.exe",
      "MsiExec.exe",
      "noderunner.exe",
      "NServiceBus.Host.exe",
      "NServiceBus.Host32.exe",
      "NServiceBus.Hosting.Azure.HostProcess.exe",
      "OuiGui.WPF.exe",
      "powershell.exe",
      "powershell_ise.exe",
      "pwsh.exe",
      "SCCMCliCtrWPF.exe",
      "ScriptEditor.exe",
      "ScriptRunner.exe",
      "sdiagnhost.exe",
      "servermanager.exe",
      "setup100.exe",
      "ServiceHub.VSDetouredHost.exe",
      "SPCAF.Client.exe",
      "SPCAF.SettingsEditor.exe",
      "SQLPS.exe",
      "telemetryservice.exe",
      "UMWorkerProcess.exe",
      "w3wp.exe",
      "wsmprovhost.exe"
    )
  ```

  ### Suspicious Process Execution via Renamed PsExec Executable
  ```
  process where event.type in ("start", "process_started", "info") and
    process.pe.original_file_name : "psexesvc.exe" and not process.name : "PSEXESVC.exe"
  ```

  ### Suspicious Execution - Short Program Name
  ```
  process where event.type in ("start", "process_started") and length(process.name) > 0 and
   length(process.name) == 5 and host.os.name == "Windows" and length(process.pe.original_file_name) > 5
  ```

  ### Process Activity via Compiled HTML File
  ```
  process where event.type in ("start", "process_started") and
   process.parent.name : "hh.exe" and 
   process.name : ("mshta.exe", "cmd.exe", "powershell.exe", "pwsh.exe", "cscript.exe", "wscript.exe")
  ```

  ### Conhost Spawned By Suspicious Parent Process
  ```
  process where event.type in ("start", "process_started") and
    process.name : "conhost.exe" and
    process.parent.name : ("svchost.exe", "lsass.exe", "services.exe", "smss.exe", "winlogon.exe", "explorer.exe",
                           "dllhost.exe", "rundll32.exe", "regsvr32.exe", "userinit.exe", "wininit.exe", "spoolsv.exe",
                           "wermgr.exe", "csrss.exe", "ctfmon.exe")
  ```

  ### Execution via MSSQL xp_cmdshell Stored Procedure
  ```
  process where event.type in ("start", "process_started") and
    process.name : "cmd.exe" and process.parent.name : "sqlservr.exe"
  ```

  ### Volume Shadow Copy Deletion via VssAdmin
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "vssadmin.exe" or process.pe.original_file_name == "VSSADMIN.EXE") and
    process.args : "delete" and process.args : "shadows"
  ```

  ### Windows Script Executing PowerShell
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : ("cscript.exe", "wscript.exe") and process.name : "powershell.exe"
  ```

  ### Microsoft Exchange Server UM Spawning Suspicious Processes
  ```
  process where event.type == "start" and
    process.parent.name : ("UMService.exe", "UMWorkerProcess.exe") and
      not process.name : ("werfault.exe", "wermgr.exe")
  ```

  ### Microsoft Exchange Worker Spawning Suspicious Processes
  ```
  process where event.type == "start" and
    process.parent.name : "w3wp.exe" and process.parent.args : "MSExchange*AppPool" and
    (process.name : ("cmd.exe", "powershell.exe", "pwsh.exe") or
    process.pe.original_file_name : ("cmd.exe", "powershell.exe", "pwsh.exe"))
  ```

  ### Suspicious MS Office Child Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : ("eqnedt32.exe", "excel.exe", "fltldr.exe", "msaccess.exe", "mspub.exe", "powerpnt.exe", "winword.exe") and
    process.name : ("Microsoft.Workflow.Compiler.exe", "arp.exe", "atbroker.exe", "bginfo.exe", "bitsadmin.exe", "cdb.exe", "certutil.exe",
                  "cmd.exe", "cmstp.exe", "control.exe", "cscript.exe", "csi.exe", "dnx.exe", "dsget.exe", "dsquery.exe", "forfiles.exe", 
                  "fsi.exe", "ftp.exe", "gpresult.exe", "hostname.exe", "ieexec.exe", "iexpress.exe", "installutil.exe", "ipconfig.exe", 
                  "mshta.exe", "msxsl.exe", "nbtstat.exe", "net.exe", "net1.exe", "netsh.exe", "netstat.exe", "nltest.exe", "odbcconf.exe", 
                  "ping.exe", "powershell.exe", "pwsh.exe", "qprocess.exe", "quser.exe", "qwinsta.exe", "rcsi.exe", "reg.exe", "regasm.exe", 
                  "regsvcs.exe", "regsvr32.exe", "sc.exe", "schtasks.exe", "systeminfo.exe", "tasklist.exe", "tracert.exe", "whoami.exe",
                  "wmic.exe", "wscript.exe", "xwizard.exe", "explorer.exe", "rundll32.exe", "hh.exe")
  ```

  ### Suspicious MS Outlook Child Process
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "outlook.exe" and
    process.name : ("Microsoft.Workflow.Compiler.exe", "arp.exe", "atbroker.exe", "bginfo.exe", "bitsadmin.exe",
                    "cdb.exe", "certutil.exe", "cmd.exe", "cmstp.exe", "cscript.exe", "csi.exe", "dnx.exe", "dsget.exe",
                    "dsquery.exe", "forfiles.exe", "fsi.exe", "ftp.exe", "gpresult.exe", "hostname.exe", "ieexec.exe",
                    "iexpress.exe", "installutil.exe", "ipconfig.exe", "mshta.exe", "msxsl.exe", "nbtstat.exe", "net.exe",
                    "net1.exe", "netsh.exe", "netstat.exe", "nltest.exe", "odbcconf.exe", "ping.exe", "powershell.exe",
                    "pwsh.exe", "qprocess.exe", "quser.exe", "qwinsta.exe", "rcsi.exe", "reg.exe", "regasm.exe",
                    "regsvcs.exe", "regsvr32.exe", "sc.exe", "schtasks.exe", "systeminfo.exe", "tasklist.exe",
                    "tracert.exe", "whoami.exe", "wmic.exe", "wscript.exe", "xwizard.exe")
  ```

  ### Unusual File Modification by dns.exe
  ```
  file where process.name : "dns.exe" and event.type in ("creation", "deletion", "change") and
    not file.name : "dns.log"
  ```

  ### Suspicious Explorer Child Process
  ```
  process where event.type in ("start", "process_started") and
    (
     process.name : ("cscript.exe", "wscript.exe", "powershell.exe", "rundll32.exe", "cmd.exe", "mshta.exe", "regsvr32.exe") or
     process.pe.original_file_name in ("cscript.exe", "wscript.exe", "PowerShell.EXE", "RUNDLL32.EXE", "Cmd.Exe", "MSHTA.EXE", "REGSVR32.EXE")
    ) and
    /* Explorer started via DCOM */
    process.parent.name : "explorer.exe" and process.parent.args : "-Embedding" and
    not process.parent.args:
            (
              /* Noisy CLSID_SeparateSingleProcessExplorerHost Explorer COM Class IDs   */
              "/factory,{5BD95610-9434-43C2-886C-57852CC8A120}",
              "/factory,{ceff45ee-c862-41de-aee2-a022c81eda92}"
            )
  ```

  ### NullSessionPipe Registry Modification
  ```
  registry where
  registry.path : "HKLM\\SYSTEM\\*ControlSet*\\services\\LanmanServer\\Parameters\\NullSessionPipes" and
  registry.data.strings != null
  ```

  ### Execution via TSClient Mountpoint
  ```
  process where event.type in ("start", "process_started") and process.executable : "\\Device\\Mup\\tsclient\\*.exe"
  ```

  ### Mounting Hidden or WebDav Remote Shares
  ```
  process where event.type in ("start", "process_started") and
   ((process.name : "net.exe" or process.pe.original_file_name == "net.exe") or ((process.name : "net1.exe" or process.pe.original_file_name == "net1.exe") and
   not process.parent.name : "net.exe")) and
   process.args : "use" and
   /* including hidden and webdav based online shares such as onedrive  */
   process.args : ("\\\\*\\*$*", "\\\\*@SSL\\*", "http*") and
   /* excluding shares deletion operation */
   not process.args : "/d*"
  ```

  ### RDP Enabled via Registry
  ```
  registry where
  registry.path : "HKLM\\SYSTEM\\ControlSet*\\Control\\Terminal Server\\fDenyTSConnections" and
  registry.data.strings == "0" and not (process.name : "svchost.exe" and user.domain == "NT AUTHORITY") and
  not process.executable : "C:\\Windows\\System32\\SystemPropertiesRemote.exe"
  ```

  ### Potential Remote Desktop Tunneling Detected
  ```
  process where event.type in ("start", "process_started") and
    /* RDP port and usual SSH tunneling related switches in command line */
    process.args : "*:3389" and
    process.args : ("-L", "-P", "-R", "-pw", "-ssh")
  ```

  ### Remote File Copy to a Hidden Share
  ```
  process where event.type in ("start", "process_started") and
    process.name : ("cmd.exe", "powershell.exe", "robocopy.exe", "xcopy.exe") and 
    process.args : ("copy*", "move*", "cp", "mv") and process.args : "*$*"
  ```

  ### Service Control Spawned via Script Interpreter
  ```
  process where event.type == "start" and
    (process.name : "sc.exe" or process.pe.original_file_name == "sc.exe") and
    process.parent.name : ("cmd.exe", "wscript.exe", "rundll32.exe", "regsvr32.exe",
                           "wmic.exe", "mshta.exe","powershell.exe", "pwsh.exe") and
    process.args:("config", "create", "start", "delete", "stop", "pause") and
    /* exclude SYSTEM SID - look for service creations by non-SYSTEM user */
    not user.id : "S-1-5-18"
  ```

  ### Suspicious RDP ActiveX Client Loaded
  ```
  library where dll.name : "mstscax.dll" and
     /* depending on noise in your env add here extra paths  */
    process.executable :
      (
      "C:\\Windows\\*",
      "C:\\Users\\Public\\*",
      "C:\\Users\\Default\\*",
      "C:\\Intel\\*",
      "C:\\PerfLogs\\*",
      "C:\\ProgramData\\*",
      "\\Device\\Mup\\*",
      "\\\\*"
      ) and
      /* add here FPs */
    not process.executable : ("C:\\Windows\\System32\\mstsc.exe", "C:\\Windows\\SysWOW64\\mstsc.exe")
  ```

  ### Lateral Movement via Startup Folder
  ```
  file where event.type in ("creation", "change") and
   /* via RDP TSClient mounted share or SMB */
    (process.name : "mstsc.exe" or process.pid == 4) and
     file.path : "C:\\*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"
  ```

  ### Adobe Hijack Persistence
  ```
  file where event.type == "creation" and
    file.path : ("?:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroCEF\\RdrCEF.exe",
                 "?:\\Program Files\\Adobe\\Acrobat Reader DC\\Reader\\AcroCEF\\RdrCEF.exe") and
    not process.name : "msiexec.exe"
  ```

  ### Registry Persistence via AppCert DLL
  ```
  registry where
  /* uncomment once stable length(bytes_written_string) > 0 and */
    registry.path : "HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\AppCertDLLs\\*"
  ```

  ### Registry Persistence via AppInit DLL
  ```
  registry where
     registry.path : ("HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls", 
                      "HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls") and
     not process.executable : ("C:\\Windows\\System32\\msiexec.exe", 
                               "C:\\Windows\\SysWOW64\\msiexec.exe", 
                               "C:\\Program Files\\Commvault\\ContentStore*\\Base\\cvd.exe",
                               "C:\\Program Files (x86)\\Commvault\\ContentStore*\\Base\\cvd.exe")
  ```

  ### Creation of a Hidden Local User Account
  ```
  registry where registry.path : "HKLM\\SAM\\SAM\\Domains\\Account\\Users\\Names\\*$\\"
  ```

  ### Image File Execution Options Injection
  ```
  registry where length(registry.data.strings) > 0 and
   registry.path : ("HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*.exe\\Debugger", 
                    "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*\\Debugger", 
                    "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\MonitorProcess", 
                    "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*\\MonitorProcess") and
     /* add FPs here */
   not registry.data.strings regex~ ("""C:\\Program Files( \(x86\))?\\ThinKiosk\\thinkiosk\.exe""", """.*\\PSAppDeployToolkit\\.*""")
  ```

  ### Suspicious Startup Shell Folder Modification
  ```
  registry where
   registry.path : (
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Common Startup",
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Common Startup",
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Startup",
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Startup"
       ) and
    registry.data.strings != null and
    /* Normal Startup Folder Paths */
    not registry.data.strings : (
             "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
             "%ProgramData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
             "%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
             "C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"
             )
  ```

  ### Creation or Modification of a new GPO Scheduled Task or Service
  ```
  file where event.type != "deletion" and
    file.path : ("?:\\Windows\\SYSVOL\\domain\\Policies\\*\\MACHINE\\Preferences\\ScheduledTasks\\ScheduledTasks.xml",
                 "?:\\Windows\\SYSVOL\\domain\\Policies\\*\\MACHINE\\Preferences\\Preferences\\Services\\Services.xml") and
    not process.name : "dfsrs.exe"
  ```

  ### Persistence via Scheduled Job Creation
  ```
  file where event.type != "deletion" and
   file.path : "?:\\Windows\\Tasks\\*" and file.extension : "job"
  ```

  ### Persistence via Microsoft Office AddIns
  ```
  file where event.type != "deletion" and
   file.extension : ("wll","xll","ppa","ppam","xla","xlam") and
   file.path :
      (
      "C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Word\\Startup\\*",
      "C:\\Users\\*\\AppData\\Roaming\\Microsoft\\AddIns\\*",
      "C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\*"
      )
  ```

  ### Persistence via Microsoft Outlook VBA
  ```
  file where event.type != "deletion" and
   file.path : "C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Outlook\\VbaProject.OTM"
  ```

  ### Potential Modification of Accessibility Binaries
  ```
  process where event.type in ("start", "process_started", "info") and
   process.parent.name : ("Utilman.exe", "winlogon.exe") and user.name == "SYSTEM" and
   process.args :
      (
      "C:\\Windows\\System32\\osk.exe",
      "C:\\Windows\\System32\\Magnify.exe",
      "C:\\Windows\\System32\\Narrator.exe",
      "C:\\Windows\\System32\\Sethc.exe",
      "utilman.exe",
      "ATBroker.exe",
      "DisplaySwitch.exe",
      "sethc.exe"
      )
   and not process.pe.original_file_name in
      (
      "osk.exe",
      "sethc.exe",
      "utilman2.exe",
      "DisplaySwitch.exe",
      "ATBroker.exe",
      "ScreenMagnifier.exe",
      "SR.exe",
      "Narrator.exe",
      "magnify.exe",
      "MAGNIFY.EXE"
      )

  /* uncomment once in winlogbeat to avoid bypass with rogue process with matching pe original file name */
  /* and process.code_signature.subject_name == "Microsoft Windows" and process.code_signature.status == "trusted" */
  ```

  ### Uncommon Registry Persistence Change
  ```
  registry where
    /* uncomment once stable length(registry.data.strings) > 0 and */
   registry.path : (
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\*",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\Install\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Runonce\\*",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Run",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\IconServiceLib",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AppSetup",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Taskman",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\VmApplet",
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*",
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell",
        "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script",
        "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script",
        "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script",
        "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell",
        "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script",
        "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script",
        "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script",
        "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script",
        "HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\*\\ShellComponent",
        "HKLM\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnConnect\\MicrosoftActiveSync",
        "HKLM\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect\\MicrosoftActiveSync",
        "HKLM\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath",
        "HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec",
        "HKLM\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script",
        "HKLM\\SOFTWARE\\Microsoft\\Command Processor\\Autorun",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script",
        "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Command Processor\\Autorun",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*\\VerifierDlls",
        "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GpExtensions\\*\\DllName",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\SafeBoot\\AlternateShell",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Terminal Server\\Wds\\rdpwd\\StartupPrograms",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\InitialProgram",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\BootExecute",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\SetupExecute",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\Execute",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\Session Manager\\S0InitialCommand",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\ServiceControlManagerExtension",
        "HKLM\\SYSTEM\\ControlSet*\\Control\\BootVerificationProgram\\ImagePath",
        "HKLM\\SYSTEM\\Setup\\CmdLine",
        "HKEY_USERS\\*\\Environment\\UserInitMprLogonScript") and
        
   not registry.data.strings : ("C:\\Windows\\system32\\userinit.exe", "cmd.exe", "C:\\Program Files (x86)\\*.exe",
                                "C:\\Program Files\\*.exe") and
   not (process.name : "rundll32.exe" and registry.path : "*\\Software\\Microsoft\\Internet Explorer\\Extensions\\*\\Script") and
   not process.executable : ("C:\\Windows\\System32\\msiexec.exe",
                             "C:\\Windows\\SysWOW64\\msiexec.exe",
                             "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\*\\MsMpEng.exe",
                             "C:\\Program Files\\*.exe",
                             "C:\\Program Files (x86)\\*.exe")
  ```

  ### Startup or Run Key Registry Modification
  ```
  registry where registry.data.strings != null and
   registry.path : (
       /* Machine Hive */
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", 
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*", 
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*",
       "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*", 
       "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*",   
       /* Users Hive */
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", 
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*", 
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*",
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*", 
       "HKEY_USERS\\*\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*"
       ) and
    /* add common legitimate changes without being too restrictive as this is one of the most abused AESPs */
    not registry.data.strings : "ctfmon.exe /n" and
    not (registry.value : "Application Restart #*" and process.name : "csrss.exe") and
    user.id not in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and
    not registry.data.strings : ("?:\\Program Files\\*.exe", "?:\\Program Files (x86)\\*.exe") and
    not process.executable : ("?:\\Windows\\System32\\msiexec.exe", "?:\\Windows\\SysWOW64\\msiexec.exe") and
    not (process.name : "OneDriveSetup.exe" and
         registry.value : ("Delete Cached Standalone Update Binary", "Delete Cached Update Binary", "amd64", "Uninstall *") and
         registry.data.strings : "?:\\Windows\\system32\\cmd.exe /q /c * \"?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\*\"")
  ```

  ### Unusual Persistence via Services Registry
  ```
  registry where registry.path : ("HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ServiceDLL", "HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ImagePath") and
    not registry.data.strings : ("?:\\windows\\system32\\Drivers\\*.sys",
                                 "\\SystemRoot\\System32\\drivers\\*.sys",
                                 "\\??\\?:\\Windows\\system32\\Drivers\\*.SYS",
                                 "system32\\DRIVERS\\USBSTOR") and
    not (process.name : "procexp??.exe" and registry.data.strings : "?:\\*\\procexp*.sys") and
    not process.executable : ("?:\\Program Files\\*.exe",
                              "?:\\Program Files (x86)\\*.exe",
                              "?:\\Windows\\System32\\svchost.exe",
                              "?:\\Windows\\winsxs\\*\\TiWorker.exe",
                              "?:\\Windows\\System32\\drvinst.exe",
                              "?:\\Windows\\System32\\services.exe",
                              "?:\\Windows\\System32\\msiexec.exe",
                              "?:\\Windows\\System32\\regsvr32.exe")
  ```

  ### Shortcut File Written or Modified for Persistence
  ```
  file where event.type != "deletion" and
    user.domain != "NT AUTHORITY" and
    file.path : ("C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*", 
                 "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\*") and
    process.name : ("cmd.exe",
                    "powershell.exe",
                    "wmic.exe",
                    "mshta.exe",
                    "pwsh.exe",
                    "cscript.exe",
                    "wscript.exe",
                    "regsvr32.exe",
                    "RegAsm.exe",
                    "rundll32.exe",
                    "EQNEDT32.EXE",
                    "WINWORD.EXE",
                    "EXCEL.EXE",
                    "POWERPNT.EXE",
                    "MSPUB.EXE",
                    "MSACCESS.EXE",
                    "iexplore.exe",
                    "InstallUtil.exe")
  ```

  ### Persistent Scripts in the Startup Directory
  ```
  file where event.type != "deletion" and user.domain != "NT AUTHORITY" and
    
    /* detect shortcuts created by wscript.exe or cscript.exe */
    (file.path : "C:\\*\\Programs\\Startup\\*.lnk" and
       process.name : ("wscript.exe", "cscript.exe")) or

    /* detect vbs or js files created by any process */
    file.path : ("C:\\*\\Programs\\Startup\\*.vbs", 
                 "C:\\*\\Programs\\Startup\\*.vbe", 
                 "C:\\*\\Programs\\Startup\\*.wsh", 
                 "C:\\*\\Programs\\Startup\\*.wsf", 
                 "C:\\*\\Programs\\Startup\\*.js")
  ```

  ### Component Object Model Hijacking
  ```
  registry where
   /* uncomment once length is stable length(bytes_written_string) > 0 and */
   (registry.path : "HK*}\\InprocServer32\\" and registry.data.strings: ("scrobj.dll", "C:\\*\\scrobj.dll") and
   not registry.path : "*\\{06290BD*-48AA-11D2-8432-006008C3FBFC}\\*") 
   or
   /* in general COM Registry changes on Users Hive is less noisy and worth alerting */
   (registry.path : ("HKEY_USERS\\*Classes\\*\\InprocServer32\\",
                     "HKEY_USERS\\*Classes\\*\\LocalServer32\\", 
                     "HKEY_USERS\\*Classes\\*\\DelegateExecute\\", 
                     "HKEY_USERS\\*Classes\\*\\TreatAs\\", 
                     "HKEY_USERS\\*Classes\\CLSID\\*\\ScriptletURL\\") and
   /* not necessary but good for filtering privileged installations */
   user.domain != "NT AUTHORITY")
  ```

  ### Suspicious Image Load (taskschd.dll) from MS Office
  ```
  library where process.name : ("WINWORD.EXE", "EXCEL.EXE", "POWERPNT.EXE", "MSPUB.EXE", "MSACCESS.EXE") and
    event.action : "load" and
    event.category : "library" and
    dll.name : "taskschd.dll"
  ```

  ### Suspicious Execution via Scheduled Task
  ```
  process where event.type == "start" and
      /* Schedule service cmdline on Win10+ */
      process.parent.name : "svchost.exe" and process.parent.args : "Schedule" and
      /* add suspicious programs here */
      process.pe.original_file_name in
                                  (
                                    "cscript.exe",
                                    "wscript.exe",
                                    "PowerShell.EXE",
                                    "Cmd.Exe",
                                    "MSHTA.EXE",
                                    "RUNDLL32.EXE",
                                    "REGSVR32.EXE",
                                    "MSBuild.exe",
                                    "InstallUtil.exe",
                                    "RegAsm.exe",
                                    "RegSvcs.exe",
                                    "msxsl.exe",
                                    "CONTROL.EXE",
                                    "EXPLORER.EXE",
                                    "Microsoft.Workflow.Compiler.exe",
                                    "msiexec.exe"
                                    ) and
      /* add suspicious paths here */
      process.args : (
         "C:\\Users\\*",
         "C:\\ProgramData\\*", 
         "C:\\Windows\\Temp\\*", 
         "C:\\Windows\\Tasks\\*", 
         "C:\\PerfLogs\\*", 
         "C:\\Intel\\*", 
         "C:\\Windows\\Debug\\*", 
         "C:\\HP\\*")
  ```

  ### Suspicious ImagePath Service Creation
  ```
  registry where registry.path : "HKLM\\SYSTEM\\ControlSet*\\Services\\*\\ImagePath" and
   /* add suspicious registry ImagePath values here */
   registry.data.strings : ("%COMSPEC%*", "*\\.\\pipe\\*")
  ```

  ### System Shells via Services
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "services.exe" and
    process.name : ("cmd.exe", "powershell.exe") and
    
    /* Third party FP's */
    not process.args : "NVDisplay.ContainerLocalSystem"
  ```

  ### Potential Persistence via Time Provider Modification
  ```
  registry where event.type:"change" and
    registry.path:"HKLM\\SYSTEM\\*ControlSet*\\Services\\W32Time\\TimeProviders\\*" and
    registry.data.strings:"*.dll"
  ```

  ### User Account Creation
  ```
  process where event.type in ("start", "process_started") and
    process.name : ("net.exe", "net1.exe") and
    not process.parent.name : "net.exe" and
    (process.args : "user" and process.args : ("/ad", "/add"))
  ```

  ### Potential Application Shimming via Sdbinst
  ```
  process where event.type in ("start", "process_started") and process.name : "sdbinst.exe"
  ```

  ### Persistence via BITS Job Notify Cmdline
  ```
  process where event.type == "start" and
    process.parent.name : "svchost.exe" and process.parent.args : "BITS" and
    not process.executable :
                ("?:\\Windows\\System32\\WerFaultSecure.exe",
                 "?:\\Windows\\System32\\WerFault.exe",
                 "?:\\Windows\\System32\\wermgr.exe",
                 "?:\\WINDOWS\\system32\\directxdatabaseupdater.exe")
  ```

  ### Persistence via Hidden Run Key Detected
  ```
  /* Registry Path ends with backslash */
  registry where /* length(registry.data.strings) > 0 and */
   registry.path : ("HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", 
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", 
                    "HKLM\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\", 
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\", 
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\")
  ```

  ### Installation of Security Support Provider
  ```
  registry where
     registry.path : ("HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages*", 
                      "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages*") and
     not process.executable : ("C:\\Windows\\System32\\msiexec.exe", "C:\\Windows\\SysWOW64\\msiexec.exe")
  ```

  ### Persistence via TelemetryController Scheduled Task Hijack
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "CompatTelRunner.exe" and process.args : "-cv*" and
    not process.name : ("conhost.exe",
                        "DeviceCensus.exe",
                        "CompatTelRunner.exe",
                        "DismHost.exe",
                        "rundll32.exe",
                        "powershell.exe")
  ```

  ### Persistence via Update Orchestrator Service Hijack
  ```
  process where event.type == "start" and
    process.parent.executable : "C:\\Windows\\System32\\svchost.exe" and
    process.parent.args : "UsoSvc" and
    not process.executable :
           (
            "C:\\Windows\\System32\\UsoClient.exe",
            "C:\\Windows\\System32\\MusNotification.exe",
            "C:\\Windows\\System32\\MusNotificationUx.exe",
            "C:\\Windows\\System32\\MusNotifyIcon.exe",
            "C:\\Windows\\System32\\WerFault.exe",
            "C:\\Windows\\System32\\WerMgr.exe"
            )
  ```

  ### Persistence via WMI Event Subscription
  ```
  process where event.type in ("start", "process_started") and
    (process.name : "wmic.exe" or process.pe.original_file_name == "wmic.exe") and
    process.args : "create" and
    process.args : ("ActiveScriptEventConsumer", "CommandLineEventConsumer")
  ```

  ### Persistence via WMI Standard Registry Provider
  ```
  registry where
   registry.data.strings != null and process.name : "WmiPrvSe.exe" and
   registry.path : (
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*",
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*",
                    "HKLM\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\*",
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*",
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\\*",
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*",
                    "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*",
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\*",
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\*",
                    "HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\ServiceDLL",
                    "HKLM\\SYSTEM\\*ControlSet*\\Services\\*\\ImagePath",
                    "HKEY_USERS\\*\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\\*", 
                    "HKEY_USERS\\*\\Environment\\UserInitMprLogonScript", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\Shell", 
                    "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logoff\\Script", 
                    "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Logon\\Script", 
                    "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Shutdown\\Script", 
                    "HKEY_USERS\\*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\Scripts\\Startup\\Script", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Ctf\\LangBarAddin\\*\\FilePath", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Exec", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Internet Explorer\\Extensions\\*\\Script", 
                    "HKEY_USERS\\*\\SOFTWARE\\Microsoft\\Command Processor\\Autorun"
                    )
  ```

  ### Webshell Detection: Script Process Child of Common Web Processes
  ```
  process where event.type == "start" and
    process.parent.name : ("w3wp.exe", "httpd.exe", "nginx.exe", "php.exe", "php-cgi.exe", "tomcat.exe") and
    process.name : ("cmd.exe", "cscript.exe", "powershell.exe", "pwsh.exe", "wmic.exe", "wscript.exe")
  ```

  ### Disabling User Account Control via Registry Modification
  ```
  registry where event.type == "change" and
    registry.path :
      (
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA",
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin",
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\PromptOnSecureDesktop"
      ) and
    registry.data.strings : "0"
  ```

  ### Potential LSA Authentication Package Abuse
  ```
  registry where event.type == "change" and
    registry.path : "HKLM\\SYSTEM\\*ControlSet*\\Control\\Lsa\\Authentication Packages" and
    /* exclude SYSTEM SID - look for changes by non-SYSTEM user */
    not user.id : "S-1-5-18"
  ```

  ### Privilege Escalation via Named Pipe Impersonation
  ```
  process where event.type in ("start", "process_started") and
   process.pe.original_file_name in ("Cmd.Exe", "PowerShell.EXE") and 
   process.args : "echo" and process.args : ">" and process.args : "\\\\.\\pipe\\*"
  ```

  ### Suspicious DLL Loaded for Persistence or Privilege Escalation
  ```
  library where dll.name :
    (
    "wlbsctrl.dll",
    "wbemcomn.dll",
    "WptsExtensions.dll",
    "Tsmsisrv.dll",
    "TSVIPSrv.dll",
    "Msfte.dll",
    "wow64log.dll",
    "WindowsCoreDeviceInfo.dll",
    "Ualapi.dll",
    "wlanhlp.dll",
    "phoneinfo.dll",
    "EdgeGdi.dll",
    "cdpsgshims.dll",
    "windowsperformancerecordercontrol.dll",
    "diagtrack_win.dll"
    ) and 
  not (dll.code_signature.subject_name : ("Microsoft Windows", "Microsoft Corporation") and dll.code_signature.status : "trusted")
  ```

  ### Potential Port Monitor or Print Processor Registration Abuse
  ```
  registry where event.type in ("creation", "change") and
    registry.path : ("HKLM\\SYSTEM\\*ControlSet*\\Control\\Print\\Monitors\\*",
      "HLLM\\SYSTEM\\*ControlSet*\\Control\\Print\\Environments\\Windows*\\Print Processors\\*") and
    registry.data.strings : "*.dll" and
    /* exclude SYSTEM SID - look for changes by non-SYSTEM user */
    not user.id : "S-1-5-18"
  ```

  ### Potential PrintNightmare File Modification
  ```
  /* This rule is compatible with both Sysmon and Elastic Endpoint */

  file where process.name : "spoolsv.exe" and 
   file.name : ("kernelbase.dll", "ntdll.dll", "kernel32.dll", "winhttp.dll", "user32.dll") and
   file.path : "?:\\Windows\\System32\\spool\\drivers\\x64\\3\\*"
  ```

  ### Potential PrintNightmare Exploit Registry Modification
  ```
  /* This rule is not compatible with Sysmon due to schema issues */

  registry where process.name : "spoolsv.exe" and
    (registry.path : "HKLM\\SYSTEM\\ControlSet*\\Control\\Print\\Environments\\Windows*\\Drivers\\Version-3\\mimikatz*\\Data File" or
    (registry.path : "HKLM\\SYSTEM\\ControlSet*\\Control\\Print\\Environments\\Windows*\\Drivers\\Version-3\\*\\Configuration File" and
     registry.data.strings : ("kernelbase.dll", "ntdll.dll", "kernel32.dll", "winhttp.dll", "user32.dll")))
  ```

  ### Suspicious PrintSpooler Service Executable File Creation
  ```
  file where event.type != "deletion" and process.name : "spoolsv.exe" and
    file.extension : ("exe", "dll") and
    not file.path : ("?:\\Windows\\System32\\spool\\*", "?:\\Windows\\Temp\\*", "?:\\Users\\*")
  ```

  ### Suspicious Print Spooler File Deletion
  ```
  file where event.type : "deletion" and
   not process.name : ("spoolsv.exe", "dllhost.exe", "explorer.exe") and
   file.path : "?:\\Windows\\System32\\spool\\drivers\\x64\\3\\*.dll"
  ```

  ### Suspicious PrintSpooler SPL File Created
  ```
  file where event.type != "deletion" and
    file.extension : "spl" and
    file.path : "?:\\Windows\\System32\\spool\\PRINTERS\\*" and
    not process.name : ("spoolsv.exe",
                        "printfilterpipelinesvc.exe",
                        "PrintIsolationHost.exe",
                        "splwow64.exe",
                        "msiexec.exe",
                        "poqexec.exe")
  ```

  ### Privilege Escalation via Windir Environment Variable
  ```
  registry where registry.path : ("HKEY_USERS\\*\\Environment\\windir", "HKEY_USERS\\*\\Environment\\systemroot") and
   not registry.data.strings : ("C:\\windows", "%SystemRoot%")
  ```

  ### UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface
  ```
  process where event.type in ("start", "process_started") and process.name : "Clipup.exe" and
    not process.executable : "C:\\Windows\\System32\\ClipUp.exe" and process.parent.name : "dllhost.exe" and
    /* CLSID of the Elevated COM Interface IEditionUpgradeManager */
    process.parent.args : "/Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}"
  ```

  ### UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer
  ```
  process where event.type in ("start", "process_started") and
   process.executable : "C:\\*\\AppData\\*\\Temp\\IDC*.tmp\\*.exe" and
   process.parent.name : "ieinstal.exe" and process.parent.args : "-Embedding"

   /* uncomment once in winlogbeat */
   /* and not (process.code_signature.subject_name == "Microsoft Corporation" and process.code_signature.trusted == true) */
  ```

  ### UAC Bypass via ICMLuaUtil Elevated COM Interface
  ```
  process where event.type in ("start", "process_started") and
   process.parent.name == "dllhost.exe" and
   process.parent.args in ("/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}", "/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}") and
   process.pe.original_file_name != "WerFault.exe"
  ```

  ### UAC Bypass via DiskCleanup Scheduled Task Hijack
  ```
  process where event.type == "start" and
   process.args : "/autoclean" and process.args : "/d" and
   not process.executable : ("C:\\Windows\\System32\\cleanmgr.exe",
                             "C:\\Windows\\SysWOW64\\cleanmgr.exe",
                             "C:\\Windows\\System32\\taskhostw.exe")
  ```

  ### UAC Bypass Attempt via Privileged IFileOperation COM Interface
  ```
  file where event.type : "change" and process.name : "dllhost.exe" and
    /* Known modules names side loaded into process running with high or system integrity level for UAC Bypass, update here for new modules */
    file.name : ("wow64log.dll", "comctl32.dll", "DismCore.dll", "OskSupport.dll", "duser.dll", "Accessibility.ni.dll") and
    /* has no impact on rule logic just to avoid OS install related FPs */
    not file.path : ("C:\\Windows\\SoftwareDistribution\\*", "C:\\Windows\\WinSxS\\*")
  ```

  ### Bypass UAC via Event Viewer
  ```
  process where event.type in ("start", "process_started") and
    process.parent.name : "eventvwr.exe" and
    not process.executable : 
              ("?:\\Windows\\SysWOW64\\mmc.exe", 
               "?:\\Windows\\System32\\mmc.exe",
               "?:\\Windows\\SysWOW64\\WerFault.exe",
               "?:\\Windows\\System32\\WerFault.exe")
  ```

  ### UAC Bypass Attempt via Windows Directory Masquerading
  ```
  process where event.type in ("start", "process_started") and
    process.args : ("C:\\Windows \\system32\\*.exe", "C:\\Windows \\SysWOW64\\*.exe")
  ```

  ### UAC Bypass via Windows Firewall Snap-In Hijack
  ```
  process where event.type in ("start", "process_started") and
   process.parent.name == "mmc.exe" and
   /* process.Ext.token.integrity_level_name == "high" can be added in future for tuning */
   /* args of the Windows Firewall SnapIn */
    process.parent.args == "WF.msc" and process.name != "WerFault.exe"
  ```

  ### Unusual Parent-Child Relationship
  ```
  process where event.type in ("start", "process_started") and
  process.parent.name != null and
   (
     /* suspicious parent processes */
     (process.name:"autochk.exe" and not process.parent.name:"smss.exe") or
     (process.name:("fontdrvhost.exe", "dwm.exe") and not process.parent.name:("wininit.exe", "winlogon.exe")) or
     (process.name:("consent.exe", "RuntimeBroker.exe", "TiWorker.exe") and not process.parent.name:"svchost.exe") or
     (process.name:"SearchIndexer.exe" and not process.parent.name:"services.exe") or
     (process.name:"SearchProtocolHost.exe" and not process.parent.name:("SearchIndexer.exe", "dllhost.exe")) or
     (process.name:"dllhost.exe" and not process.parent.name:("services.exe", "svchost.exe")) or
     (process.name:"smss.exe" and not process.parent.name:("System", "smss.exe")) or
     (process.name:"csrss.exe" and not process.parent.name:("smss.exe", "svchost.exe")) or
     (process.name:"wininit.exe" and not process.parent.name:"smss.exe") or
     (process.name:"winlogon.exe" and not process.parent.name:"smss.exe") or
     (process.name:("lsass.exe", "LsaIso.exe") and not process.parent.name:"wininit.exe") or
     (process.name:"LogonUI.exe" and not process.parent.name:("wininit.exe", "winlogon.exe")) or
     (process.name:"services.exe" and not process.parent.name:"wininit.exe") or
     (process.name:"svchost.exe" and not process.parent.name:("MsMpEng.exe", "services.exe")) or
     (process.name:"spoolsv.exe" and not process.parent.name:"services.exe") or
     (process.name:"taskhost.exe" and not process.parent.name:("services.exe", "svchost.exe")) or
     (process.name:"taskhostw.exe" and not process.parent.name:("services.exe", "svchost.exe")) or
     (process.name:"userinit.exe" and not process.parent.name:("dwm.exe", "winlogon.exe")) or
     (process.name:("wmiprvse.exe", "wsmprovhost.exe", "winrshost.exe") and not process.parent.name:"svchost.exe") or
     /* suspicious child processes */
     (process.parent.name:("SearchProtocolHost.exe", "taskhost.exe", "csrss.exe") and not process.name:("werfault.exe", "wermgr.exe", "WerFaultSecure.exe")) or
     (process.parent.name:"autochk.exe" and not process.name:("chkdsk.exe", "doskey.exe", "WerFault.exe")) or
     (process.parent.name:"smss.exe" and not process.name:("autochk.exe", "smss.exe", "csrss.exe", "wininit.exe", "winlogon.exe", "setupcl.exe", "WerFault.exe")) or
     (process.parent.name:"wermgr.exe" and not process.name:("WerFaultSecure.exe", "wermgr.exe", "WerFault.exe")) or
     (process.parent.name:"conhost.exe" and not process.name:("mscorsvw.exe", "wermgr.exe", "WerFault.exe", "WerFaultSecure.exe"))
    )
  ```

  ### Unusual Print Spooler Child Process
  ```
  process where event.type == "start" and
   process.parent.name : "spoolsv.exe" and user.id : "S-1-5-18" and

   /* exclusions for FP control below */
   not process.name : ("splwow64.exe", "PDFCreator.exe", "acrodist.exe", "spoolsv.exe", "msiexec.exe", "route.exe", "WerFault.exe") and
   not process.command_line : "*\\WINDOWS\\system32\\spool\\DRIVERS*" and
   not (process.name : "net.exe" and process.command_line : ("*stop*", "*start*")) and
   not (process.name : ("cmd.exe", "powershell.exe") and process.command_line : ("*.spl*", "*\\program files*", "*route add*")) and
   not (process.name : "netsh.exe" and process.command_line : ("*add portopening*", "*rule name*")) and
   not (process.name : "regsvr32.exe" and process.command_line : "*PrintConfig.dll*")
  ```

  ### Unusual Service Host Child Process - Childless Service
  ```
  process where event.type in ("start", "process_started") and
       process.parent.name : "svchost.exe" and

       /* based on svchost service arguments -s svcname where the service is known to be childless */

      process.parent.args : ("WdiSystemHost","LicenseManager",
        "StorSvc","CDPSvc","cdbhsvc","BthAvctpSvc","SstpSvc","WdiServiceHost",
        "imgsvc","TrkWks","WpnService","IKEEXT","PolicyAgent","CryptSvc",
        "netprofm","ProfSvc","StateRepository","camsvc","LanmanWorkstation",
        "NlaSvc","EventLog","hidserv","DisplayEnhancementService","ShellHWDetection",
        "AppHostSvc","fhsvc","CscService","PushToInstall") and

        /* unknown FPs can be added here */

       not process.name : ("WerFault.exe","WerFaultSecure.exe","wermgr.exe")
  ```
parameters: []
sources:
- query: |-
    LET SysmonGenerator = generate(name="Sysmon",
    query={
      SELECT dict(EventID=dict(Value=System.ID),
                  Timestamp=System.TimeStamp) AS System,
             EventData
      FROM watch_etw(guid='{5770385f-c22a-43e0-bf4c-06f5698ffbd9}')
      WHERE get(field="EventData")
    }, delay=500)

    LET FileInfo = generate(name="FileInfo", query={
       SELECT *,
              get(item=FileTypes, field=str(str=System.EventID.Value)) AS event_type
       FROM SysmonGenerator
       WHERE System.EventID.Value in (23, 11)
    })

    LET FileTypes <= dict(`23`="deletion", `11`="creation")

    LET LibraryInfo = generate(name="LibraryInfo", query={
      SELECT *, "load" AS action, "library" AS category
      FROM SysmonGenerator
      WHERE System.EventID.Value in 7
    })

    LET NetworkInfo = generate(name="NetworkInfo", query={
      SELECT *, "dns" AS protocol
      FROM SysmonGenerator
      WHERE System.EventID.Value = 22
    })

    LET NormalizeHive(Path) = regex_transform(
        key="hives", map=dict(
          `^HKCR`="HKEY_CLASSES_ROOT", `^HKCU`="HKEY_CURRENT_USER",
          `^HKLM`="HKEY_LOCAL_MACHINE", `^HKU`="HKEY_USERS"
        ), source=Path)

    LET ParseDetails(Details) = if(condition=Details =~ "[QD]WORD",
    then=str(str=atoi(string=parse_string_with_regex(string=Details,
       regex='''(0x[0-9a-f]+)\)$''').g1)),
    else=Details)

    LET ProcessInfo = generate(name="ProcessInfo", query={
       SELECT *,
              basename(path=EventData.ParentImage) AS ParentImageBase,
              basename(path=EventData.Image) AS ImageBase,
              commandline_split(command=EventData.CommandLine) AS CommandArgs,
              get(item=ProcessTypes, field=str(str=System.EventID.Value)) AS event_type
       FROM SysmonGenerator
       WHERE System.EventID.Value in (1, 5)
    })

    LET ProcessTypes <= dict(`1`="start", `5`="stop")

    LET RegTypes <= dict(`13`="value_set", `14`="rename", `12`="key_create")
    LET RegInfo = generate(name="RegInfo", query={
      SELECT *,
             NormalizeHive(Path=EventData.TargetObject) AS NormalizedTargetObject,
             get(item=RegTypes, field=str(str=System.EventID.Value)) AS event_type,
             ParseDetails(Details=EventData.Details) AS ValueData
      FROM SysmonGenerator
      WHERE System.EventID.Value in (12, 13, 14)
    })

    LET _AdFindCommandActivity = SELECT 'AdFind Command Activity' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^AdFind\\.exe$' OR EventData.OriginalFileName = 'AdFind.exe' ) 
      AND CommandArgs =~ '^objectcategory=computer$|^\\(objectcategory=computer\\)$|^objectcategory=person$|^\\(objectcategory=person\\)$|^objectcategory=subnet$|^\\(objectcategory=subnet\\)$|^objectcategory=group$|^\\(objectcategory=group\\)$|^objectcategory=organizationalunit$|^\\(objectcategory=organizationalunit\\)$|^objectcategory=attributeschema$|^\\(objectcategory=attributeschema\\)$|^domainlist$|^dcmodes$|^adinfo$|^dclist$|^computers_pwnotreqd$|^trustdmp$' )

    LET _AddingHiddenFileAttributeviaAttrib = SELECT 'Adding Hidden File Attribute via Attrib' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^attrib\\.exe$'
      AND CommandArgs =~ '^\\+h$' )

    LET _AdobeHijackPersistence = SELECT 'Adobe Hijack Persistence' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type = 'creation'
      AND EventData.TargetFilename =~ '^.:\\\\Program Files \\(x86\\)\\\\Adobe\\\\Acrobat Reader DC\\\\Reader\\\\AcroCEF\\\\RdrCEF\\.exe$|^.:\\\\Program Files\\\\Adobe\\\\Acrobat Reader DC\\\\Reader\\\\AcroCEF\\\\RdrCEF\\.exe$'
      AND  NOT ImageBase =~ '^msiexec\\.exe$' )

    LET _BypassUACviaEventViewer = SELECT 'Bypass UAC via Event Viewer' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^eventvwr\\.exe$'
      AND  NOT EventData.Image =~ '^.:\\\\Windows\\\\SysWOW64\\\\mmc\\.exe$|^.:\\\\Windows\\\\System32\\\\mmc\\.exe$|^.:\\\\Windows\\\\SysWOW64\\\\WerFault\\.exe$|^.:\\\\Windows\\\\System32\\\\WerFault\\.exe$' )

    LET _ClearingWindowsEventLogs = SELECT 'Clearing Windows Event Logs' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('process_started', 'start' ) 
      AND  ( ImageBase =~ '^wevtutil\\.exe$' OR EventData.OriginalFileName = 'wevtutil.exe' ) 
      AND CommandArgs =~ '^/e:false$|^cl$|^clear-log$' )  OR  ( ImageBase =~ '^powershell\\.exe$'
      AND CommandArgs =~ '^Clear-EventLog$' )  )

    LET _CommandExecutionviaSolarWindsProcess = SELECT 'Command Execution via SolarWinds Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$'
      AND ParentImageBase =~ '^ConfigurationWizard.*\\.exe$|^NetflowDatabaseMaintenance.*\\.exe$|^NetFlowService.*\\.exe$|^SolarWinds\\.Administration.*\\.exe$|^SolarWinds\\.Collector\\.Service.*\\.exe$|^SolarwindsDiagnostics.*\\.exe$' )

    LET _CommandShellActivityStartedviaRunDLL = SELECT 'Command Shell Activity Started via RunDLL32' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$'
      AND ParentImageBase =~ '^rundll32\\.exe$'
      AND  NOT EventData.ParentCommandLine
      AND  NOT commandline_split(command=EventData.ParentCommandLine) =~ '^C:\\\\Windows\\\\System32\\\\SHELL32\\.dll,RunAsNewUser_RunDLL$|^C:\\\\WINDOWS\\\\.*\\.tmp,zzzzInvokeManagedCustomActionOutOfProc$' )

    LET _ComponentObjectModelHijacking = SELECT 'Component Object Model Hijacking' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  (  ( NormalizedTargetObject =~ '^HK.*}\\\\InprocServer32\\\\$'
      AND ValueData =~ '^scrobj\\.dll$|^C:\\\\.*\\\\scrobj\\.dll$'
      AND  NOT NormalizedTargetObject =~ '^.*\\\\{06290BD.*-48AA-11D2-8432-006008C3FBFC}\\\\.*$' )  OR  ( NormalizedTargetObject =~ '^HKEY_USERS\\\\.*Classes\\\\.*\\\\InprocServer32\\\\$|^HKEY_USERS\\\\.*Classes\\\\.*\\\\LocalServer32\\\\$|^HKEY_USERS\\\\.*Classes\\\\.*\\\\DelegateExecute\\\\$|^HKEY_USERS\\\\.*Classes\\\\.*\\\\TreatAs\\\\$|^HKEY_USERS\\\\.*Classes\\\\CLSID\\\\.*\\\\ScriptletURL\\\\$'
      AND split(string=EventData.User, sep='''\\''')[0] != 'NT AUTHORITY' )  )

    LET _ConhostSpawnedBySuspiciousParentProcess = SELECT 'Conhost Spawned By Suspicious Parent Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^conhost\\.exe$'
      AND ParentImageBase =~ '^svchost\\.exe$|^lsass\\.exe$|^services\\.exe$|^smss\\.exe$|^winlogon\\.exe$|^explorer\\.exe$|^dllhost\\.exe$|^rundll32\\.exe$|^regsvr32\\.exe$|^userinit\\.exe$|^wininit\\.exe$|^spoolsv\\.exe$|^wermgr\\.exe$|^csrss\\.exe$|^ctfmon\\.exe$' )

    LET _ConnectiontoCommonlyAbusedFreeSSLCertificateProviders = SELECT 'Connection to Commonly Abused Free SSL Certificate Providers' AS Detection,
           protocol,
           EventData.Image AS Image,
           EventData.QueryName AS QueryName,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM NetworkInfo
    WHERE  ( protocol = 'dns'
      AND EventData.QueryName =~ '^.*letsencrypt\\.org$|^.*\\.sslforfree\\.com$|^.*\\.zerossl\\.com$|^.*\\.freessl\\.org$'
      AND EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\.*\\.exe$|^C:\\\\Windows\\\\System\\\\.*\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\.*\\.exe$|^C:\\\\Windows\\\\Microsoft\\.NET\\\\Framework.*\\\\.*\\.exe$|^C:\\\\Windows\\\\explorer\\.exe$|^C:\\\\Windows\\\\notepad\\.exe$'
      AND  NOT ImageBase =~ '^svchost\\.exe$|^MicrosoftEdge.*\\.exe$|^msedge\\.exe$' )

    LET _ConnectiontoCommonlyAbusedWebServices = SELECT 'Connection to Commonly Abused Web Services' AS Detection,
           protocol,
           EventData.Image AS Image,
           EventData.QueryName AS QueryName,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM NetworkInfo
    WHERE  ( protocol = 'dns'
      AND  NOT ImageBase
      AND  NOT EventData.User IN ('S-1-5-18', 'S-1-5-19', 'S-1-5-20' ) 
      AND EventData.QueryName =~ '^raw\\.githubusercontent\\..*$|^.*\\.pastebin\\..*$|^.*drive\\.google\\..*$|^.*docs\\.live\\..*$|^.*api\\.dropboxapi\\..*$|^.*dropboxusercontent\\..*$|^.*onedrive\\..*$|^.*4shared\\..*$|^.*\\.file\\.io$|^.*filebin\\.net$|^.*slack-files\\.com$|^.*ghostbin\\..*$|^.*ngrok\\..*$|^.*portmap\\..*$|^.*serveo\\.net$|^.*localtunnel\\.me$|^.*pagekite\\.me$|^.*localxpose\\.io$|^.*notabug\\.org$|^rawcdn\\.githack\\..*$|^paste\\.nrecom\\.net$|^zerobin\\.net$|^controlc\\.com$|^requestbin\\.net$'
      AND  NOT EventData.Image =~ '^.:\\\\Program Files\\\\.*\\.exe$|^.:\\\\Program Files \\(x86\\)\\\\.*\\.exe$|^.:\\\\Windows\\\\System32\\\\WWAHost\\.exe$|^.:\\\\Windows\\\\System32\\\\smartscreen\\.exe$|^.:\\\\Windows\\\\System32\\\\MicrosoftEdgeCP\\.exe$|^.:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Platform\\\\.*\\\\MsMpEng\\.exe$|^.:\\\\Users\\\\.*\\\\AppData\\\\Local\\\\Google\\\\Chrome\\\\Application\\\\chrome\\.exe$|^.:\\\\Users\\\\.*\\\\AppData\\\\Local\\\\Programs\\\\Fiddler\\\\Fiddler\\.exe$|^.:\\\\Users\\\\.*\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code\\.exe$|^.:\\\\Users\\\\.*\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\OneDrive\\.exe$|^.:\\\\Windows\\\\system32\\\\mobsync\\.exe$|^.:\\\\Windows\\\\SysWOW64\\\\mobsync\\.exe$' )

    LET _ControlPanelProcesswithUnusualArguments = SELECT 'Control Panel Process with Unusual Arguments' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.Image =~ '^.:\\\\Windows\\\\SysWOW64\\\\control\\.exe$|^.:\\\\Windows\\\\System32\\\\control\\.exe$'
      AND EventData.CommandLine =~ '^.*\\.jpg.*$|^.*\\.png.*$|^.*\\.gif.*$|^.*\\.bmp.*$|^.*\\.jpeg.*$|^.*\\.TIFF.*$|^.*\\.inf.*$|^.*\\.dat.*$|^.*\\.cpl:.*/.*$|^.*\\.\\./\\.\\./\\.\\..*$|^.*/AppData/Local/.*$|^.*:\\\\Users\\\\Public\\\\.*$|^.*\\\\AppData\\\\Local\\\\.*$' )

    LET _CreationofaHiddenLocalUserAccount = SELECT 'Creation of a Hidden Local User Account' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE NormalizedTargetObject =~ '^HKLM\\\\SAM\\\\SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\.*$\\\\$'

    LET _CreationorModificationofDomainBackupDPAPIprivatekey = SELECT 'Creation or Modification of Domain Backup DPAPI private key' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND basename(path=EventData.TargetFilename) =~ '^ntds_capi_.*\\.pfx$|^ntds_capi_.*\\.pvk$' )

    LET _CreationorModificationofRootCertificate = SELECT 'Creation or Modification of Root Certificate' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND NormalizedTargetObject =~ '^HKLM\\\\Software\\\\Microsoft\\\\SystemCertificates\\\\Root\\\\Certificates\\\\.*\\\\Blob$|^HKLM\\\\Software\\\\Microsoft\\\\SystemCertificates\\\\AuthRoot\\\\Certificates\\\\.*\\\\Blob$|^HKLM\\\\Software\\\\Policies\\\\Microsoft\\\\SystemCertificates\\\\Root\\\\Certificates\\\\.*\\\\Blob$|^HKLM\\\\Software\\\\Policies\\\\Microsoft\\\\SystemCertificates\\\\AuthRoot\\\\Certificates\\\\.*\\\\Blob$' )

    LET _CreationorModificationofanewGPOScheduledTaskorService = SELECT 'Creation or Modification of a new GPO Scheduled Task or Service' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND EventData.TargetFilename =~ '^.:\\\\Windows\\\\SYSVOL\\\\domain\\\\Policies\\\\.*\\\\MACHINE\\\\Preferences\\\\ScheduledTasks\\\\ScheduledTasks\\.xml$|^.:\\\\Windows\\\\SYSVOL\\\\domain\\\\Policies\\\\.*\\\\MACHINE\\\\Preferences\\\\Preferences\\\\Services\\\\Services\\.xml$'
      AND  NOT ImageBase =~ '^dfsrs\\.exe$' )

    LET _CredentialAcquisitionviaRegistryHiveDumping = SELECT 'Credential Acquisition via Registry Hive Dumping' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.OriginalFileName = 'reg.exe'
      AND CommandArgs =~ '^save$|^export$'
      AND CommandArgs =~ '^hklm\\\\sam$|^hklm\\\\security$' )

    LET _DeleteVolumeUSNJournalwithFsutil = SELECT 'Delete Volume USN Journal with Fsutil' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^fsutil\\.exe$' OR EventData.OriginalFileName = 'fsutil.exe' ) 
      AND CommandArgs =~ '^deletejournal$'
      AND CommandArgs =~ '^usn$' )

    LET _DeletingBackupCatalogswithWbadmin = SELECT 'Deleting Backup Catalogs with Wbadmin' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^wbadmin\\.exe$' OR EventData.OriginalFileName = 'WBADMIN.EXE' ) 
      AND CommandArgs =~ '^catalog$'
      AND CommandArgs =~ '^delete$' )

    LET _DisableWindowsEventandSecurityLogsUsingBuiltinTools = SELECT 'Disable Windows Event and Security Logs Using Built-in Tools' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^logman\\.exe$' OR EventData.OriginalFileName = 'Logman.exe' ) 
      AND CommandArgs =~ '^EventLog-.*$'
      AND CommandArgs =~ '^stop$|^delete$' )  OR  (  ( ImageBase =~ '^pwsh\\.exe$|^powershell\\.exe$|^powershell_ise\\.exe$' OR EventData.OriginalFileName IN ('pwsh.exe', 'powershell.exe', 'powershell_ise.exe' )  ) 
      AND CommandArgs =~ '^Set-Service$'
      AND CommandArgs =~ '^EventLog$'
      AND CommandArgs =~ '^Disabled$' )  OR  (  ( ImageBase =~ '^auditpol\\.exe$' OR EventData.OriginalFileName = 'AUDITPOL.EXE' ) 
      AND CommandArgs =~ '^/success:disable$' )  )

    LET _DisableWindowsFirewallRulesviaNetsh = SELECT 'Disable Windows Firewall Rules via Netsh' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^netsh\\.exe$'
      AND CommandArgs =~ '^disable$'
      AND CommandArgs =~ '^firewall$'
      AND CommandArgs =~ '^set$' )  OR  ( CommandArgs =~ '^advfirewall$'
      AND CommandArgs =~ '^off$'
      AND CommandArgs =~ '^state$' )  )

    LET _DisablingUserAccountControlviaRegistryModification = SELECT 'Disabling User Account Control via Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type = 'change'
      AND NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\EnableLUA$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\ConsentPromptBehaviorAdmin$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\PromptOnSecureDesktop$'
      AND ValueData =~ '^0$' )

    LET _DisablingWindowsDefenderSecuritySettingsviaPowerShell = SELECT 'Disabling Windows Defender Security Settings via PowerShell' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^powershell\\.exe$|^pwsh\\.exe$' OR EventData.OriginalFileName = 'PowerShell.EXE' ) 
      AND CommandArgs =~ '^Set-MpPreference$'
      AND CommandArgs =~ '^-Disable.*$|^Disabled$|^NeverSend$|^-Exclusion.*$' )

    LET _EnableHostNetworkDiscoveryviaNetsh = SELECT 'Enable Host Network Discovery via Netsh' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ImageBase =~ '^netsh\\.exe$'
      AND CommandArgs =~ '^firewall$|^advfirewall$'
      AND CommandArgs =~ '^group=Network Discovery$'
      AND CommandArgs =~ '^enable=Yes$' )

    LET _EncodedExecutableStoredintheRegistry = SELECT 'Encoded Executable Stored in the Registry' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE ValueData =~ '^TVqQAAMAAAAEAAAA.*$'

    LET _EncryptingFileswithWinRarorz = SELECT 'Encrypting Files with WinRar or 7z' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^rar\\.exe$' OR Signature.Subject = 'win.rar GmbH' OR EventData.OriginalFileName = 'Command line RAR' ) 
      AND CommandArgs = 'a'
      AND CommandArgs =~ '^-hp.*$|^-p.*$|^-dw$|^-tb$|^-ta$|^/hp.*$|^/p.*$|^/dw$|^/tb$|^/ta$' )  OR  ( EventData.OriginalFileName IN ('7z.exe', '7za.exe' ) 
      AND CommandArgs = 'a'
      AND CommandArgs =~ '^-p.*$|^-sdel$' )  )

    LET _EnumerationCommandSpawnedviaWMIPrvSE = SELECT 'Enumeration Command Spawned via WMIPrvSE' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^arp\\.exe$|^dsquery\\.exe$|^dsget\\.exe$|^gpresult\\.exe$|^hostname\\.exe$|^ipconfig\\.exe$|^nbtstat\\.exe$|^net\\.exe$|^net1\\.exe$|^netsh\\.exe$|^netstat\\.exe$|^nltest\\.exe$|^ping\\.exe$|^qprocess\\.exe$|^quser\\.exe$|^qwinsta\\.exe$|^reg\\.exe$|^sc\\.exe$|^systeminfo\\.exe$|^tasklist\\.exe$|^tracert\\.exe$|^whoami\\.exe$'
      AND ParentImageBase =~ '^wmiprvse\\.exe$' )

    LET _EnumerationofAdministratorAccounts = SELECT 'Enumeration of Administrator Accounts' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^net\\.exe$' OR EventData.OriginalFileName = 'net.exe' OR  (  ( ImageBase =~ '^net1\\.exe$' OR EventData.OriginalFileName = 'net1.exe' ) 
      AND  NOT ParentImageBase =~ '^net\\.exe$' )  ) 
      AND CommandArgs =~ '^group$|^user$|^localgroup$'
      AND CommandArgs =~ '^admin$|^Domain Admins$|^Remote Desktop Users$|^Enterprise Admins$|^Organization Management$'
      AND  NOT CommandArgs =~ '^/add$' )  OR  (  ( ImageBase =~ '^wmic\\.exe$' OR EventData.OriginalFileName = 'wmic.exe' ) 
      AND CommandArgs =~ '^group$|^useraccount$' )  )

    LET _ExecutableFileCreationwithMultipleExtensions = SELECT 'Executable File Creation with Multiple Extensions' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type = 'creation'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^exe$'
      AND basename(path=EventData.TargetFilename) =~ '.*\.(vbs|vbe|bat|js|cmd|wsh|ps1|pdf|docx?|xlsx?|pptx?|txt|rtf|gif|jpg|png|bmp|hta|txt|img|iso)\.exe ' )

    LET _ExecutionfromUnusualDirectoryCommandLine = SELECT 'Execution from Unusual Directory - Command Line' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND ImageBase =~ '^wscript\\.exe$|^cscript\\.exe$|^rundll32\\.exe$|^regsvr32\\.exe$|^cmstp\\.exe$|^RegAsm\\.exe$|^installutil\\.exe$|^mshta\\.exe$|^RegSvcs\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^cmd\\.exe$'
      AND CommandArgs =~ '^C:\\\\PerfLogs\\\\.*$|^C:\\\\Users\\\\Public\\\\.*$|^C:\\\\Users\\\\Default\\\\.*$|^C:\\\\Windows\\\\Tasks\\\\.*$|^C:\\\\Intel\\\\.*$|^C:\\\\AMD\\\\Temp\\\\.*$|^C:\\\\Windows\\\\AppReadiness\\\\.*$|^C:\\\\Windows\\\\ServiceState\\\\.*$|^C:\\\\Windows\\\\security\\\\.*$|^C:\\\\Windows\\\\IdentityCRL\\\\.*$|^C:\\\\Windows\\\\Branding\\\\.*$|^C:\\\\Windows\\\\csc\\\\.*$|^C:\\\\Windows\\\\DigitalLocker\\\\.*$|^C:\\\\Windows\\\\en-US\\\\.*$|^C:\\\\Windows\\\\wlansvc\\\\.*$|^C:\\\\Windows\\\\Prefetch\\\\.*$|^C:\\\\Windows\\\\Fonts\\\\.*$|^C:\\\\Windows\\\\diagnostics\\\\.*$|^C:\\\\Windows\\\\TAPI\\\\.*$|^C:\\\\Windows\\\\INF\\\\.*$|^C:\\\\Windows\\\\System32\\\\Speech\\\\.*$|^C:\\\\windows\\\\tracing\\\\.*$|^c:\\\\windows\\\\IME\\\\.*$|^c:\\\\Windows\\\\Performance\\\\.*$|^c:\\\\windows\\\\intel\\\\.*$|^c:\\\\windows\\\\ms\\\\.*$|^C:\\\\Windows\\\\dot3svc\\\\.*$|^C:\\\\Windows\\\\ServiceProfiles\\\\.*$|^C:\\\\Windows\\\\panther\\\\.*$|^C:\\\\Windows\\\\RemotePackages\\\\.*$|^C:\\\\Windows\\\\OCR\\\\.*$|^C:\\\\Windows\\\\appcompat\\\\.*$|^C:\\\\Windows\\\\apppatch\\\\.*$|^C:\\\\Windows\\\\addins\\\\.*$|^C:\\\\Windows\\\\Setup\\\\.*$|^C:\\\\Windows\\\\Help\\\\.*$|^C:\\\\Windows\\\\SKB\\\\.*$|^C:\\\\Windows\\\\Vss\\\\.*$|^C:\\\\Windows\\\\Web\\\\.*$|^C:\\\\Windows\\\\servicing\\\\.*$|^C:\\\\Windows\\\\CbsTemp\\\\.*$|^C:\\\\Windows\\\\Logs\\\\.*$|^C:\\\\Windows\\\\WaaS\\\\.*$|^C:\\\\Windows\\\\twain_32\\\\.*$|^C:\\\\Windows\\\\ShellExperiences\\\\.*$|^C:\\\\Windows\\\\ShellComponents\\\\.*$|^C:\\\\Windows\\\\PLA\\\\.*$|^C:\\\\Windows\\\\Migration\\\\.*$|^C:\\\\Windows\\\\debug\\\\.*$|^C:\\\\Windows\\\\Cursors\\\\.*$|^C:\\\\Windows\\\\Containers\\\\.*$|^C:\\\\Windows\\\\Boot\\\\.*$|^C:\\\\Windows\\\\bcastdvr\\\\.*$|^C:\\\\Windows\\\\assembly\\\\.*$|^C:\\\\Windows\\\\TextInput\\\\.*$|^C:\\\\Windows\\\\security\\\\.*$|^C:\\\\Windows\\\\schemas\\\\.*$|^C:\\\\Windows\\\\SchCache\\\\.*$|^C:\\\\Windows\\\\Resources\\\\.*$|^C:\\\\Windows\\\\rescache\\\\.*$|^C:\\\\Windows\\\\Provisioning\\\\.*$|^C:\\\\Windows\\\\PrintDialog\\\\.*$|^C:\\\\Windows\\\\PolicyDefinitions\\\\.*$|^C:\\\\Windows\\\\media\\\\.*$|^C:\\\\Windows\\\\Globalization\\\\.*$|^C:\\\\Windows\\\\L2Schemas\\\\.*$|^C:\\\\Windows\\\\LiveKernelReports\\\\.*$|^C:\\\\Windows\\\\ModemLogs\\\\.*$|^C:\\\\Windows\\\\ImmersiveControlPanel\\\\.*$|^C:\\\\$Recycle\\.Bin\\\\.*$'
      AND  NOT EventData.ParentImage =~ '^C:\\\\WINDOWS\\\\System32\\\\DriverStore\\\\FileRepository\\\\.*\\\\igfxCUIService.*\\.exe$|^C:\\\\Windows\\\\System32\\\\spacedeskService\\.exe$|^C:\\\\Program Files\\\\Dell\\\\SupportAssistAgent\\\\SRE\\\\SRE\\.exe$'
      AND  NOT  ( ImageBase =~ '^rundll32\\.exe$'
      AND CommandArgs =~ '^uxtheme\\.dll,#64$|^PRINTUI\\.DLL,PrintUIEntry$' )  )

    LET _ExecutionofCOMobjectviaXwizard = SELECT 'Execution of COM object via Xwizard' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.OriginalFileName =~ '^xwizard\\.exe$'
      AND  (  ( CommandArgs =~ '^RunWizard$'
      AND CommandArgs =~ '^{.*}$' )  OR  (  NOT EventData.Image
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\SysWOW64\\\\xwizard\\.exe$|^C:\\\\Windows\\\\System32\\\\xwizard\\.exe$' )  )  )

    LET _ExecutionviaMSSQLxpcmdshellStoredProcedure = SELECT 'Execution via MSSQL xp_cmdshell Stored Procedure' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^cmd\\.exe$'
      AND ParentImageBase =~ '^sqlservr\\.exe$' )

    LET _ExecutionviaTSClientMountpoint = SELECT 'Execution via TSClient Mountpoint' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.Image =~ '^\\\\Device\\\\Mup\\\\tsclient\\\\.*\\.exe$' )

    LET _ExecutionvialocalSxSSharedModule = SELECT 'Execution via local SxS Shared Module' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^dll$'
      AND EventData.TargetFilename =~ '^C:\\\\.*\\\\.*\\.exe\\.local\\\\.*\\.dll$' )

    LET _ExportingExchangeMailboxviaPowerShell = SELECT 'Exporting Exchange Mailbox via PowerShell' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^powershell\\.exe$|^pwsh\\.exe$'
      AND CommandArgs =~ '^New-MailboxExportRequest.*$' )

    LET _IISHTTPLoggingDisabled = SELECT 'IIS HTTP Logging Disabled' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^appcmd\\.exe$' OR EventData.OriginalFileName = 'appcmd.exe' ) 
      AND CommandArgs =~ '^/dontLog.*:.*True$'
      AND  NOT ParentImageBase =~ '^iissetup\\.exe$' )

    LET _ImageFileExecutionOptionsInjection = SELECT 'Image File Execution Options Injection' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  (  len(list=ValueData)  > 0
      AND NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\.*\\.exe\\\\Debugger$|^HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\.*\\\\Debugger$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\.*\\\\MonitorProcess$|^HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\.*\\\\MonitorProcess$'
      AND  NOT ValueData =~ 'C:\\Program Files( \(x86\))?\\ThinKiosk\\thinkiosk\.exe|.*\\PSAppDeployToolkit\\.*' )

    LET _ImageLoadviaWindowsUpdateAutoUpdateClient = SELECT 'ImageLoad via Windows Update Auto Update Client' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( EventData.OriginalFileName = 'wuauclt.exe' OR ImageBase =~ '^wuauclt\\.exe$' ) 
      AND CommandArgs =~ '^/RunHandlerComServer$'
      AND CommandArgs =~ '^/UpdateDeploymentProvider$'
      AND CommandArgs =~ '^C:\\\\Users\\\\.*\\.dll$|^C:\\\\ProgramData\\\\.*\\.dll$|^C:\\\\Windows\\\\Temp\\\\.*\\.dll$|^C:\\\\Windows\\\\Tasks\\\\.*\\.dll$' )

    LET _InstallationofSecuritySupportProvider = SELECT 'Installation of Security Support Provider' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages.*$|^HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages.*$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\msiexec\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\msiexec\\.exe$' )

    LET _KerberosTrafficfromUnusualProcess = SELECT 'Kerberos Traffic from Unusual Process' AS Detection,
           protocol,
           EventData.Image AS Image,
           EventData.QueryName AS QueryName,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM NetworkInfo
    WHERE  ( event_type = 'start'
      AND if(condition=EventData.Initiated, then='egress', else='ingress') = 'outgoing'
      AND EventData.DestinationPort = 88
      AND EventData.SourcePort >= 49152
      AND EventData.Image != 'C:\Windows\System32\lsass.exe'
      AND EventData.DestinationIp != '127.0.0.1'
      AND EventData.DestinationIp != '::1'
      AND  NOT ImageBase IN ('swi_fc.exe', 'fsIPcam.exe', 'IPCamera.exe', 'MicrosoftEdgeCP.exe', 'MicrosoftEdge.exe', 'iexplore.exe', 'chrome.exe', 'msedge.exe', 'opera.exe', 'firefox.exe' )  )

    LET _LSASSMemoryDumpCreation = SELECT 'LSASS Memory Dump Creation' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE basename(path=EventData.TargetFilename) =~ '^lsass.*\\.dmp$|^dumpert\\.dmp$|^Andrew\\.dmp$|^SQLDmpr.*\\.mdmp$|^Coredump\\.dmp$'

    LET _LateralMovementviaStartupFolder = SELECT 'Lateral Movement via Startup Folder' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND  ( ImageBase =~ '^mstsc\\.exe$' OR EventData.ProcessId = 4 ) 
      AND EventData.TargetFilename =~ '^C:\\\\.*\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\.*$' )

    LET _MicrosoftBuildEngineStartedanUnusualProcess = SELECT 'Microsoft Build Engine Started an Unusual Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^MSBuild\\.exe$'
      AND ImageBase =~ '^csc\\.exe$|^iexplore\\.exe$|^powershell\\.exe$' )

    LET _MicrosoftBuildEngineStartedbyaScriptProcess = SELECT 'Microsoft Build Engine Started by a Script Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^MSBuild\\.exe$' OR EventData.OriginalFileName = 'MSBuild.exe' ) 
      AND ParentImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^cscript\\.exe$|^wscript\\.exe$|^mshta\\.exe$' )

    LET _MicrosoftBuildEngineStartedbyaSystemProcess = SELECT 'Microsoft Build Engine Started by a System Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^MSBuild\\.exe$'
      AND ParentImageBase =~ '^explorer\\.exe$|^wmiprvse\\.exe$' )

    LET _MicrosoftBuildEngineStartedbyanOfficeApplication = SELECT 'Microsoft Build Engine Started by an Office Application' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^MSBuild\\.exe$'
      AND ParentImageBase =~ '^eqnedt32\\.exe$|^excel\\.exe$|^fltldr\\.exe$|^msaccess\\.exe$|^mspub\\.exe$|^outlook\\.exe$|^powerpnt\\.exe$|^winword\\.exe$' )

    LET _MicrosoftBuildEngineUsinganAlternateName = SELECT 'Microsoft Build Engine Using an Alternate Name' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.OriginalFileName = 'MSBuild.exe'
      AND  NOT ImageBase =~ '^MSBuild\\.exe$' )

    LET _MicrosoftExchangeServerUMSpawningSuspiciousProcesses = SELECT 'Microsoft Exchange Server UM Spawning Suspicious Processes' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^UMService\\.exe$|^UMWorkerProcess\\.exe$'
      AND  NOT ImageBase =~ '^werfault\\.exe$|^wermgr\\.exe$' )

    LET _MicrosoftExchangeWorkerSpawningSuspiciousProcesses = SELECT 'Microsoft Exchange Worker Spawning Suspicious Processes' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^w3wp\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^MSExchange.*AppPool$'
      AND  ( ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^pwsh\\.exe$' OR EventData.OriginalFileName =~ '^cmd\\.exe$|^powershell\\.exe$|^pwsh\\.exe$' )  )

    LET _MicrosoftIISConnectionStringsDecryption = SELECT 'Microsoft IIS Connection Strings Decryption' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^aspnet_regiis\\.exe$' OR EventData.OriginalFileName = 'aspnet_regiis.exe' ) 
      AND CommandArgs =~ '^connectionStrings$'
      AND CommandArgs =~ '^-pdf$' )

    LET _MicrosoftIISServiceAccountPasswordDumped = SELECT 'Microsoft IIS Service Account Password Dumped' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^appcmd\\.exe$' OR EventData.OriginalFileName = 'appcmd.exe' ) 
      AND CommandArgs =~ '^/list$'
      AND CommandArgs =~ '^/text.*password$' )

    LET _MimikatzMemsspLogFileDetected = SELECT 'Mimikatz Memssp Log File Detected' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( basename(path=EventData.TargetFilename) =~ '^mimilsa\\.log$'
      AND ImageBase =~ '^lsass\\.exe$' )

    LET _MimikatzPowershellModuleActivity = SELECT 'Mimikatz Powershell Module Activity' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^pwsh\\.exe$'
      AND CommandArgs =~ '^.*DumpCreds$|^.*Mimikatz.*$' )

    LET _ModificationofAmsiEnableRegistryKey = SELECT 'Modification of AmsiEnable Registry Key' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND NormalizedTargetObject =~ '^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows Script\\\\Settings\\\\AmsiEnable$'
      AND ValueData =~ '^0$' )

    LET _ModificationofBootConfiguration = SELECT 'Modification of Boot Configuration' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^bcdedit\\.exe$' OR EventData.OriginalFileName = 'bcdedit.exe' ) 
      AND CommandArgs =~ '^/set$'
      AND CommandArgs =~ '^bootstatuspolicy$'
      AND CommandArgs =~ '^ignoreallfailures$' )  OR  ( CommandArgs =~ '^no$'
      AND CommandArgs =~ '^recoveryenabled$' )  )

    LET _ModificationofWDigestSecurityProvider = SELECT 'Modification of WDigest Security Provider' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Control\\\\SecurityProviders\\\\WDigest\\\\UseLogonCredential$'
      AND ValueData =~ '^1$' )

    LET _MountingHiddenorWebDavRemoteShares = SELECT 'Mounting Hidden or WebDav Remote Shares' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^net\\.exe$' OR EventData.OriginalFileName = 'net.exe' OR  (  ( ImageBase =~ '^net1\\.exe$' OR EventData.OriginalFileName = 'net1.exe' ) 
      AND  NOT ParentImageBase =~ '^net\\.exe$' )  ) 
      AND CommandArgs =~ '^use$'
      AND CommandArgs =~ '^\\\\\\\\.*\\\\.*$.*$|^\\\\\\\\.*@SSL\\\\.*$|^http.*$'
      AND  NOT CommandArgs =~ '^/d.*$' )

    LET _NTDSorSAMDatabaseFileCopied = SELECT 'NTDS or SAM Database File Copied' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  (  ( EventData.OriginalFileName IN ('Cmd.Exe', 'PowerShell.EXE', 'XCOPY.EXE' ) 
      AND CommandArgs =~ '^copy$|^xcopy$|^Copy-Item$|^move$|^cp$|^mv$' )  OR  ( EventData.OriginalFileName =~ '^esentutl\\.exe$'
      AND CommandArgs =~ '^.*/y.*$|^.*/vss.*$|^.*/d.*$' )  ) 
      AND CommandArgs =~ '^.*\\\\ntds\\.dit$|^.*\\\\config\\\\SAM$|^\\\\.*\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy.*\\\\.*$|^.*/system32/config/SAM.*$' )

    LET _NetcommandviaSYSTEMaccount = SELECT 'Net command via SYSTEM account' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND EventData.User IN ('S-1-5-18', 'S-1-5-19', 'S-1-5-20' ) 
      AND ImageBase =~ '^whoami\\.exe$' )  OR  ( ImageBase =~ '^net1\\.exe$'
      AND  NOT ParentImageBase =~ '^net\\.exe$' )  )

    LET _NetworkLogonProviderRegistryModification = SELECT 'Network Logon Provider Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  (  NOT ValueData
      AND NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Services\\\\.*\\\\NetworkProvider\\\\ProviderPath$'
      AND  NOT  ( EventData.User =~ '^S-1-5-18$'
      AND ValueData IN ('%SystemRoot%\System32\ntlanman.dll', '%SystemRoot%\System32\drprov.dll', '%SystemRoot%\System32\davclnt.dll' )  )  )

    LET _NewActiveSyncAllowedDeviceIDAddedviaPowerShell = SELECT 'New ActiveSyncAllowedDeviceID Added via PowerShell' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^powershell\\.exe$|^pwsh\\.exe$'
      AND CommandArgs =~ '^Set-CASMailbox.*ActiveSyncAllowedDeviceIDs.*$' )

    LET _NullSessionPipeRegistryModification = SELECT 'NullSessionPipe Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\services\\\\LanmanServer\\\\Parameters\\\\NullSessionPipes$'
      AND  NOT ValueData )

    LET _PeripheralDeviceDiscovery = SELECT 'Peripheral Device Discovery' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^fsutil\\.exe$' OR EventData.OriginalFileName = 'fsutil.exe' ) 
      AND CommandArgs =~ '^fsinfo$'
      AND CommandArgs =~ '^drives$' )

    LET _PersistenceviaBITSJobNotifyCmdline = SELECT 'Persistence via BITS Job Notify Cmdline' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^svchost\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^BITS$'
      AND  NOT EventData.Image =~ '^.:\\\\Windows\\\\System32\\\\WerFaultSecure\\.exe$|^.:\\\\Windows\\\\System32\\\\WerFault\\.exe$|^.:\\\\Windows\\\\System32\\\\wermgr\\.exe$|^.:\\\\WINDOWS\\\\system32\\\\directxdatabaseupdater\\.exe$' )

    LET _PersistenceviaHiddenRunKeyDetected = SELECT 'Persistence via Hidden Run Key Detected' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE NormalizedTargetObject =~ '^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\$|^HKLM\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\$'

    LET _PersistenceviaMicrosoftOfficeAddIns = SELECT 'Persistence via Microsoft Office AddIns' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^wll$|^xll$|^ppa$|^ppam$|^xla$|^xlam$'
      AND EventData.TargetFilename =~ '^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Word\\\\Startup\\\\.*$|^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\AddIns\\\\.*$|^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Excel\\\\XLSTART\\\\.*$' )

    LET _PersistenceviaMicrosoftOutlookVBA = SELECT 'Persistence via Microsoft Outlook VBA' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND EventData.TargetFilename =~ '^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Outlook\\\\VbaProject\\.OTM$' )

    LET _PersistenceviaScheduledJobCreation = SELECT 'Persistence via Scheduled Job Creation' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND EventData.TargetFilename =~ '^.:\\\\Windows\\\\Tasks\\\\.*$'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^job$' )

    LET _PersistenceviaTelemetryControllerScheduledTaskHijack = SELECT 'Persistence via TelemetryController Scheduled Task Hijack' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^CompatTelRunner\\.exe$'
      AND CommandArgs =~ '^-cv.*$'
      AND  NOT ImageBase =~ '^conhost\\.exe$|^DeviceCensus\\.exe$|^CompatTelRunner\\.exe$|^DismHost\\.exe$|^rundll32\\.exe$|^powershell\\.exe$' )

    LET _PersistenceviaUpdateOrchestratorServiceHijack = SELECT 'Persistence via Update Orchestrator Service Hijack' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND EventData.ParentImage =~ '^C:\\\\Windows\\\\System32\\\\svchost\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^UsoSvc$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\UsoClient\\.exe$|^C:\\\\Windows\\\\System32\\\\MusNotification\\.exe$|^C:\\\\Windows\\\\System32\\\\MusNotificationUx\\.exe$|^C:\\\\Windows\\\\System32\\\\MusNotifyIcon\\.exe$|^C:\\\\Windows\\\\System32\\\\WerFault\\.exe$|^C:\\\\Windows\\\\System32\\\\WerMgr\\.exe$' )

    LET _PersistenceviaWMIEventSubscription = SELECT 'Persistence via WMI Event Subscription' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^wmic\\.exe$' OR EventData.OriginalFileName = 'wmic.exe' ) 
      AND CommandArgs =~ '^create$'
      AND CommandArgs =~ '^ActiveScriptEventConsumer$|^CommandLineEventConsumer$' )

    LET _PersistenceviaWMIStandardRegistryProvider = SELECT 'Persistence via WMI Standard Registry Provider' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  (  NOT ValueData
      AND ImageBase =~ '^WmiPrvSe\\.exe$'
      AND NormalizedTargetObject =~ '^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKLM\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\.*$|^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Services\\\\.*\\\\ServiceDLL$|^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Services\\\\.*\\\\ImagePath$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\.*$|^HKEY_USERS\\\\.*\\\\Environment\\\\UserInitMprLogonScript$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\Shell$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logoff\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logon\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Shutdown\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Startup\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Ctf\\\\LangBarAddin\\\\.*\\\\FilePath$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Exec$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun$' )

    LET _PersistentScriptsintheStartupDirectory = SELECT 'Persistent Scripts in the Startup Directory' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  (  ( event_type != 'deletion'
      AND split(string=EventData.User, sep='''\\''')[0] != 'NT AUTHORITY'
      AND EventData.TargetFilename =~ '^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.lnk$'
      AND ImageBase =~ '^wscript\\.exe$|^cscript\\.exe$' )  OR EventData.TargetFilename =~ '^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.vbs$|^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.vbe$|^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.wsh$|^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.wsf$|^C:\\\\.*\\\\Programs\\\\Startup\\\\.*\\.js$' )

    LET _PortForwardingRuleAddition = SELECT 'Port Forwarding Rule Addition' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Services\\\\PortProxy\\\\v4tov4\\\\.*$'

    LET _PotentialApplicationShimmingviaSdbinst = SELECT 'Potential Application Shimming via Sdbinst' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^sdbinst\\.exe$' )

    LET _PotentialCredentialAccessviaWindowsUtilities = SELECT 'Potential Credential Access via Windows Utilities' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND EventData.OriginalFileName = 'procdump'
      AND CommandArgs =~ '^-ma$' )  OR  ( ImageBase =~ '^ProcessDump\\.exe$'
      AND  NOT EventData.ParentImage =~ 'C:\\Program Files( \(x86\))?\\Cisco Systems\\.*' )  OR  ( EventData.OriginalFileName = 'WriteMiniDump.exe'
      AND  NOT EventData.ParentImage =~ 'C:\\Program Files( \(x86\))?\\Steam\\.*' )  OR  ( EventData.OriginalFileName = 'RUNDLL32.EXE'
      AND  ( CommandArgs =~ '^MiniDump.*$' OR EventData.CommandLine =~ '^.*comsvcs\\.dll.*#24.*$' )  )  OR  ( EventData.OriginalFileName = 'RdrLeakDiag.exe'
      AND CommandArgs =~ '^/fullmemdmp$' )  OR  ( EventData.OriginalFileName = 'SqlDumper.exe'
      AND CommandArgs =~ '^0x01100.*$' )  OR  ( EventData.OriginalFileName = 'TTTracer.exe'
      AND CommandArgs =~ '^-dumpFull$'
      AND CommandArgs =~ '^-attach$' )  OR  ( EventData.OriginalFileName = 'ntdsutil.exe'
      AND CommandArgs =~ '^create.*full.*$' )  OR  ( EventData.OriginalFileName = 'diskshadow.exe'
      AND CommandArgs =~ '^/s$' )  )

    LET _PotentialDLLSideLoadingviaMicrosoftAntimalwareServiceExecutable = SELECT 'Potential DLL Side-Loading via Microsoft Antimalware Service Executable' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type = 'start'
      AND EventData.OriginalFileName = 'MsMpEng.exe'
      AND  NOT ImageBase =~ '^MsMpEng\\.exe$' )  OR  ( ImageBase =~ '^MsMpEng\\.exe$'
      AND  NOT EventData.Image =~ '^.:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\.*\\.exe$|^.:\\\\Program Files\\\\Windows Defender\\\\.*\\.exe$|^.:\\\\Program Files \\(x86\\)\\\\Windows Defender\\\\.*\\.exe$' )  )

    LET _PotentialDLLSideLoadingviaTrustedMicrosoftPrograms = SELECT 'Potential DLL SideLoading via Trusted Microsoft Programs' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND EventData.OriginalFileName IN ('WinWord.exe', 'EXPLORER.EXE', 'w3wp.exe', 'DISM.EXE' ) 
      AND  NOT  ( ImageBase =~ '^winword\\.exe$|^explorer\\.exe$|^w3wp\\.exe$|^Dism\\.exe$' OR EventData.Image =~ '^.:\\\\Windows\\\\explorer\\.exe$|^.:\\\\Program Files\\\\Microsoft Office\\\\root\\\\Office.*\\\\WINWORD\\.EXE$|^.:\\\\Program Files.\\(x86\\)\\\\Microsoft Office\\\\root\\\\Office.*\\\\WINWORD\\.EXE$|^.:\\\\Windows\\\\System32\\\\Dism\\.exe$|^.:\\\\Windows\\\\SysWOW64\\\\Dism\\.exe$|^.:\\\\Windows\\\\System32\\\\inetsrv\\\\w3wp\\.exe$' )  )

    LET _PotentialEvasionviaFilterManager = SELECT 'Potential Evasion via Filter Manager' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^fltMC\\.exe$'
      AND CommandArgs =~ '^unload$' )

    LET _PotentialLSAAuthenticationPackageAbuse = SELECT 'Potential LSA Authentication Package Abuse' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type = 'change'
      AND NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Control\\\\Lsa\\\\Authentication Packages$'
      AND  NOT EventData.User =~ '^S-1-5-18$' )

    LET _PotentialModificationofAccessibilityBinaries = SELECT 'Potential Modification of Accessibility Binaries' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND ParentImageBase =~ '^Utilman\\.exe$|^winlogon\\.exe$'
      AND EventData.User = 'SYSTEM'
      AND CommandArgs =~ '^C:\\\\Windows\\\\System32\\\\osk\\.exe$|^C:\\\\Windows\\\\System32\\\\Magnify\\.exe$|^C:\\\\Windows\\\\System32\\\\Narrator\\.exe$|^C:\\\\Windows\\\\System32\\\\Sethc\\.exe$|^utilman\\.exe$|^ATBroker\\.exe$|^DisplaySwitch\\.exe$|^sethc\\.exe$'
      AND  NOT EventData.OriginalFileName IN ('osk.exe', 'sethc.exe', 'utilman2.exe', 'DisplaySwitch.exe', 'ATBroker.exe', 'ScreenMagnifier.exe', 'SR.exe', 'Narrator.exe', 'magnify.exe' )  )

    LET _PotentialPersistenceviaTimeProviderModification = SELECT 'Potential Persistence via Time Provider Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type =~ '^change$'
      AND NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Services\\\\W32Time\\\\TimeProviders\\\\.*$'
      AND ValueData =~ '^.*\\.dll$' )

    LET _PotentialPortMonitororPrintProcessorRegistrationAbuse = SELECT 'Potential Port Monitor or Print Processor Registration Abuse' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Control\\\\Print\\\\Monitors\\\\.*$|^HLLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Control\\\\Print\\\\Environments\\\\Windows.*\\\\Print Processors\\\\.*$'
      AND ValueData =~ '^.*\\.dll$'
      AND  NOT EventData.User =~ '^S-1-5-18$' )

    LET _PotentialPrintNightmareExploitRegistryModification = SELECT 'Potential PrintNightmare Exploit Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( ImageBase =~ '^spoolsv\\.exe$'
      AND  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Print\\\\Environments\\\\Windows.*\\\\Drivers\\\\Version-3\\\\mimikatz.*\\\\Data File$' OR  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Print\\\\Environments\\\\Windows.*\\\\Drivers\\\\Version-3\\\\.*\\\\Configuration File$'
      AND ValueData =~ '^kernelbase\\.dll$|^ntdll\\.dll$|^kernel32\\.dll$|^winhttp\\.dll$|^user32\\.dll$' )  )  )

    LET _PotentialPrintNightmareFileModification = SELECT 'Potential PrintNightmare File Modification' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( ImageBase =~ '^spoolsv\\.exe$'
      AND basename(path=EventData.TargetFilename) =~ '^kernelbase\\.dll$|^ntdll\\.dll$|^kernel32\\.dll$|^winhttp\\.dll$|^user32\\.dll$'
      AND EventData.TargetFilename =~ '^.:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\x64\\\\3\\\\.*$' )

    LET _PotentialRemoteDesktopTunnelingDetected = SELECT 'Potential Remote Desktop Tunneling Detected' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND CommandArgs =~ '^.*:3389$'
      AND CommandArgs =~ '^-L$|^-P$|^-R$|^-pw$|^-ssh$' )

    LET _PotentialSecureFileDeletionviaSDeleteUtility = SELECT 'Potential Secure File Deletion via SDelete Utility' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type = 'change'
      AND basename(path=EventData.TargetFilename) =~ '^.*AAA\\.AAA$' )

    LET _PrivilegeEscalationviaNamedPipeImpersonation = SELECT 'Privilege Escalation via Named Pipe Impersonation' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.OriginalFileName IN ('Cmd.Exe', 'PowerShell.EXE' ) 
      AND CommandArgs =~ '^echo$'
      AND CommandArgs =~ '^>$'
      AND CommandArgs =~ '^\\\\\\\\\\.\\\\pipe\\\\.*$' )

    LET _PrivilegeEscalationviaWindirEnvironmentVariable = SELECT 'Privilege Escalation via Windir Environment Variable' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKEY_USERS\\\\.*\\\\Environment\\\\windir$|^HKEY_USERS\\\\.*\\\\Environment\\\\systemroot$'
      AND  NOT ValueData =~ '^C:\\\\windows$|^%SystemRoot%$' )

    LET _ProcessActivityviaCompiledHTMLFile = SELECT 'Process Activity via Compiled HTML File' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^hh\\.exe$'
      AND ImageBase =~ '^mshta\\.exe$|^cmd\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^cscript\\.exe$|^wscript\\.exe$' )

    LET _ProcessExecutionfromanUnusualDirectory = SELECT 'Process Execution from an Unusual Directory' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND EventData.Image =~ '^C:\\\\PerfLogs\\\\.*\\.exe$|^C:\\\\Users\\\\Public\\\\.*\\.exe$|^C:\\\\Users\\\\Default\\\\.*\\.exe$|^C:\\\\Windows\\\\Tasks\\\\.*\\.exe$|^C:\\\\Intel\\\\.*\\.exe$|^C:\\\\AMD\\\\Temp\\\\.*\\.exe$|^C:\\\\Windows\\\\AppReadiness\\\\.*\\.exe$|^C:\\\\Windows\\\\ServiceState\\\\.*\\.exe$|^C:\\\\Windows\\\\security\\\\.*\\.exe$|^C:\\\\Windows\\\\IdentityCRL\\\\.*\\.exe$|^C:\\\\Windows\\\\Branding\\\\.*\\.exe$|^C:\\\\Windows\\\\csc\\\\.*\\.exe$|^C:\\\\Windows\\\\DigitalLocker\\\\.*\\.exe$|^C:\\\\Windows\\\\en-US\\\\.*\\.exe$|^C:\\\\Windows\\\\wlansvc\\\\.*\\.exe$|^C:\\\\Windows\\\\Prefetch\\\\.*\\.exe$|^C:\\\\Windows\\\\Fonts\\\\.*\\.exe$|^C:\\\\Windows\\\\diagnostics\\\\.*\\.exe$|^C:\\\\Windows\\\\TAPI\\\\.*\\.exe$|^C:\\\\Windows\\\\INF\\\\.*\\.exe$|^C:\\\\Windows\\\\System32\\\\Speech\\\\.*\\.exe$|^C:\\\\windows\\\\tracing\\\\.*\\.exe$|^c:\\\\windows\\\\IME\\\\.*\\.exe$|^c:\\\\Windows\\\\Performance\\\\.*\\.exe$|^c:\\\\windows\\\\intel\\\\.*\\.exe$|^c:\\\\windows\\\\ms\\\\.*\\.exe$|^C:\\\\Windows\\\\dot3svc\\\\.*\\.exe$|^C:\\\\Windows\\\\ServiceProfiles\\\\.*\\.exe$|^C:\\\\Windows\\\\panther\\\\.*\\.exe$|^C:\\\\Windows\\\\RemotePackages\\\\.*\\.exe$|^C:\\\\Windows\\\\OCR\\\\.*\\.exe$|^C:\\\\Windows\\\\appcompat\\\\.*\\.exe$|^C:\\\\Windows\\\\apppatch\\\\.*\\.exe$|^C:\\\\Windows\\\\addins\\\\.*\\.exe$|^C:\\\\Windows\\\\Setup\\\\.*\\.exe$|^C:\\\\Windows\\\\Help\\\\.*\\.exe$|^C:\\\\Windows\\\\SKB\\\\.*\\.exe$|^C:\\\\Windows\\\\Vss\\\\.*\\.exe$|^C:\\\\Windows\\\\Web\\\\.*\\.exe$|^C:\\\\Windows\\\\servicing\\\\.*\\.exe$|^C:\\\\Windows\\\\CbsTemp\\\\.*\\.exe$|^C:\\\\Windows\\\\Logs\\\\.*\\.exe$|^C:\\\\Windows\\\\WaaS\\\\.*\\.exe$|^C:\\\\Windows\\\\twain_32\\\\.*\\.exe$|^C:\\\\Windows\\\\ShellExperiences\\\\.*\\.exe$|^C:\\\\Windows\\\\ShellComponents\\\\.*\\.exe$|^C:\\\\Windows\\\\PLA\\\\.*\\.exe$|^C:\\\\Windows\\\\Migration\\\\.*\\.exe$|^C:\\\\Windows\\\\debug\\\\.*\\.exe$|^C:\\\\Windows\\\\Cursors\\\\.*\\.exe$|^C:\\\\Windows\\\\Containers\\\\.*\\.exe$|^C:\\\\Windows\\\\Boot\\\\.*\\.exe$|^C:\\\\Windows\\\\bcastdvr\\\\.*\\.exe$|^C:\\\\Windows\\\\assembly\\\\.*\\.exe$|^C:\\\\Windows\\\\TextInput\\\\.*\\.exe$|^C:\\\\Windows\\\\security\\\\.*\\.exe$|^C:\\\\Windows\\\\schemas\\\\.*\\.exe$|^C:\\\\Windows\\\\SchCache\\\\.*\\.exe$|^C:\\\\Windows\\\\Resources\\\\.*\\.exe$|^C:\\\\Windows\\\\rescache\\\\.*\\.exe$|^C:\\\\Windows\\\\Provisioning\\\\.*\\.exe$|^C:\\\\Windows\\\\PrintDialog\\\\.*\\.exe$|^C:\\\\Windows\\\\PolicyDefinitions\\\\.*\\.exe$|^C:\\\\Windows\\\\media\\\\.*\\.exe$|^C:\\\\Windows\\\\Globalization\\\\.*\\.exe$|^C:\\\\Windows\\\\L2Schemas\\\\.*\\.exe$|^C:\\\\Windows\\\\LiveKernelReports\\\\.*\\.exe$|^C:\\\\Windows\\\\ModemLogs\\\\.*\\.exe$|^C:\\\\Windows\\\\ImmersiveControlPanel\\\\.*\\.exe$'
      AND  NOT ImageBase =~ '^SpeechUXWiz\\.exe$|^SystemSettings\\.exe$|^TrustedInstaller\\.exe$|^PrintDialog\\.exe$|^MpSigStub\\.exe$|^LMS\\.exe$|^mpam-.*\\.exe$' )

    LET _ProgramFilesDirectoryMasquerading = SELECT 'Program Files Directory Masquerading' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND EventData.Image =~ '^C:\\\\.*Program.*Files.*\\\\.*\\.exe$'
      AND  NOT EventData.Image =~ '^C:\\\\Program Files\\\\.*\\.exe$|^C:\\\\Program Files \\(x86\\)\\\\.*\\.exe$|^C:\\\\Users\\\\.*\\.exe$|^C:\\\\ProgramData\\\\.*\\.exe$' )

    LET _RDPEnabledviaRegistry = SELECT 'RDP Enabled via Registry' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Terminal Server\\\\fDenyTSConnections$'
      AND ValueData = '0'
      AND  NOT  ( ImageBase =~ '^svchost\\.exe$'
      AND split(string=EventData.User, sep='''\\''')[0] = 'NT AUTHORITY' ) 
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\SystemPropertiesRemote\\.exe$' )

    LET _RegistryPersistenceviaAppCertDLL = SELECT 'Registry Persistence via AppCert DLL' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Session Manager\\\\AppCertDLLs\\\\.*$'

    LET _RegistryPersistenceviaAppInitDLL = SELECT 'Registry Persistence via AppInit DLL' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\AppInit_Dlls$|^HKLM\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\AppInit_Dlls$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\msiexec\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\msiexec\\.exe$|^C:\\\\Program Files\\\\Commvault\\\\ContentStore.*\\\\Base\\\\cvd\\.exe$|^C:\\\\Program Files \\(x86\\)\\\\Commvault\\\\ContentStore.*\\\\Base\\\\cvd\\.exe$' )

    LET _RemoteDesktopEnabledinWindowsFirewall = SELECT 'Remote Desktop Enabled in Windows Firewall' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^netsh\\.exe$' OR EventData.OriginalFileName = 'netsh.exe' ) 
      AND CommandArgs =~ '^localport=3389$|^RemoteDesktop$|^group="remote desktop"$'
      AND CommandArgs =~ '^action=allow$|^enable=Yes$|^enable$' )

    LET _RemoteFileCopytoaHiddenShare = SELECT 'Remote File Copy to a Hidden Share' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^robocopy\\.exe$|^xcopy\\.exe$'
      AND CommandArgs =~ '^copy.*$|^move.*$|^cp$|^mv$'
      AND CommandArgs =~ '^.*$.*$' )

    LET _RemoteFileCopyviaTeamViewer = SELECT 'Remote File Copy via TeamViewer' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type = 'creation'
      AND ImageBase =~ '^TeamViewer\\.exe$'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^exe$|^dll$|^scr$|^com$|^bat$|^ps1$|^vbs$|^vbe$|^js$|^wsh$|^hta$' )

    LET _RemoteFileDownloadviaDesktopimgdownldrUtility = SELECT 'Remote File Download via Desktopimgdownldr Utility' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^desktopimgdownldr\\.exe$' OR EventData.OriginalFileName = 'desktopimgdownldr.exe' ) 
      AND CommandArgs =~ '^/lockscreenurl:http.*$' )

    LET _RemoteFileDownloadviaMpCmdRun = SELECT 'Remote File Download via MpCmdRun' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^MpCmdRun\\.exe$' OR EventData.OriginalFileName = 'MpCmdRun.exe' ) 
      AND CommandArgs =~ '^-DownloadFile$'
      AND CommandArgs =~ '^-url$'
      AND CommandArgs =~ '^-path$' )

    LET _RemoteSystemDiscoveryCommands = SELECT 'Remote System Discovery Commands' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^nbtstat\\.exe$'
      AND CommandArgs =~ '^-n$|^-s$' )  OR  ( ImageBase =~ '^arp\\.exe$'
      AND CommandArgs =~ '^-a$' )  )

    LET _RenamedAutoItScriptsInterpreter = SELECT 'Renamed AutoIt Scripts Interpreter' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND EventData.OriginalFileName =~ '^AutoIt.*\\.exe$'
      AND  NOT ImageBase =~ '^AutoIt.*\\.exe$' )

    LET _SIPProviderModification = SELECT 'SIP Provider Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type =~ '^change$'
      AND NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\\\\OID\\\\EncodingType 0\\\\CryptSIPDllPutSignedDataMsg\\\\{.*}\\\\Dll$|^HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Cryptography\\\\OID\\\\EncodingType 0\\\\CryptSIPDllPutSignedDataMsg\\\\{.*}\\\\Dll$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\\\\Providers\\\\Trust\\\\FinalPolicy\\\\{.*}\\\\$Dll$|^HKLM\\\\SOFTWARE\\\\WOW6432Node\\\\Microsoft\\\\Cryptography\\\\Providers\\\\Trust\\\\FinalPolicy\\\\{.*}\\\\$Dll$'
      AND ValueData =~ '^.*\\.dll$' )

    LET _ScheduledTasksATCommandEnabled = SELECT 'Scheduled Tasks AT Command Enabled' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Schedule\\\\Configuration\\\\EnableAt$'
      AND ValueData = '1' )

    LET _SearchingforSavedCredentialsviaVaultCmd = SELECT 'Searching for Saved Credentials via VaultCmd' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( EventData.OriginalFileName =~ '^vaultcmd\\.exe$' OR ImageBase =~ '^vaultcmd\\.exe$' ) 
      AND CommandArgs =~ '^/list.*$' )

    LET _SecuritySoftwareDiscoveryusingWMIC = SELECT 'Security Software Discovery using WMIC' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^wmic\\.exe$' OR EventData.OriginalFileName =~ '^wmic\\.exe$' ) 
      AND CommandArgs =~ '^/namespace:\\\\\\\\root\\\\SecurityCenter2$'
      AND CommandArgs =~ '^Get$' )

    LET _ServiceControlSpawnedviaScriptInterpreter = SELECT 'Service Control Spawned via Script Interpreter' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^sc\\.exe$' OR EventData.OriginalFileName = 'sc.exe' ) 
      AND ParentImageBase =~ '^cmd\\.exe$|^wscript\\.exe$|^rundll32\\.exe$|^regsvr32\\.exe$|^wmic\\.exe$|^mshta\\.exe$|^powershell\\.exe$|^pwsh\\.exe$'
      AND CommandArgs =~ '^config$|^create$|^start$|^delete$|^stop$|^pause$'
      AND  NOT EventData.User =~ '^S-1-5-18$' )

    LET _ShortcutFileWrittenorModifiedforPersistence = SELECT 'Shortcut File Written or Modified for Persistence' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND split(string=EventData.User, sep='''\\''')[0] != 'NT AUTHORITY'
      AND EventData.TargetFilename =~ '^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\.*$|^C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\\\\.*$'
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^wmic\\.exe$|^mshta\\.exe$|^pwsh\\.exe$|^cscript\\.exe$|^wscript\\.exe$|^regsvr32\\.exe$|^RegAsm\\.exe$|^rundll32\\.exe$|^EQNEDT32\\.EXE$|^WINWORD\\.EXE$|^EXCEL\\.EXE$|^POWERPNT\\.EXE$|^MSPUB\\.EXE$|^MSACCESS\\.EXE$|^iexplore\\.exe$|^InstallUtil\\.exe$' )

    LET _SolarWindsProcessDisablingServicesviaRegistry = SELECT 'SolarWinds Process Disabling Services via Registry' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\.*ControlSet.*\\\\Services\\\\.*\\\\Start$'
      AND ValueData = '4'
      AND ImageBase =~ '^SolarWinds\\.BusinessLayerHost.*\\.exe$|^ConfigurationWizard.*\\.exe$|^NetflowDatabaseMaintenance.*\\.exe$|^NetFlowService.*\\.exe$|^SolarWinds\\.Administration.*\\.exe$|^SolarWinds\\.Collector\\.Service.*\\.exe$|^SolarwindsDiagnostics.*\\.exe$' )

    LET _StartuporRunKeyRegistryModification = SELECT 'Startup or Run Key Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  (  NOT ValueData
      AND NormalizedTargetObject =~ '^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKLM\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\.*$'
      AND  NOT ValueData =~ '^ctfmon\\.exe /n$'
      AND  NOT  ( ValueData =~ '^Application Restart #.*$'
      AND ImageBase =~ '^csrss\\.exe$' ) 
      AND  NOT EventData.User IN ('S-1-5-18', 'S-1-5-19', 'S-1-5-20' ) 
      AND  NOT ValueData =~ '^.:\\\\Program Files\\\\.*\\.exe$|^.:\\\\Program Files \\(x86\\)\\\\.*\\.exe$'
      AND  NOT EventData.Image =~ '^.:\\\\Windows\\\\System32\\\\msiexec\\.exe$|^.:\\\\Windows\\\\SysWOW64\\\\msiexec\\.exe$'
      AND  NOT  ( ImageBase =~ '^OneDriveSetup\\.exe$'
      AND ValueData =~ '^Delete Cached Standalone Update Binary$|^Delete Cached Update Binary$|^amd64$|^Uninstall .*$'
      AND ValueData =~ '^.:\\\\Windows\\\\system32\\\\cmd\\.exe /q /c .* ".:\\\\Users\\\\.*\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\.*"$' )  )

    LET _SuspiciousCertUtilCommands = SELECT 'Suspicious CertUtil Commands' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^certutil\\.exe$' OR EventData.OriginalFileName = 'CertUtil.exe' ) 
      AND CommandArgs =~ '^.decode$|^.encode$|^.urlcache$|^.verifyctl$|^.encodehex$|^.decodehex$' )

    LET _SuspiciousCmdExecutionviaWMI = SELECT 'Suspicious Cmd Execution via WMI' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^WmiPrvSE\\.exe$'
      AND ImageBase =~ '^cmd\\.exe$'
      AND CommandArgs =~ '^\\\\\\\\127\\.0\\.0\\.1\\\\.*$'
      AND CommandArgs =~ '^2>&1$|^1>$' )

    LET _SuspiciousDLLLoadedforPersistenceorPrivilegeEscalation = SELECT 'Suspicious DLL Loaded for Persistence or Privilege Escalation' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM LibraryInfo
    WHERE  ( EventData.ImageLoaded =~ '^wlbsctrl\\.dll$|^wbemcomn\\.dll$|^WptsExtensions\\.dll$|^Tsmsisrv\\.dll$|^TSVIPSrv\\.dll$|^Msfte\\.dll$|^wow64log\\.dll$|^WindowsCoreDeviceInfo\\.dll$|^Ualapi\\.dll$|^wlanhlp\\.dll$|^phoneinfo\\.dll$|^EdgeGdi\\.dll$|^cdpsgshims\\.dll$|^windowsperformancerecordercontrol\\.dll$|^diagtrack_win\\.dll$'
      AND  NOT  ( EventData.Signature =~ '^Microsoft Windows$|^Microsoft Corporation$'
      AND EventData.signatureStatus =~ '^trusted$' )  )

    LET _SuspiciousEndpointSecurityParentProcess = SELECT 'Suspicious Endpoint Security Parent Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND ImageBase =~ '^esensor\\.exe$|^elastic-endpoint\\.exe$'
      AND  NOT EventData.ParentImage
      AND  NOT EventData.ParentImage =~ '^C:\\\\Program Files\\\\Elastic\\\\.*$|^C:\\\\Windows\\\\System32\\\\services\\.exe$|^C:\\\\Windows\\\\System32\\\\WerFault.*\\.exe$|^C:\\\\Windows\\\\System32\\\\wermgr\\.exe$' )

    LET _SuspiciousExecutionShortProgramName = SELECT 'Suspicious Execution - Short Program Name' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  len(list=ImageBase)  > 0
      AND  len(list=ImageBase)  = 5
      AND Windows = 'Windows'
      AND  len(list=EventData.OriginalFileName)  > 5 )

    LET _SuspiciousExecutionfromaMountedDevice = SELECT 'Suspicious Execution from a Mounted Device' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND EventData.Image =~ '^C:\\\\.*$'
      AND EventData.CurrentDirectory =~ '^.:\\\\$'
      AND  NOT EventData.CurrentDirectory =~ '^C:\\\\$'
      AND ParentImageBase =~ '^explorer\\.exe$'
      AND ImageBase =~ '^rundll32\\.exe$|^mshta\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^cmd\\.exe$|^regsvr32\\.exe$|^cscript\\.exe$|^wscript\\.exe$' )

    LET _SuspiciousExecutionviaScheduledTask = SELECT 'Suspicious Execution via Scheduled Task' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^svchost\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^Schedule$'
      AND EventData.OriginalFileName IN ('cscript.exe', 'wscript.exe', 'PowerShell.EXE', 'Cmd.Exe', 'MSHTA.EXE', 'RUNDLL32.EXE', 'REGSVR32.EXE', 'MSBuild.exe', 'InstallUtil.exe', 'RegAsm.exe', 'RegSvcs.exe', 'msxsl.exe', 'CONTROL.EXE', 'EXPLORER.EXE', 'Microsoft.Workflow.Compiler.exe', 'msiexec.exe' ) 
      AND CommandArgs =~ '^C:\\\\Users\\\\.*$|^C:\\\\ProgramData\\\\.*$|^C:\\\\Windows\\\\Temp\\\\.*$|^C:\\\\Windows\\\\Tasks\\\\.*$|^C:\\\\PerfLogs\\\\.*$|^C:\\\\Intel\\\\.*$|^C:\\\\Windows\\\\Debug\\\\.*$|^C:\\\\HP\\\\.*$' )

    LET _SuspiciousExplorerChildProcess = SELECT 'Suspicious Explorer Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^cscript\\.exe$|^wscript\\.exe$|^powershell\\.exe$|^rundll32\\.exe$|^cmd\\.exe$|^mshta\\.exe$|^regsvr32\\.exe$' OR EventData.OriginalFileName IN ('cscript.exe', 'wscript.exe', 'PowerShell.EXE', 'RUNDLL32.EXE', 'Cmd.Exe', 'MSHTA.EXE', 'REGSVR32.EXE' )  ) 
      AND ParentImageBase =~ '^explorer\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^-Embedding$'
      AND  NOT commandline_split(command=EventData.ParentCommandLine) =~ '^/factory,{5BD95610-9434-43C2-886C-57852CC8A120}$|^/factory,{ceff45ee-c862-41de-aee2-a022c81eda92}$' )

    LET _SuspiciousImageLoadtaskschddllfromMSOffice = SELECT 'Suspicious Image Load (taskschd.dll) from MS Office' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM LibraryInfo
    WHERE  ( ImageBase =~ '^WINWORD\\.EXE$|^EXCEL\\.EXE$|^POWERPNT\\.EXE$|^MSPUB\\.EXE$|^MSACCESS\\.EXE$'
      AND action =~ '^load$'
      AND category =~ '^library$'
      AND EventData.ImageLoaded =~ '^taskschd\\.dll$' )

    LET _SuspiciousImagePathServiceCreation = SELECT 'Suspicious ImagePath Service Creation' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Services\\\\.*\\\\ImagePath$'
      AND ValueData =~ '^%COMSPEC%.*$|^.*\\\\\\.\\\\pipe\\\\.*$' )

    LET _SuspiciousMSOfficeChildProcess = SELECT 'Suspicious MS Office Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^eqnedt32\\.exe$|^excel\\.exe$|^fltldr\\.exe$|^msaccess\\.exe$|^mspub\\.exe$|^powerpnt\\.exe$|^winword\\.exe$'
      AND ImageBase =~ '^Microsoft\\.Workflow\\.Compiler\\.exe$|^arp\\.exe$|^atbroker\\.exe$|^bginfo\\.exe$|^bitsadmin\\.exe$|^cdb\\.exe$|^certutil\\.exe$|^cmd\\.exe$|^cmstp\\.exe$|^control\\.exe$|^cscript\\.exe$|^csi\\.exe$|^dnx\\.exe$|^dsget\\.exe$|^dsquery\\.exe$|^forfiles\\.exe$|^fsi\\.exe$|^ftp\\.exe$|^gpresult\\.exe$|^hostname\\.exe$|^ieexec\\.exe$|^iexpress\\.exe$|^installutil\\.exe$|^ipconfig\\.exe$|^mshta\\.exe$|^msxsl\\.exe$|^nbtstat\\.exe$|^net\\.exe$|^net1\\.exe$|^netsh\\.exe$|^netstat\\.exe$|^nltest\\.exe$|^odbcconf\\.exe$|^ping\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^qprocess\\.exe$|^quser\\.exe$|^qwinsta\\.exe$|^rcsi\\.exe$|^reg\\.exe$|^regasm\\.exe$|^regsvcs\\.exe$|^regsvr32\\.exe$|^sc\\.exe$|^schtasks\\.exe$|^systeminfo\\.exe$|^tasklist\\.exe$|^tracert\\.exe$|^whoami\\.exe$|^wmic\\.exe$|^wscript\\.exe$|^xwizard\\.exe$|^explorer\\.exe$|^rundll32\\.exe$|^hh\\.exe$' )

    LET _SuspiciousMSOutlookChildProcess = SELECT 'Suspicious MS Outlook Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^outlook\\.exe$'
      AND ImageBase =~ '^Microsoft\\.Workflow\\.Compiler\\.exe$|^arp\\.exe$|^atbroker\\.exe$|^bginfo\\.exe$|^bitsadmin\\.exe$|^cdb\\.exe$|^certutil\\.exe$|^cmd\\.exe$|^cmstp\\.exe$|^cscript\\.exe$|^csi\\.exe$|^dnx\\.exe$|^dsget\\.exe$|^dsquery\\.exe$|^forfiles\\.exe$|^fsi\\.exe$|^ftp\\.exe$|^gpresult\\.exe$|^hostname\\.exe$|^ieexec\\.exe$|^iexpress\\.exe$|^installutil\\.exe$|^ipconfig\\.exe$|^mshta\\.exe$|^msxsl\\.exe$|^nbtstat\\.exe$|^net\\.exe$|^net1\\.exe$|^netsh\\.exe$|^netstat\\.exe$|^nltest\\.exe$|^odbcconf\\.exe$|^ping\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^qprocess\\.exe$|^quser\\.exe$|^qwinsta\\.exe$|^rcsi\\.exe$|^reg\\.exe$|^regasm\\.exe$|^regsvcs\\.exe$|^regsvr32\\.exe$|^sc\\.exe$|^schtasks\\.exe$|^systeminfo\\.exe$|^tasklist\\.exe$|^tracert\\.exe$|^whoami\\.exe$|^wmic\\.exe$|^wscript\\.exe$|^xwizard\\.exe$' )

    LET _SuspiciousNETCodeCompilation = SELECT 'Suspicious .NET Code Compilation' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^csc\\.exe$|^vbc\\.exe$'
      AND ParentImageBase =~ '^wscript\\.exe$|^mshta\\.exe$|^cscript\\.exe$|^wmic\\.exe$|^svchost\\.exe$|^rundll32\\.exe$|^cmstp\\.exe$|^regsvr32\\.exe$' )

    LET _SuspiciousPDFReaderChildProcess = SELECT 'Suspicious PDF Reader Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^AcroRd32\\.exe$|^Acrobat\\.exe$|^FoxitPhantomPDF\\.exe$|^FoxitReader\\.exe$'
      AND ImageBase =~ '^arp\\.exe$|^dsquery\\.exe$|^dsget\\.exe$|^gpresult\\.exe$|^hostname\\.exe$|^ipconfig\\.exe$|^nbtstat\\.exe$|^net\\.exe$|^net1\\.exe$|^netsh\\.exe$|^netstat\\.exe$|^nltest\\.exe$|^ping\\.exe$|^qprocess\\.exe$|^quser\\.exe$|^qwinsta\\.exe$|^reg\\.exe$|^sc\\.exe$|^systeminfo\\.exe$|^tasklist\\.exe$|^tracert\\.exe$|^whoami\\.exe$|^bginfo\\.exe$|^cdb\\.exe$|^cmstp\\.exe$|^csi\\.exe$|^dnx\\.exe$|^fsi\\.exe$|^ieexec\\.exe$|^iexpress\\.exe$|^installutil\\.exe$|^Microsoft\\.Workflow\\.Compiler\\.exe$|^msbuild\\.exe$|^mshta\\.exe$|^msxsl\\.exe$|^odbcconf\\.exe$|^rcsi\\.exe$|^regsvr32\\.exe$|^xwizard\\.exe$|^atbroker\\.exe$|^forfiles\\.exe$|^schtasks\\.exe$|^regasm\\.exe$|^regsvcs\\.exe$|^cmd\\.exe$|^cscript\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^wmic\\.exe$|^wscript\\.exe$|^bitsadmin\\.exe$|^certutil\\.exe$|^ftp\\.exe$' )

    LET _SuspiciousPowerShellEngineImageLoad = SELECT 'Suspicious PowerShell Engine ImageLoad' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM LibraryInfo
    WHERE  ( EventData.ImageLoaded =~ '^System\\.Management\\.Automation\\.ni\\.dll$|^System\\.Management\\.Automation\\.dll$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\RemoteFXvGPUDisablement\\.exe$|^C:\\\\Windows\\\\System32\\\\sdiagnhost\\.exe$'
      AND  NOT EventData.Image =~ 'C:\\Program Files( \(x86\))?\\*\.exe'
      AND  NOT ImageBase =~ '^Altaro\\.SubAgent\\.exe$|^AppV_Manage\\.exe$|^azureadconnect\\.exe$|^CcmExec\\.exe$|^configsyncrun\\.exe$|^choco\\.exe$|^ctxappvservice\\.exe$|^DVLS\\.Console\\.exe$|^edgetransport\\.exe$|^exsetup\\.exe$|^forefrontactivedirectoryconnector\\.exe$|^InstallUtil\\.exe$|^JenkinsOnDesktop\\.exe$|^Microsoft\\.EnterpriseManagement\\.ServiceManager\\.UI\\.Console\\.exe$|^mmc\\.exe$|^mscorsvw\\.exe$|^msexchangedelivery\\.exe$|^msexchangefrontendtransport\\.exe$|^msexchangehmworker\\.exe$|^msexchangesubmission\\.exe$|^msiexec\\.exe$|^MsiExec\\.exe$|^noderunner\\.exe$|^NServiceBus\\.Host\\.exe$|^NServiceBus\\.Host32\\.exe$|^NServiceBus\\.Hosting\\.Azure\\.HostProcess\\.exe$|^OuiGui\\.WPF\\.exe$|^powershell\\.exe$|^powershell_ise\\.exe$|^pwsh\\.exe$|^SCCMCliCtrWPF\\.exe$|^ScriptEditor\\.exe$|^ScriptRunner\\.exe$|^sdiagnhost\\.exe$|^servermanager\\.exe$|^setup100\\.exe$|^ServiceHub\\.VSDetouredHost\\.exe$|^SPCAF\\.Client\\.exe$|^SPCAF\\.SettingsEditor\\.exe$|^SQLPS\\.exe$|^telemetryservice\\.exe$|^UMWorkerProcess\\.exe$|^w3wp\\.exe$|^wsmprovhost\\.exe$' )

    LET _SuspiciousPrintSpoolerFileDeletion = SELECT 'Suspicious Print Spooler File Deletion' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type =~ '^deletion$'
      AND  NOT ImageBase =~ '^spoolsv\\.exe$|^dllhost\\.exe$|^explorer\\.exe$'
      AND EventData.TargetFilename =~ '^.:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\x64\\\\3\\\\.*\\.dll$' )

    LET _SuspiciousPrintSpoolerSPLFileCreated = SELECT 'Suspicious PrintSpooler SPL File Created' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^spl$'
      AND EventData.TargetFilename =~ '^.:\\\\Windows\\\\System32\\\\spool\\\\PRINTERS\\\\.*$'
      AND  NOT ImageBase =~ '^spoolsv\\.exe$|^printfilterpipelinesvc\\.exe$|^PrintIsolationHost\\.exe$|^splwow64\\.exe$|^msiexec\\.exe$|^poqexec\\.exe$' )

    LET _SuspiciousPrintSpoolerServiceExecutableFileCreation = SELECT 'Suspicious PrintSpooler Service Executable File Creation' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND ImageBase =~ '^spoolsv\\.exe$'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^exe$|^dll$'
      AND  NOT EventData.TargetFilename =~ '^.:\\\\Windows\\\\System32\\\\spool\\\\.*$|^.:\\\\Windows\\\\Temp\\\\.*$|^.:\\\\Users\\\\.*$' )

    LET _SuspiciousProcessExecutionviaRenamedPsExecExecutable = SELECT 'Suspicious Process Execution via Renamed PsExec Executable' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND EventData.OriginalFileName =~ '^psexesvc\\.exe$'
      AND  NOT ImageBase =~ '^PSEXESVC\\.exe$' )

    LET _SuspiciousProcessfromConhost = SELECT 'Suspicious Process from Conhost' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^conhost\\.exe$'
      AND  NOT EventData.Image =~ '^.:\\\\Windows\\\\splwow64\\.exe$|^.:\\\\Windows\\\\System32\\\\WerFault\\.exe$|^.:\\\\Windows\\\\System32\\\\conhost\\.exe$' )

    LET _SuspiciousRDPActiveXClientLoaded = SELECT 'Suspicious RDP ActiveX Client Loaded' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM LibraryInfo
    WHERE  ( EventData.ImageLoaded =~ '^mstscax\\.dll$'
      AND EventData.Image =~ '^C:\\\\Windows\\\\.*$|^C:\\\\Users\\\\Public\\\\.*$|^C:\\\\Users\\\\Default\\\\.*$|^C:\\\\Intel\\\\.*$|^C:\\\\PerfLogs\\\\.*$|^C:\\\\ProgramData\\\\.*$|^\\\\Device\\\\Mup\\\\.*$|^\\\\\\\\.*$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\mstsc\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\mstsc\\.exe$' )

    LET _SuspiciousSolarWindsChildProcess = SELECT 'Suspicious SolarWinds Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^SolarWinds\\.BusinessLayerHost\\.exe$|^SolarWinds\\.BusinessLayerHostx64\\.exe$'
      AND  NOT ImageBase =~ '^APMServiceControl.*\\.exe$|^ExportToPDFCmd.*\\.Exe$|^SolarWinds\\.Credentials\\.Orion\\.WebApi.*\\.exe$|^SolarWinds\\.Orion\\.Topology\\.Calculator.*\\.exe$|^Database-Maint\\.exe$|^SolarWinds\\.Orion\\.ApiPoller\\.Service\\.exe$|^WerFault\\.exe$|^WerMgr\\.exe$' )

    LET _SuspiciousStartupShellFolderModification = SELECT 'Suspicious Startup Shell Folder Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Common Startup$|^HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Common Startup$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup$|^HKEY_USERS\\\\.*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup$'
      AND  NOT ValueData
      AND  NOT ValueData =~ '^C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup$|^%ProgramData%\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup$|^%USERPROFILE%\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup$|^C:\\\\Users\\\\.*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup$' )

    LET _SuspiciousWMIImageLoadfromMSOffice = SELECT 'Suspicious WMI Image Load from MS Office' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM LibraryInfo
    WHERE  ( ImageBase =~ '^WINWORD\\.EXE$|^EXCEL\\.EXE$|^POWERPNT\\.EXE$|^MSPUB\\.EXE$|^MSACCESS\\.EXE$'
      AND action =~ '^load$'
      AND category =~ '^library$'
      AND EventData.ImageLoaded =~ '^wmiutils\\.dll$' )

    LET _SuspiciousWerFaultChildProcess = SELECT 'Suspicious WerFault Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^WerFault\\.exe$'
      AND  NOT ImageBase =~ '^cofire\\.exe$|^psr\\.exe$|^VsJITDebugger\\.exe$|^TTTracer\\.exe$|^rundll32\\.exe$|^LogiOptionsMgr\\.exe$'
      AND  NOT CommandArgs =~ '^/LOADSAVEDWINDOWS$|^/restore$|^RestartByRestartManager.*$|^--restarted$|^createdump$|^dontsend$|^/watson$' )

    LET _SuspiciousZoomChildProcess = SELECT 'Suspicious Zoom Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started', 'info' ) 
      AND ParentImageBase =~ '^Zoom\\.exe$'
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$|^pwsh\\.exe$' )

    LET _SvchostspawningCmd = SELECT 'Svchost spawning Cmd' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^svchost\\.exe$'
      AND ImageBase =~ '^cmd\\.exe$'
      AND  NOT  ( EventData.OriginalFileName = 'Cmd.Exe'
      AND CommandArgs =~ '^.:\\\\Program Files\\\\Npcap\\\\CheckStatus\\.bat..$' )  )

    LET _SystemShellsviaServices = SELECT 'System Shells via Services' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^services\\.exe$'
      AND ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$'
      AND  NOT CommandArgs =~ '^NVDisplay\\.ContainerLocalSystem$' )

    LET _UACBypassAttemptviaElevatedCOMInternetExplorerAddOnInstaller = SELECT 'UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.Image =~ '^C:\\\\.*\\\\AppData\\\\.*\\\\Temp\\\\IDC.*\\.tmp\\\\.*\\.exe$'
      AND ParentImageBase =~ '^ieinstal\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^-Embedding$' )

    LET _UACBypassAttemptviaPrivilegedIFileOperationCOMInterface = SELECT 'UAC Bypass Attempt via Privileged IFileOperation COM Interface' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type =~ '^change$'
      AND ImageBase =~ '^dllhost\\.exe$'
      AND basename(path=EventData.TargetFilename) =~ '^wow64log\\.dll$|^comctl32\\.dll$|^DismCore\\.dll$|^OskSupport\\.dll$|^duser\\.dll$|^Accessibility\\.ni\\.dll$'
      AND  NOT EventData.TargetFilename =~ '^C:\\\\Windows\\\\SoftwareDistribution\\\\.*$|^C:\\\\Windows\\\\WinSxS\\\\.*$' )

    LET _UACBypassAttemptviaWindowsDirectoryMasquerading = SELECT 'UAC Bypass Attempt via Windows Directory Masquerading' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND CommandArgs =~ '^C:\\\\Windows \\\\system32\\\\.*\\.exe$|^C:\\\\Windows \\\\SysWOW64\\\\.*\\.exe$' )

    LET _UACBypassAttemptwithIEditionUpgradeManagerElevatedCOMInterface = SELECT 'UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^Clipup\\.exe$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\ClipUp\\.exe$'
      AND ParentImageBase =~ '^dllhost\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^/Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}$' )

    LET _UACBypassviaDiskCleanupScheduledTaskHijack = SELECT 'UAC Bypass via DiskCleanup Scheduled Task Hijack' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND CommandArgs =~ '^/autoclean$'
      AND CommandArgs =~ '^/d$'
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\cleanmgr\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\cleanmgr\\.exe$|^C:\\\\Windows\\\\System32\\\\taskhostw\\.exe$' )

    LET _UACBypassviaICMLuaUtilElevatedCOMInterface = SELECT 'UAC Bypass via ICMLuaUtil Elevated COM Interface' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase = 'dllhost.exe'
      AND commandline_split(command=EventData.ParentCommandLine) IN ('/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}', '/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}' ) 
      AND EventData.OriginalFileName != 'WerFault.exe' )

    LET _UACBypassviaWindowsFirewallSnapInHijack = SELECT 'UAC Bypass via Windows Firewall Snap-In Hijack' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase = 'mmc.exe'
      AND commandline_split(command=EventData.ParentCommandLine) = 'WF.msc'
      AND ImageBase != 'WerFault.exe' )

    LET _UncommonRegistryPersistenceChange = SELECT 'Uncommon Registry Persistence Change' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Terminal Server\\\\Install\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\.*$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Terminal Server\\\\Install\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Runonce\\\\.*$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Run$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\IconServiceLib$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\AppSetup$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Taskman$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\VmApplet$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\Shell$|^HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logoff\\\\Script$|^HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logon\\\\Script$|^HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Shutdown\\\\Script$|^HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Startup\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\.*$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\Shell$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logoff\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logon\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Shutdown\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Startup\\\\Script$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\.*\\\\ShellComponent$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows CE Services\\\\AutoStartOnConnect\\\\MicrosoftActiveSync$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows CE Services\\\\AutoStartOnDisconnect\\\\MicrosoftActiveSync$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Ctf\\\\LangBarAddin\\\\.*\\\\FilePath$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Exec$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Script$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Ctf\\\\LangBarAddin\\\\.*\\\\FilePath$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Exec$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Script$|^HKEY_USERS\\\\.*\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\.*\\\\VerifierDlls$|^HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\GpExtensions\\\\.*\\\\DllName$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\SafeBoot\\\\AlternateShell$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Terminal Server\\\\Wds\\\\rdpwd\\\\StartupPrograms$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Terminal Server\\\\WinStations\\\\RDP-Tcp\\\\InitialProgram$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Session Manager\\\\BootExecute$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Session Manager\\\\SetupExecute$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Session Manager\\\\Execute$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\Session Manager\\\\S0InitialCommand$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\ServiceControlManagerExtension$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Control\\\\BootVerificationProgram\\\\ImagePath$|^HKLM\\\\SYSTEM\\\\Setup\\\\CmdLine$|^HKEY_USERS\\\\.*\\\\Environment\\\\UserInitMprLogonScript$'
      AND  NOT ValueData =~ '^C:\\\\Windows\\\\system32\\\\userinit\\.exe$|^cmd\\.exe$|^C:\\\\Program Files \\(x86\\)\\\\.*\\.exe$|^C:\\\\Program Files\\\\.*\\.exe$'
      AND  NOT  ( ImageBase =~ '^rundll32\\.exe$'
      AND NormalizedTargetObject =~ '^.*\\\\Software\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\.*\\\\Script$' ) 
      AND  NOT EventData.Image =~ '^C:\\\\Windows\\\\System32\\\\msiexec\\.exe$|^C:\\\\Windows\\\\SysWOW64\\\\msiexec\\.exe$|^C:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Platform\\\\.*\\\\MsMpEng\\.exe$|^C:\\\\Program Files\\\\.*\\.exe$|^C:\\\\Program Files \\(x86\\)\\\\.*\\.exe$' )

    LET _UnusualChildProcessfromaSystemVirtualProcess = SELECT 'Unusual Child Process from a System Virtual Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND EventData.ParentProcessId = 4
      AND  NOT EventData.Image =~ '^Registry$|^MemCompression$|^.:\\\\Windows\\\\System32\\\\smss\\.exe$' )

    LET _UnusualExecutableFileCreationbyaSystemCriticalProcess = SELECT 'Unusual Executable File Creation by a System Critical Process' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type != 'deletion'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^exe$|^dll$'
      AND ImageBase =~ '^smss\\.exe$|^autochk\\.exe$|^csrss\\.exe$|^wininit\\.exe$|^services\\.exe$|^lsass\\.exe$|^winlogon\\.exe$|^userinit\\.exe$|^LogonUI\\.exe$' )

    LET _UnusualFileCreationAlternateDataStream = SELECT 'Unusual File Creation - Alternate Data Stream' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( event_type = 'creation'
      AND EventData.TargetFilename =~ '^C:\\\\.*:.*$'
      AND  NOT EventData.TargetFilename =~ '^C:\\\\.*:zone\\.identifier.*$'
      AND split(string=EventData.TargetFilename, sep='''\\.''')[-1] =~ '^pdf$|^dll$|^png$|^exe$|^dat$|^com$|^bat$|^cmd$|^sys$|^vbs$|^ps1$|^hta$|^txt$|^vbe$|^js$|^wsh$|^docx$|^doc$|^xlsx$|^xls$|^pptx$|^ppt$|^rtf$|^gif$|^jpg$|^png$|^bmp$|^img$|^iso$' )

    LET _UnusualFileModificationbydnsexe = SELECT 'Unusual File Modification by dns.exe' AS Detection,
           EventData AS EventData,
           EventData || UserData AS _EventData,
           System AS _System
    FROM FileInfo
    WHERE  ( ImageBase =~ '^dns\\.exe$'
      AND event_type IN ('creation', 'deletion', 'change' ) 
      AND  NOT basename(path=EventData.TargetFilename) =~ '^dns\\.log$' )

    LET _UnusualParentChildRelationship = SELECT 'Unusual Parent-Child Relationship' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  NOT ParentImageBase
      AND  (  ( ImageBase =~ '^autochk\\.exe$'
      AND  NOT ParentImageBase =~ '^smss\\.exe$' )  OR  ( ImageBase =~ '^fontdrvhost\\.exe$|^dwm\\.exe$'
      AND  NOT ParentImageBase =~ '^wininit\\.exe$|^winlogon\\.exe$' )  OR  ( ImageBase =~ '^consent\\.exe$|^RuntimeBroker\\.exe$|^TiWorker\\.exe$'
      AND  NOT ParentImageBase =~ '^svchost\\.exe$' )  OR  ( ImageBase =~ '^SearchIndexer\\.exe$'
      AND  NOT ParentImageBase =~ '^services\\.exe$' )  OR  ( ImageBase =~ '^SearchProtocolHost\\.exe$'
      AND  NOT ParentImageBase =~ '^SearchIndexer\\.exe$|^dllhost\\.exe$' )  OR  ( ImageBase =~ '^dllhost\\.exe$'
      AND  NOT ParentImageBase =~ '^services\\.exe$|^svchost\\.exe$' )  OR  ( ImageBase =~ '^smss\\.exe$'
      AND  NOT ParentImageBase =~ '^System$|^smss\\.exe$' )  OR  ( ImageBase =~ '^csrss\\.exe$'
      AND  NOT ParentImageBase =~ '^smss\\.exe$|^svchost\\.exe$' )  OR  ( ImageBase =~ '^wininit\\.exe$'
      AND  NOT ParentImageBase =~ '^smss\\.exe$' )  OR  ( ImageBase =~ '^winlogon\\.exe$'
      AND  NOT ParentImageBase =~ '^smss\\.exe$' )  OR  ( ImageBase =~ '^lsass\\.exe$|^LsaIso\\.exe$'
      AND  NOT ParentImageBase =~ '^wininit\\.exe$' )  OR  ( ImageBase =~ '^LogonUI\\.exe$'
      AND  NOT ParentImageBase =~ '^wininit\\.exe$|^winlogon\\.exe$' )  OR  ( ImageBase =~ '^services\\.exe$'
      AND  NOT ParentImageBase =~ '^wininit\\.exe$' )  OR  ( ImageBase =~ '^svchost\\.exe$'
      AND  NOT ParentImageBase =~ '^MsMpEng\\.exe$|^services\\.exe$' )  OR  ( ImageBase =~ '^spoolsv\\.exe$'
      AND  NOT ParentImageBase =~ '^services\\.exe$' )  OR  ( ImageBase =~ '^taskhost\\.exe$'
      AND  NOT ParentImageBase =~ '^services\\.exe$|^svchost\\.exe$' )  OR  ( ImageBase =~ '^taskhostw\\.exe$'
      AND  NOT ParentImageBase =~ '^services\\.exe$|^svchost\\.exe$' )  OR  ( ImageBase =~ '^userinit\\.exe$'
      AND  NOT ParentImageBase =~ '^dwm\\.exe$|^winlogon\\.exe$' )  OR  ( ImageBase =~ '^wmiprvse\\.exe$|^wsmprovhost\\.exe$|^winrshost\\.exe$'
      AND  NOT ParentImageBase =~ '^svchost\\.exe$' )  OR  ( ParentImageBase =~ '^SearchProtocolHost\\.exe$|^taskhost\\.exe$|^csrss\\.exe$'
      AND  NOT ImageBase =~ '^werfault\\.exe$|^wermgr\\.exe$|^WerFaultSecure\\.exe$' )  OR  ( ParentImageBase =~ '^autochk\\.exe$'
      AND  NOT ImageBase =~ '^chkdsk\\.exe$|^doskey\\.exe$|^WerFault\\.exe$' )  OR  ( ParentImageBase =~ '^smss\\.exe$'
      AND  NOT ImageBase =~ '^autochk\\.exe$|^smss\\.exe$|^csrss\\.exe$|^wininit\\.exe$|^winlogon\\.exe$|^setupcl\\.exe$|^WerFault\\.exe$' )  OR  ( ParentImageBase =~ '^wermgr\\.exe$'
      AND  NOT ImageBase =~ '^WerFaultSecure\\.exe$|^wermgr\\.exe$|^WerFault\\.exe$' )  OR  ( ParentImageBase =~ '^conhost\\.exe$'
      AND  NOT ImageBase =~ '^mscorsvw\\.exe$|^wermgr\\.exe$|^WerFault\\.exe$|^WerFaultSecure\\.exe$' )  )  )

    LET _UnusualParentProcessforcmdexe = SELECT 'Unusual Parent Process for cmd.exe' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^cmd\\.exe$'
      AND ParentImageBase =~ '^lsass\\.exe$|^csrss\\.exe$|^epad\\.exe$|^regsvr32\\.exe$|^dllhost\\.exe$|^LogonUI\\.exe$|^wermgr\\.exe$|^spoolsv\\.exe$|^jucheck\\.exe$|^jusched\\.exe$|^ctfmon\\.exe$|^taskhostw\\.exe$|^GoogleUpdate\\.exe$|^sppsvc\\.exe$|^sihost\\.exe$|^slui\\.exe$|^SIHClient\\.exe$|^SearchIndexer\\.exe$|^SearchProtocolHost\\.exe$|^FlashPlayerUpdateService\\.exe$|^WerFault\\.exe$|^WUDFHost\\.exe$|^unsecapp\\.exe$|^wlanext\\.exe$' )

    LET _UnusualPersistenceviaServicesRegistry = SELECT 'Unusual Persistence via Services Registry' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( NormalizedTargetObject =~ '^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Services\\\\.*\\\\ServiceDLL$|^HKLM\\\\SYSTEM\\\\ControlSet.*\\\\Services\\\\.*\\\\ImagePath$'
      AND  NOT ValueData =~ '^.:\\\\windows\\\\system32\\\\Drivers\\\\.*\\.sys$|^\\\\SystemRoot\\\\System32\\\\drivers\\\\.*\\.sys$|^\\\\..\\\\.:\\\\Windows\\\\system32\\\\Drivers\\\\.*\\.SYS$|^system32\\\\DRIVERS\\\\USBSTOR$'
      AND  NOT  ( ImageBase =~ '^procexp..\\.exe$'
      AND ValueData =~ '^.:\\\\.*\\\\procexp.*\\.sys$' ) 
      AND  NOT EventData.Image =~ '^.:\\\\Program Files\\\\.*\\.exe$|^.:\\\\Program Files \\(x86\\)\\\\.*\\.exe$|^.:\\\\Windows\\\\System32\\\\svchost\\.exe$|^.:\\\\Windows\\\\winsxs\\\\.*\\\\TiWorker\\.exe$|^.:\\\\Windows\\\\System32\\\\drvinst\\.exe$|^.:\\\\Windows\\\\System32\\\\services\\.exe$|^.:\\\\Windows\\\\System32\\\\msiexec\\.exe$|^.:\\\\Windows\\\\System32\\\\regsvr32\\.exe$' )

    LET _UnusualPrintSpoolerChildProcess = SELECT 'Unusual Print Spooler Child Process' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^spoolsv\\.exe$'
      AND EventData.User =~ '^S-1-5-18$'
      AND  NOT ImageBase =~ '^splwow64\\.exe$|^PDFCreator\\.exe$|^acrodist\\.exe$|^spoolsv\\.exe$|^msiexec\\.exe$|^route\\.exe$|^WerFault\\.exe$'
      AND  NOT EventData.CommandLine =~ '^.*\\\\WINDOWS\\\\system32\\\\spool\\\\DRIVERS.*$'
      AND  NOT  ( ImageBase =~ '^net\\.exe$'
      AND EventData.CommandLine =~ '^.*stop.*$|^.*start.*$' ) 
      AND  NOT  ( ImageBase =~ '^cmd\\.exe$|^powershell\\.exe$'
      AND EventData.CommandLine =~ '^.*\\.spl.*$|^.*\\\\program files.*$|^.*route add.*$' ) 
      AND  NOT  ( ImageBase =~ '^netsh\\.exe$'
      AND EventData.CommandLine =~ '^.*add portopening.*$|^.*rule name.*$' ) 
      AND  NOT  ( ImageBase =~ '^regsvr32\\.exe$'
      AND EventData.CommandLine =~ '^.*PrintConfig\\.dll.*$' )  )

    LET _UnusualProcessExecutionPathAlternateDataStream = SELECT 'Unusual Process Execution Path - Alternate Data Stream' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND CommandArgs =~ '^.:\\\\.*:.*$'
      AND len(list=commandline_split(command=EventData.CommandLine))  = 1 )

    LET _UnusualServiceHostChildProcessChildlessService = SELECT 'Unusual Service Host Child Process - Childless Service' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^svchost\\.exe$'
      AND commandline_split(command=EventData.ParentCommandLine) =~ '^WdiSystemHost$|^LicenseManager$|^StorSvc$|^CDPSvc$|^cdbhsvc$|^BthAvctpSvc$|^SstpSvc$|^WdiServiceHost$|^imgsvc$|^TrkWks$|^WpnService$|^IKEEXT$|^PolicyAgent$|^CryptSvc$|^netprofm$|^ProfSvc$|^StateRepository$|^camsvc$|^LanmanWorkstation$|^NlaSvc$|^EventLog$|^hidserv$|^DisplayEnhancementService$|^ShellHWDetection$|^AppHostSvc$|^fhsvc$|^CscService$|^PushToInstall$'
      AND  NOT ImageBase =~ '^WerFault\\.exe$|^WerFaultSecure\\.exe$|^wermgr\\.exe$' )

    LET _UserAccountCreation = SELECT 'User Account Creation' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ImageBase =~ '^net\\.exe$|^net1\\.exe$'
      AND  NOT ParentImageBase =~ '^net\\.exe$'
      AND CommandArgs =~ '^user$'
      AND CommandArgs =~ '^/ad$|^/add$' )

    LET _VolumeShadowCopyDeletionviaVssAdmin = SELECT 'Volume Shadow Copy Deletion via VssAdmin' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^vssadmin\\.exe$' OR EventData.OriginalFileName = 'VSSADMIN.EXE' ) 
      AND CommandArgs =~ '^delete$'
      AND CommandArgs =~ '^shadows$' )

    LET _VolumeShadowCopyDeletionviaWMIC = SELECT 'Volume Shadow Copy Deletion via WMIC' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^WMIC\\.exe$' OR EventData.OriginalFileName = 'wmic.exe' ) 
      AND CommandArgs =~ '^delete$'
      AND CommandArgs =~ '^shadowcopy$' )

    LET _WebshellDetectionScriptProcessChildofCommonWebProcesses = SELECT 'Webshell Detection: Script Process Child of Common Web Processes' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND ParentImageBase =~ '^w3wp\\.exe$|^httpd\\.exe$|^nginx\\.exe$|^php\\.exe$|^php-cgi\\.exe$|^tomcat\\.exe$'
      AND ImageBase =~ '^cmd\\.exe$|^cscript\\.exe$|^powershell\\.exe$|^pwsh\\.exe$|^wmic\\.exe$|^wscript\\.exe$' )

    LET _WhitespacePaddinginProcessCommandLine = SELECT 'Whitespace Padding in Process Command Line' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  (  ( event_type IN ('start', 'process_started' ) 
      AND EventData.CommandLine =~ '.*[ ]{20,}.*' )  OR EventData.CommandLine =~ '.*(.*[ ]{5,}[^ ]*){3,}.*' )

    LET _WindowsDefenderDisabledviaRegistryModification = SELECT 'Windows Defender Disabled via Registry Modification' AS Detection,
           EventData.Details AS Details,
           EventData.TargetObject AS TargetObject,
           EventData.Image AS Image,
           EventData.EventType AS EventType,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM RegInfo
    WHERE  ( event_type IN ('creation', 'change' ) 
      AND  (  ( NormalizedTargetObject =~ '^HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\DisableAntiSpyware$'
      AND ValueData =~ '^1$' )  OR  ( NormalizedTargetObject =~ '^HKLM\\\\System\\\\ControlSet.*\\\\Services\\\\WinDefend\\\\Start$'
      AND ValueData IN ('3', '4' )  )  )  )

    LET _WindowsDefenderExclusionsAddedviaPowerShell = SELECT 'Windows Defender Exclusions Added via PowerShell' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type = 'start'
      AND  ( ImageBase =~ '^powershell\\.exe$|^pwsh\\.exe$' OR EventData.OriginalFileName =~ '^powershell\\.exe$|^pwsh\\.exe$' ) 
      AND CommandArgs =~ '^.*Add-MpPreference.*-Exclusion.*$|^.*Set-MpPreference.*-Exclusion.*$' )

    LET _WindowsNetworkEnumeration = SELECT 'Windows Network Enumeration' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND  ( ImageBase =~ '^net\\.exe$' OR EventData.OriginalFileName = 'net.exe' OR  (  ( ImageBase =~ '^net1\\.exe$' OR EventData.OriginalFileName = 'net1.exe' ) 
      AND  NOT ParentImageBase =~ '^net\\.exe$' )  ) 
      AND  ( CommandArgs =~ '^view$' OR  ( CommandArgs =~ '^time$'
      AND CommandArgs =~ '^\\\\\\\\.*$' )  )  )

    LET _WindowsScriptExecutingPowerShell = SELECT 'Windows Script Executing PowerShell' AS Detection,
           EventData.User AS User,
           EventData.CommandLine AS CommandLine,
           EventData.ParentImage AS ParentImage,
           EventData.Image AS Image,
           EventData.UtcTime AS UtcTime,
           EventData || UserData AS _EventData,
           System AS _System
    FROM ProcessInfo
    WHERE  ( event_type IN ('start', 'process_started' ) 
      AND ParentImageBase =~ '^cscript\\.exe$|^wscript\\.exe$'
      AND ImageBase =~ '^powershell\\.exe$' )

    SELECT * FROM chain(
       _ExportingExchangeMailboxviaPowerShell=_ExportingExchangeMailboxviaPowerShell,
       _NewActiveSyncAllowedDeviceIDAddedviaPowerShell=_NewActiveSyncAllowedDeviceIDAddedviaPowerShell,
       _EncryptingFileswithWinRarorz=_EncryptingFileswithWinRarorz,
       _ConnectiontoCommonlyAbusedWebServices=_ConnectiontoCommonlyAbusedWebServices,
       _ConnectiontoCommonlyAbusedFreeSSLCertificateProviders=_ConnectiontoCommonlyAbusedFreeSSLCertificateProviders,
       _RemoteFileDownloadviaDesktopimgdownldrUtility=_RemoteFileDownloadviaDesktopimgdownldrUtility,
       _RemoteFileDownloadviaMpCmdRun=_RemoteFileDownloadviaMpCmdRun,
       _RemoteFileCopyviaTeamViewer=_RemoteFileCopyviaTeamViewer,
       _PotentialCredentialAccessviaWindowsUtilities=_PotentialCredentialAccessviaWindowsUtilities,
       _NTDSorSAMDatabaseFileCopied=_NTDSorSAMDatabaseFileCopied,
       _CreationorModificationofDomainBackupDPAPIprivatekey=_CreationorModificationofDomainBackupDPAPIprivatekey,
       _CredentialAcquisitionviaRegistryHiveDumping=_CredentialAcquisitionviaRegistryHiveDumping,
       _MicrosoftIISServiceAccountPasswordDumped=_MicrosoftIISServiceAccountPasswordDumped,
       _MicrosoftIISConnectionStringsDecryption=_MicrosoftIISConnectionStringsDecryption,
       _KerberosTrafficfromUnusualProcess=_KerberosTrafficfromUnusualProcess,
       _LSASSMemoryDumpCreation=_LSASSMemoryDumpCreation,
       _MimikatzMemsspLogFileDetected=_MimikatzMemsspLogFileDetected,
       _MimikatzPowershellModuleActivity=_MimikatzPowershellModuleActivity,
       _ModificationofWDigestSecurityProvider=_ModificationofWDigestSecurityProvider,
       _NetworkLogonProviderRegistryModification=_NetworkLogonProviderRegistryModification,
       _SearchingforSavedCredentialsviaVaultCmd=_SearchingforSavedCredentialsviaVaultCmd,
       _AddingHiddenFileAttributeviaAttrib=_AddingHiddenFileAttributeviaAttrib,
       _ModificationofAmsiEnableRegistryKey=_ModificationofAmsiEnableRegistryKey,
       _ClearingWindowsEventLogs=_ClearingWindowsEventLogs,
       _SuspiciousProcessfromConhost=_SuspiciousProcessfromConhost,
       _CreationorModificationofRootCertificate=_CreationorModificationofRootCertificate,
       _WindowsDefenderDisabledviaRegistryModification=_WindowsDefenderDisabledviaRegistryModification,
       _WindowsDefenderExclusionsAddedviaPowerShell=_WindowsDefenderExclusionsAddedviaPowerShell,
       _DeleteVolumeUSNJournalwithFsutil=_DeleteVolumeUSNJournalwithFsutil,
       _DeletingBackupCatalogswithWbadmin=_DeletingBackupCatalogswithWbadmin,
       _DisableWindowsFirewallRulesviaNetsh=_DisableWindowsFirewallRulesviaNetsh,
       _DisablingWindowsDefenderSecuritySettingsviaPowerShell=_DisablingWindowsDefenderSecuritySettingsviaPowerShell,
       _DisableWindowsEventandSecurityLogsUsingBuiltinTools=_DisableWindowsEventandSecurityLogsUsingBuiltinTools,
       _SuspiciousNETCodeCompilation=_SuspiciousNETCodeCompilation,
       _RemoteDesktopEnabledinWindowsFirewall=_RemoteDesktopEnabledinWindowsFirewall,
       _EnableHostNetworkDiscoveryviaNetsh=_EnableHostNetworkDiscoveryviaNetsh,
       _ControlPanelProcesswithUnusualArguments=_ControlPanelProcesswithUnusualArguments,
       _ImageLoadviaWindowsUpdateAutoUpdateClient=_ImageLoadviaWindowsUpdateAutoUpdateClient,
       _MicrosoftBuildEngineStartedbyanOfficeApplication=_MicrosoftBuildEngineStartedbyanOfficeApplication,
       _MicrosoftBuildEngineStartedbyaScriptProcess=_MicrosoftBuildEngineStartedbyaScriptProcess,
       _MicrosoftBuildEngineStartedbyaSystemProcess=_MicrosoftBuildEngineStartedbyaSystemProcess,
       _MicrosoftBuildEngineUsinganAlternateName=_MicrosoftBuildEngineUsinganAlternateName,
       _MicrosoftBuildEngineStartedanUnusualProcess=_MicrosoftBuildEngineStartedanUnusualProcess,
       _PotentialDLLSideLoadingviaTrustedMicrosoftPrograms=_PotentialDLLSideLoadingviaTrustedMicrosoftPrograms,
       _PotentialDLLSideLoadingviaMicrosoftAntimalwareServiceExecutable=_PotentialDLLSideLoadingviaMicrosoftAntimalwareServiceExecutable,
       _ExecutableFileCreationwithMultipleExtensions=_ExecutableFileCreationwithMultipleExtensions,
       _EncodedExecutableStoredintheRegistry=_EncodedExecutableStoredintheRegistry,
       _IISHTTPLoggingDisabled=_IISHTTPLoggingDisabled,
       _SuspiciousEndpointSecurityParentProcess=_SuspiciousEndpointSecurityParentProcess,
       _RenamedAutoItScriptsInterpreter=_RenamedAutoItScriptsInterpreter,
       _SuspiciousWerFaultChildProcess=_SuspiciousWerFaultChildProcess,
       _ProgramFilesDirectoryMasquerading=_ProgramFilesDirectoryMasquerading,
       _ModificationofBootConfiguration=_ModificationofBootConfiguration,
       _PortForwardingRuleAddition=_PortForwardingRuleAddition,
       _ScheduledTasksATCommandEnabled=_ScheduledTasksATCommandEnabled,
       _PotentialSecureFileDeletionviaSDeleteUtility=_PotentialSecureFileDeletionviaSDeleteUtility,
       _SIPProviderModification=_SIPProviderModification,
       _SolarWindsProcessDisablingServicesviaRegistry=_SolarWindsProcessDisablingServicesviaRegistry,
       _SuspiciousCertUtilCommands=_SuspiciousCertUtilCommands,
       _SuspiciousExecutionfromaMountedDevice=_SuspiciousExecutionfromaMountedDevice,
       _SuspiciousZoomChildProcess=_SuspiciousZoomChildProcess,
       _UnusualExecutableFileCreationbyaSystemCriticalProcess=_UnusualExecutableFileCreationbyaSystemCriticalProcess,
       _UnusualFileCreationAlternateDataStream=_UnusualFileCreationAlternateDataStream,
       _UnusualProcessExecutionPathAlternateDataStream=_UnusualProcessExecutionPathAlternateDataStream,
       _UnusualChildProcessfromaSystemVirtualProcess=_UnusualChildProcessfromaSystemVirtualProcess,
       _PotentialEvasionviaFilterManager=_PotentialEvasionviaFilterManager,
       _VolumeShadowCopyDeletionviaWMIC=_VolumeShadowCopyDeletionviaWMIC,
       _WhitespacePaddinginProcessCommandLine=_WhitespacePaddinginProcessCommandLine,
       _AdFindCommandActivity=_AdFindCommandActivity,
       _EnumerationofAdministratorAccounts=_EnumerationofAdministratorAccounts,
       _NetcommandviaSYSTEMaccount=_NetcommandviaSYSTEMaccount,
       _WindowsNetworkEnumeration=_WindowsNetworkEnumeration,
       _PeripheralDeviceDiscovery=_PeripheralDeviceDiscovery,
       _RemoteSystemDiscoveryCommands=_RemoteSystemDiscoveryCommands,
       _SecuritySoftwareDiscoveryusingWMIC=_SecuritySoftwareDiscoveryusingWMIC,
       _CommandExecutionviaSolarWindsProcess=_CommandExecutionviaSolarWindsProcess,
       _SuspiciousSolarWindsChildProcess=_SuspiciousSolarWindsChildProcess,
       _ExecutionofCOMobjectviaXwizard=_ExecutionofCOMobjectviaXwizard,
       _SvchostspawningCmd=_SvchostspawningCmd,
       _UnusualParentProcessforcmdexe=_UnusualParentProcessforcmdexe,
       _CommandShellActivityStartedviaRunDLL=_CommandShellActivityStartedviaRunDLL,
       _EnumerationCommandSpawnedviaWMIPrvSE=_EnumerationCommandSpawnedviaWMIPrvSE,
       _ProcessExecutionfromanUnusualDirectory=_ProcessExecutionfromanUnusualDirectory,
       _ExecutionfromUnusualDirectoryCommandLine=_ExecutionfromUnusualDirectoryCommandLine,
       _ExecutionvialocalSxSSharedModule=_ExecutionvialocalSxSSharedModule,
       _SuspiciousCmdExecutionviaWMI=_SuspiciousCmdExecutionviaWMI,
       _SuspiciousWMIImageLoadfromMSOffice=_SuspiciousWMIImageLoadfromMSOffice,
       _SuspiciousPDFReaderChildProcess=_SuspiciousPDFReaderChildProcess,
       _SuspiciousPowerShellEngineImageLoad=_SuspiciousPowerShellEngineImageLoad,
       _SuspiciousProcessExecutionviaRenamedPsExecExecutable=_SuspiciousProcessExecutionviaRenamedPsExecExecutable,
       _SuspiciousExecutionShortProgramName=_SuspiciousExecutionShortProgramName,
       _ProcessActivityviaCompiledHTMLFile=_ProcessActivityviaCompiledHTMLFile,
       _ConhostSpawnedBySuspiciousParentProcess=_ConhostSpawnedBySuspiciousParentProcess,
       _ExecutionviaMSSQLxpcmdshellStoredProcedure=_ExecutionviaMSSQLxpcmdshellStoredProcedure,
       _VolumeShadowCopyDeletionviaVssAdmin=_VolumeShadowCopyDeletionviaVssAdmin,
       _WindowsScriptExecutingPowerShell=_WindowsScriptExecutingPowerShell,
       _MicrosoftExchangeServerUMSpawningSuspiciousProcesses=_MicrosoftExchangeServerUMSpawningSuspiciousProcesses,
       _MicrosoftExchangeWorkerSpawningSuspiciousProcesses=_MicrosoftExchangeWorkerSpawningSuspiciousProcesses,
       _SuspiciousMSOfficeChildProcess=_SuspiciousMSOfficeChildProcess,
       _SuspiciousMSOutlookChildProcess=_SuspiciousMSOutlookChildProcess,
       _UnusualFileModificationbydnsexe=_UnusualFileModificationbydnsexe,
       _SuspiciousExplorerChildProcess=_SuspiciousExplorerChildProcess,
       _NullSessionPipeRegistryModification=_NullSessionPipeRegistryModification,
       _ExecutionviaTSClientMountpoint=_ExecutionviaTSClientMountpoint,
       _MountingHiddenorWebDavRemoteShares=_MountingHiddenorWebDavRemoteShares,
       _RDPEnabledviaRegistry=_RDPEnabledviaRegistry,
       _PotentialRemoteDesktopTunnelingDetected=_PotentialRemoteDesktopTunnelingDetected,
       _RemoteFileCopytoaHiddenShare=_RemoteFileCopytoaHiddenShare,
       _ServiceControlSpawnedviaScriptInterpreter=_ServiceControlSpawnedviaScriptInterpreter,
       _SuspiciousRDPActiveXClientLoaded=_SuspiciousRDPActiveXClientLoaded,
       _LateralMovementviaStartupFolder=_LateralMovementviaStartupFolder,
       _AdobeHijackPersistence=_AdobeHijackPersistence,
       _RegistryPersistenceviaAppCertDLL=_RegistryPersistenceviaAppCertDLL,
       _RegistryPersistenceviaAppInitDLL=_RegistryPersistenceviaAppInitDLL,
       _CreationofaHiddenLocalUserAccount=_CreationofaHiddenLocalUserAccount,
       _ImageFileExecutionOptionsInjection=_ImageFileExecutionOptionsInjection,
       _SuspiciousStartupShellFolderModification=_SuspiciousStartupShellFolderModification,
       _CreationorModificationofanewGPOScheduledTaskorService=_CreationorModificationofanewGPOScheduledTaskorService,
       _PersistenceviaScheduledJobCreation=_PersistenceviaScheduledJobCreation,
       _PersistenceviaMicrosoftOfficeAddIns=_PersistenceviaMicrosoftOfficeAddIns,
       _PersistenceviaMicrosoftOutlookVBA=_PersistenceviaMicrosoftOutlookVBA,
       _PotentialModificationofAccessibilityBinaries=_PotentialModificationofAccessibilityBinaries,
       _UncommonRegistryPersistenceChange=_UncommonRegistryPersistenceChange,
       _StartuporRunKeyRegistryModification=_StartuporRunKeyRegistryModification,
       _UnusualPersistenceviaServicesRegistry=_UnusualPersistenceviaServicesRegistry,
       _ShortcutFileWrittenorModifiedforPersistence=_ShortcutFileWrittenorModifiedforPersistence,
       _PersistentScriptsintheStartupDirectory=_PersistentScriptsintheStartupDirectory,
       _ComponentObjectModelHijacking=_ComponentObjectModelHijacking,
       _SuspiciousImageLoadtaskschddllfromMSOffice=_SuspiciousImageLoadtaskschddllfromMSOffice,
       _SuspiciousExecutionviaScheduledTask=_SuspiciousExecutionviaScheduledTask,
       _SuspiciousImagePathServiceCreation=_SuspiciousImagePathServiceCreation,
       _SystemShellsviaServices=_SystemShellsviaServices,
       _PotentialPersistenceviaTimeProviderModification=_PotentialPersistenceviaTimeProviderModification,
       _UserAccountCreation=_UserAccountCreation,
       _PotentialApplicationShimmingviaSdbinst=_PotentialApplicationShimmingviaSdbinst,
       _PersistenceviaBITSJobNotifyCmdline=_PersistenceviaBITSJobNotifyCmdline,
       _PersistenceviaHiddenRunKeyDetected=_PersistenceviaHiddenRunKeyDetected,
       _InstallationofSecuritySupportProvider=_InstallationofSecuritySupportProvider,
       _PersistenceviaTelemetryControllerScheduledTaskHijack=_PersistenceviaTelemetryControllerScheduledTaskHijack,
       _PersistenceviaUpdateOrchestratorServiceHijack=_PersistenceviaUpdateOrchestratorServiceHijack,
       _PersistenceviaWMIEventSubscription=_PersistenceviaWMIEventSubscription,
       _PersistenceviaWMIStandardRegistryProvider=_PersistenceviaWMIStandardRegistryProvider,
       _WebshellDetectionScriptProcessChildofCommonWebProcesses=_WebshellDetectionScriptProcessChildofCommonWebProcesses,
       _DisablingUserAccountControlviaRegistryModification=_DisablingUserAccountControlviaRegistryModification,
       _PotentialLSAAuthenticationPackageAbuse=_PotentialLSAAuthenticationPackageAbuse,
       _PrivilegeEscalationviaNamedPipeImpersonation=_PrivilegeEscalationviaNamedPipeImpersonation,
       _SuspiciousDLLLoadedforPersistenceorPrivilegeEscalation=_SuspiciousDLLLoadedforPersistenceorPrivilegeEscalation,
       _PotentialPortMonitororPrintProcessorRegistrationAbuse=_PotentialPortMonitororPrintProcessorRegistrationAbuse,
       _PotentialPrintNightmareFileModification=_PotentialPrintNightmareFileModification,
       _PotentialPrintNightmareExploitRegistryModification=_PotentialPrintNightmareExploitRegistryModification,
       _SuspiciousPrintSpoolerServiceExecutableFileCreation=_SuspiciousPrintSpoolerServiceExecutableFileCreation,
       _SuspiciousPrintSpoolerFileDeletion=_SuspiciousPrintSpoolerFileDeletion,
       _SuspiciousPrintSpoolerSPLFileCreated=_SuspiciousPrintSpoolerSPLFileCreated,
       _PrivilegeEscalationviaWindirEnvironmentVariable=_PrivilegeEscalationviaWindirEnvironmentVariable,
       _UACBypassAttemptwithIEditionUpgradeManagerElevatedCOMInterface=_UACBypassAttemptwithIEditionUpgradeManagerElevatedCOMInterface,
       _UACBypassAttemptviaElevatedCOMInternetExplorerAddOnInstaller=_UACBypassAttemptviaElevatedCOMInternetExplorerAddOnInstaller,
       _UACBypassviaICMLuaUtilElevatedCOMInterface=_UACBypassviaICMLuaUtilElevatedCOMInterface,
       _UACBypassviaDiskCleanupScheduledTaskHijack=_UACBypassviaDiskCleanupScheduledTaskHijack,
       _UACBypassAttemptviaPrivilegedIFileOperationCOMInterface=_UACBypassAttemptviaPrivilegedIFileOperationCOMInterface,
       _BypassUACviaEventViewer=_BypassUACviaEventViewer,
       _UACBypassAttemptviaWindowsDirectoryMasquerading=_UACBypassAttemptviaWindowsDirectoryMasquerading,
       _UACBypassviaWindowsFirewallSnapInHijack=_UACBypassviaWindowsFirewallSnapInHijack,
       _UnusualParentChildRelationship=_UnusualParentChildRelationship,
       _UnusualPrintSpoolerChildProcess=_UnusualPrintSpoolerChildProcess,
       _UnusualServiceHostChildProcessChildlessService=_UnusualServiceHostChildProcessChildlessService,
    async=True)
